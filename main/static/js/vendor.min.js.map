{"version":3,"sources":["../../src/dom-utils/getWindow.js","../../src/dom-utils/instanceOf.js","../../src/utils/math.js","../../src/utils/userAgent.js","../../src/dom-utils/isLayoutViewport.js","../../src/dom-utils/getBoundingClientRect.js","../../src/dom-utils/getWindowScroll.js","../../src/dom-utils/getNodeName.js","../../src/dom-utils/getDocumentElement.js","../../src/dom-utils/getWindowScrollBarX.js","../../src/dom-utils/getComputedStyle.js","../../src/dom-utils/isScrollParent.js","../../src/dom-utils/getCompositeRect.js","../../src/dom-utils/getNodeScroll.js","../../src/dom-utils/getHTMLElementScroll.js","../../src/dom-utils/getLayoutRect.js","../../src/dom-utils/getParentNode.js","../../src/dom-utils/getScrollParent.js","../../src/dom-utils/listScrollParents.js","../../src/dom-utils/isTableElement.js","../../src/dom-utils/getOffsetParent.js","../../src/enums.js","../../src/utils/orderModifiers.js","../../src/dom-utils/contains.js","../../src/utils/rectToClientRect.js","../../src/dom-utils/getClippingRect.js","../../src/dom-utils/getViewportRect.js","../../src/dom-utils/getDocumentRect.js","../../src/utils/getBasePlacement.js","../../src/utils/getVariation.js","../../src/utils/getMainAxisFromPlacement.js","../../src/utils/computeOffsets.js","../../src/utils/mergePaddingObject.js","../../src/utils/getFreshSideObject.js","../../src/utils/expandToHashMap.js","../../src/utils/detectOverflow.js","../../src/createPopper.js","../../src/utils/debounce.js","../../src/utils/mergeByName.js","../../src/modifiers/eventListeners.js","../../src/modifiers/popperOffsets.js","../../src/modifiers/computeStyles.js","../../src/modifiers/applyStyles.js","../../src/modifiers/offset.js","../../src/utils/getOppositePlacement.js","../../src/utils/getOppositeVariationPlacement.js","../../src/utils/computeAutoPlacement.js","../../src/modifiers/flip.js","../../src/utils/within.js","../../src/modifiers/preventOverflow.js","../../src/utils/getAltAxis.js","../../src/modifiers/arrow.js","../../src/modifiers/hide.js","../../src/popper-lite.js","../../src/popper.js","../../js/src/dom/data.js","../../js/src/util/index.js","../../js/src/dom/event-handler.js","../../js/src/dom/manipulator.js","../../js/src/util/config.js","../../js/src/base-component.js","../../js/src/dom/selector-engine.js","../../js/src/util/component-functions.js","../../js/src/alert.js","../../js/src/button.js","../../js/src/util/swipe.js","../../js/src/carousel.js","../../js/src/collapse.js","../../js/src/dropdown.js","../../js/src/util/backdrop.js","../../js/src/util/focustrap.js","../../js/src/util/scrollbar.js","../../js/src/modal.js","../../js/src/offcanvas.js","../../js/src/util/sanitizer.js","../../js/src/util/template-factory.js","../../js/src/tooltip.js","../../js/src/popover.js","../../js/src/scrollspy.js","../../js/src/tab.js","../../js/src/toast.js","../../js/index.umd.js","jquery.min.js","simplebar.min.js","webpack://AutoNumeric/webpack/universalModuleDefinition","../src/js/waves.js","jquery.waypoints.min.js","jquery.counterup.min.js","webpack://feather/webpack/universalModuleDefinition","webpack://feather/webpack/bootstrap","webpack://feather/node_modules/core-js/internals/global.js","webpack://feather/node_modules/core-js/internals/has.js","webpack://feather/node_modules/core-js/internals/well-known-symbol.js","webpack://feather/node_modules/core-js/internals/an-object.js","webpack://feather/node_modules/core-js/internals/fails.js","webpack://feather/node_modules/core-js/internals/hide.js","webpack://feather/node_modules/core-js/internals/is-object.js","webpack://feather/node_modules/core-js/internals/object-define-property.js","webpack://feather/node_modules/core-js/internals/descriptors.js","webpack://feather/node_modules/core-js/internals/iterators.js","webpack://feather/node_modules/core-js/internals/create-property-descriptor.js","webpack://feather/node_modules/core-js/internals/shared.js","webpack://feather/src/icons.js","webpack://feather/node_modules/core-js/internals/enum-bug-keys.js","webpack://feather/node_modules/core-js/internals/to-indexed-object.js","webpack://feather/node_modules/core-js/internals/hidden-keys.js","webpack://feather/node_modules/core-js/internals/shared-key.js","webpack://feather/node_modules/core-js/internals/is-pure.js","webpack://feather/node_modules/core-js/internals/to-primitive.js","webpack://feather/node_modules/core-js/internals/set-global.js","webpack://feather/node_modules/core-js/internals/require-object-coercible.js","webpack://feather/node_modules/core-js/internals/to-integer.js","webpack://feather/node_modules/classnames/dedupe.js","webpack://feather/node_modules/core-js/internals/set-to-string-tag.js","webpack://feather/node_modules/core-js/internals/to-object.js","webpack://feather/node_modules/core-js/internals/object-get-prototype-of.js","webpack://feather/node_modules/core-js/internals/iterators-core.js","webpack://feather/node_modules/core-js/internals/to-length.js","webpack://feather/node_modules/core-js/internals/object-keys-internal.js","webpack://feather/node_modules/core-js/internals/redefine.js","webpack://feather/node_modules/core-js/internals/classof-raw.js","webpack://feather/node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack://feather/node_modules/core-js/internals/export.js","webpack://feather/node_modules/core-js/internals/uid.js","webpack://feather/node_modules/core-js/internals/document-create-element.js","webpack://feather/node_modules/core-js/internals/ie8-dom-define.js","webpack://feather/node_modules/core-js/internals/function-to-string.js","webpack://feather/node_modules/core-js/internals/internal-state.js","webpack://feather/src/replace.js","webpack://feather/src/to-svg.js","webpack://feather/src/icon.js","webpack://feather/src/index.js","webpack://feather/node_modules/core-js/internals/path.js","webpack://feather/node_modules/core-js/internals/check-correctness-of-iteration.js","webpack://feather/node_modules/core-js/internals/classof.js","webpack://feather/node_modules/core-js/internals/get-iterator-method.js","webpack://feather/node_modules/core-js/internals/create-property.js","webpack://feather/node_modules/core-js/internals/is-array-iterator-method.js","webpack://feather/node_modules/core-js/internals/call-with-safe-iteration-closing.js","webpack://feather/node_modules/core-js/internals/a-function.js","webpack://feather/node_modules/core-js/internals/bind-context.js","webpack://feather/node_modules/core-js/internals/array-from.js","webpack://feather/node_modules/core-js/modules/es.array.from.js","webpack://feather/node_modules/core-js/internals/validate-set-prototype-of-arguments.js","webpack://feather/node_modules/core-js/internals/object-set-prototype-of.js","webpack://feather/node_modules/core-js/internals/html.js","webpack://feather/node_modules/core-js/internals/object-keys.js","webpack://feather/node_modules/core-js/internals/object-define-properties.js","webpack://feather/node_modules/core-js/internals/object-create.js","webpack://feather/node_modules/core-js/internals/native-symbol.js","webpack://feather/node_modules/core-js/internals/correct-prototype-getter.js","webpack://feather/node_modules/core-js/internals/create-iterator-constructor.js","webpack://feather/node_modules/core-js/internals/is-forced.js","webpack://feather/node_modules/core-js/internals/object-get-own-property-symbols.js","webpack://feather/node_modules/core-js/internals/to-absolute-index.js","webpack://feather/node_modules/core-js/internals/array-includes.js","webpack://feather/node_modules/core-js/internals/object-get-own-property-names.js","webpack://feather/node_modules/core-js/internals/own-keys.js","webpack://feather/node_modules/core-js/internals/copy-constructor-properties.js","webpack://feather/node_modules/core-js/internals/indexed-object.js","webpack://feather/node_modules/core-js/internals/object-property-is-enumerable.js","webpack://feather/node_modules/core-js/internals/define-iterator.js","webpack://feather/(webpack)/buildin/global.js","webpack://feather/node_modules/core-js/internals/native-weak-map.js","webpack://feather/node_modules/core-js/internals/string-at.js","webpack://feather/node_modules/core-js/modules/es.string.iterator.js","webpack://feather/node_modules/core-js/es/array/from.js","webpack://AutoNumeric/webpack/bootstrap","webpack:/AutoNumeric/webpack/runtime/define property getters","webpack:/AutoNumeric/webpack/runtime/hasOwnProperty shorthand","webpack://AutoNumeric/src/AutoNumericEnum.js","webpack://AutoNumeric/src/AutoNumericHelper.js","webpack://AutoNumeric/src/maths/Evaluator.js","webpack://AutoNumeric/src/maths/ASTNode.js","webpack://AutoNumeric/src/maths/Token.js","webpack://AutoNumeric/src/maths/Lexer.js","webpack://AutoNumeric/src/maths/Parser.js","webpack://AutoNumeric/src/AutoNumeric.js","webpack://AutoNumeric/src/AutoNumericOptions.js","webpack://AutoNumeric/src/AutoNumericEvents.js","webpack://AutoNumeric/src/AutoNumericDefaultSettings.js","webpack://AutoNumeric/src/AutoNumericPredefinedOptions.js","webpack://AutoNumeric/src/main.js"],"names":["getWindow","node","window","toString","ownerDocument","defaultView","isElement","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","max","Math","min","round","getUAString","uaData","navigator","userAgentData","brands","Array","isArray","map","item","brand","version","join","userAgent","isLayoutViewport","test","getBoundingClientRect","element","includeScale","isFixedStrategy","clientRect","scaleX","scaleY","offsetWidth","width","offsetHeight","height","visualViewport","addVisualOffsets","x","left","offsetLeft","y","top","offsetTop","right","bottom","getWindowScroll","win","scrollLeft","pageXOffset","scrollTop","pageYOffset","getNodeName","nodeName","toLowerCase","getDocumentElement","document","documentElement","getWindowScrollBarX","getComputedStyle","isScrollParent","_getComputedStyle","overflow","overflowX","overflowY","getCompositeRect","elementOrVirtualElement","offsetParent","isFixed","isOffsetParentAnElement","offsetParentIsScaled","rect","isElementScaled","scroll","offsets","clientLeft","clientTop","getLayoutRect","abs","getParentNode","assignedSlot","parentNode","host","getScrollParent","indexOf","body","listScrollParents","list","_element$ownerDocumen","scrollParent","isBody","target","concat","updatedList","isTableElement","getTrueOffsetParent","position","getOffsetParent","isFirefox","currentNode","css","transform","perspective","contain","willChange","filter","getContainingBlock","auto","basePlacements","start","end","viewport","popper","variationPlacements","reduce","acc","placement","placements","modifierPhases","order","modifiers","Map","visited","Set","result","sort","modifier","add","name","requires","requiresIfExists","forEach","dep","has","depModifier","get","push","set","contains","parent","child","rootNode","getRootNode","next","isSameNode","rectToClientRect","Object","assign","getClientRectFromMixedType","clippingParent","strategy","html","clientWidth","clientHeight","layoutViewport","getViewportRect","getInnerBoundingClientRect","winScroll","scrollWidth","scrollHeight","direction","getDocumentRect","getClippingRect","boundary","rootBoundary","mainClippingParents","clippingParents","clipperElement","getClippingParents","firstClippingParent","clippingRect","accRect","getBasePlacement","split","getVariation","getMainAxisFromPlacement","computeOffsets","_ref","reference","basePlacement","variation","commonX","commonY","mainAxis","len","mergePaddingObject","paddingObject","expandToHashMap","value","keys","hashMap","key","detectOverflow","state","options","_options","_options$placement","_options$strategy","_options$boundary","_options$rootBoundary","_options$elementConte","elementContext","_options$altBoundary","altBoundary","_options$padding","padding","altContext","popperRect","rects","elements","clippingClientRect","contextElement","referenceClientRect","popperOffsets","popperClientRect","elementClientRect","overflowOffsets","offsetData","modifiersData","offset","multiply","axis","DEFAULT_OPTIONS","areValidElements","_len","arguments","length","args","_key","some","popperGenerator","generatorOptions","_generatorOptions","_generatorOptions$def","defaultModifiers","_generatorOptions$def2","defaultOptions","fn","pending","orderedModifiers","attributes","styles","effectCleanupFns","isDestroyed","instance","setOptions","setOptionsAction","cleanupModifierEffects","scrollParents","merged","phase","orderModifiers","current","existing","data","m","enabled","_ref$options","effect","cleanupFn","noopFn","update","forceUpdate","_state$elements","reset","index","_state$orderedModifie","_state$orderedModifie2","Promise","resolve","then","undefined","destroy","onFirstUpdate","passive","eventListeners","_options$scroll","_options$resize","resize","addEventListener","removeEventListener","popperOffsets$1","unsetSides","mapToStyles","_ref2","_Object$assign2","gpuAcceleration","adaptive","roundOffsets","_offsets$x","_offsets$y","_ref3","hasX","hasOwnProperty","hasY","sideX","sideY","heightProp","widthProp","_Object$assign","commonStyles","_ref4","dpr","devicePixelRatio","roundOffsetsByDPR","computeStyles$1","_ref5","_options$gpuAccelerat","_options$adaptive","_options$roundOffsets","arrow","applyStyles$1","style","removeAttribute","setAttribute","initialStyles","margin","property","attribute","offset$1","_options$offset","invertDistance","skidding","distance","distanceAndSkiddingToXY","_data$state$placement","hash","getOppositePlacement","replace","matched","getOppositeVariationPlacement","computeAutoPlacement","flipVariations","_options$allowedAutoP","allowedAutoPlacements","allPlacements","allowedPlacements","overflows","a","b","flip$1","_skip","_options$mainAxis","checkMainAxis","_options$altAxis","altAxis","checkAltAxis","specifiedFallbackPlacements","fallbackPlacements","_options$flipVariatio","preferredPlacement","oppositePlacement","getExpandedFallbackPlacements","referenceRect","checksMap","makeFallbackChecks","firstFittingPlacement","i","isStartVariation","isVertical","mainVariationSide","altVariationSide","checks","every","check","_loop","fittingPlacement","find","slice","within","mathMax","mathMin","preventOverflow$1","_options$tether","tether","_options$tetherOffset","tetherOffset","isBasePlacement","tetherOffsetValue","normalizedTetherOffsetValue","offsetModifierState","_offsetModifierState$","mainSide","altSide","additive","minLen","maxLen","arrowElement","arrowRect","arrowPaddingObject","arrowPaddingMin","arrowPaddingMax","arrowLen","minOffset","maxOffset","arrowOffsetParent","clientOffset","offsetModifierValue","tetherMax","preventedOffset","_offsetModifierState$2","isOriginSide","tetherMin","v","withinMaxClamp","arrow$1","_state$modifiersData$","toPaddingObject","minProp","maxProp","endDiff","startDiff","clientSize","centerToReference","center","axisProp","centerOffset","_options$element","querySelector","getSideOffsets","preventedOffsets","isAnySideFullyClipped","side","hide$1","preventOverflow","referenceOverflow","popperAltOverflow","referenceClippingOffsets","popperEscapeOffsets","isReferenceHidden","hasPopperEscaped","createPopper","computeStyles","applyStyles","flip","hide","elementMap","Data","instanceMap","size","console","error","from","remove","delete","TRANSITION_END","parseSelector","selector","CSS","escape","match","id","triggerTransitionEnd","dispatchEvent","Event","object","jquery","nodeType","getElement","isVisible","getClientRects","elementIsVisible","getPropertyValue","closedDetails","closest","summary","isDisabled","Node","ELEMENT_NODE","classList","disabled","hasAttribute","getAttribute","findShadowRoot","attachShadow","root","noop","reflow","getjQuery","jQuery","DOMContentLoadedCallbacks","isRTL","dir","defineJQueryPlugin","plugin","callback","$","NAME","JQUERY_NO_CONFLICT","jQueryInterface","Constructor","noConflict","readyState","execute","possibleCallback","defaultValue","executeAfterTransition","transitionElement","waitForTransition","emulatedDuration","transitionDuration","transitionDelay","floatTransitionDuration","Number","parseFloat","floatTransitionDelay","getTransitionDurationFromElement","called","handler","setTimeout","getNextActiveElement","activeElement","shouldGetNext","isCycleAllowed","listLength","namespaceRegex","stripNameRegex","stripUidRegex","eventRegistry","uidEvent","customEvents","mouseenter","mouseleave","nativeEvents","makeEventUid","uid","getElementEvents","findHandler","events","callable","delegationSelector","values","event","normalizeParameters","originalTypeEvent","delegationFunction","isDelegated","typeEvent","getTypeEvent","addHandler","oneOff","wrapFunction","relatedTarget","delegateTarget","call","this","handlers","previousFunction","domElements","querySelectorAll","domElement","hydrateObj","EventHandler","off","type","apply","bootstrapDelegationHandler","bootstrapHandler","removeHandler","Boolean","removeNamespacedHandlers","namespace","storeElementEvent","handlerKey","entries","includes","on","one","inNamespace","isNamespace","startsWith","elementEvent","keyHandlers","trigger","jQueryEvent","bubbles","nativeDispatch","defaultPrevented","isPropagationStopped","isImmediatePropagationStopped","isDefaultPrevented","evt","cancelable","preventDefault","obj","meta","_unused","defineProperty","configurable","normalizeData","JSON","parse","decodeURIComponent","normalizeDataKey","chr","Manipulator","setDataAttribute","removeDataAttribute","getDataAttributes","bsKeys","dataset","pureKey","charAt","getDataAttribute","Config","Default","DefaultType","Error","_getConfig","config","_mergeConfigObj","_configAfterMerge","_typeCheckConfig","jsonConfig","constructor","configTypes","expectedTypes","valueType","prototype","RegExp","TypeError","toUpperCase","BaseComponent","super","_element","_config","DATA_KEY","dispose","EVENT_KEY","propertyName","getOwnPropertyNames","_queueCallback","isAnimated","getInstance","getOrCreateInstance","VERSION","eventName","getSelector","hrefAttribute","trim","sel","SelectorEngine","findOne","children","matches","parents","ancestor","prev","previous","previousElementSibling","nextElementSibling","focusableChildren","focusables","el","getSelectorFromElement","getElementFromSelector","getMultipleElementsFromSelector","enableDismissTrigger","component","method","clickEvent","tagName","EVENT_CLOSE","EVENT_CLOSED","Alert","close","_destroyElement","each","SELECTOR_DATA_TOGGLE","Button","toggle","button","EVENT_TOUCHSTART","EVENT_TOUCHMOVE","EVENT_TOUCHEND","EVENT_POINTERDOWN","EVENT_POINTERUP","endCallback","leftCallback","rightCallback","Swipe","isSupported","_deltaX","_supportPointerEvents","PointerEvent","_initEvents","_start","_eventIsPointerPenTouch","clientX","touches","_end","_handleSwipe","_move","absDeltaX","pointerType","maxTouchPoints","DATA_API_KEY","ARROW_LEFT_KEY","ARROW_RIGHT_KEY","ORDER_NEXT","ORDER_PREV","DIRECTION_LEFT","DIRECTION_RIGHT","EVENT_SLIDE","EVENT_SLID","EVENT_KEYDOWN","EVENT_MOUSEENTER","EVENT_MOUSELEAVE","EVENT_DRAG_START","EVENT_LOAD_DATA_API","EVENT_CLICK_DATA_API","CLASS_NAME_CAROUSEL","CLASS_NAME_ACTIVE","SELECTOR_ACTIVE","SELECTOR_ITEM","SELECTOR_ACTIVE_ITEM","KEY_TO_DIRECTION","ARROW_LEFT_KEY$1","ARROW_RIGHT_KEY$1","interval","keyboard","pause","ride","touch","wrap","Carousel","_interval","_activeElement","_isSliding","touchTimeout","_swipeHelper","_indicatorsElement","_addEventListeners","cycle","_slide","nextWhenVisible","hidden","_clearInterval","_updateInterval","setInterval","_maybeEnableCycle","to","items","_getItems","activeIndex","_getItemIndex","_getActive","defaultInterval","_keydown","_addTouchEventListeners","img","swipeConfig","_directionToOrder","endCallBack","clearTimeout","_setActiveIndicatorElement","activeIndicator","newActiveIndicator","elementInterval","parseInt","isNext","nextElement","nextElementIndex","triggerEvent","_orderToDirection","isCycling","directionalClassName","orderClassName","completeCallBack","_isAnimated","clearInterval","carousel","slideIndex","carousels","EVENT_SHOW","EVENT_SHOWN","EVENT_HIDE","EVENT_HIDDEN","CLASS_NAME_SHOW","CLASS_NAME_COLLAPSE","CLASS_NAME_COLLAPSING","CLASS_NAME_DEEPER_CHILDREN","Collapse","_isTransitioning","_triggerArray","toggleList","elem","filterElement","foundElement","_initializeChildren","_addAriaAndCollapsedClass","_isShown","show","activeChildren","_getFirstLevelChildren","activeInstance","dimension","_getDimension","scrollSize","complete","selected","triggerArray","isOpen","ARROW_UP_KEY","ARROW_DOWN_KEY","EVENT_KEYDOWN_DATA_API","EVENT_KEYUP_DATA_API","SELECTOR_DATA_TOGGLE_SHOWN","SELECTOR_MENU","PLACEMENT_TOP","PLACEMENT_TOPEND","PLACEMENT_BOTTOM","PLACEMENT_BOTTOMEND","PLACEMENT_RIGHT","PLACEMENT_LEFT","autoClose","display","popperConfig","Dropdown","_popper","_parent","_menu","_inNavbar","_detectNavbar","_createPopper","focus","_completeHide","Popper","referenceElement","_getPopperConfig","_getPlacement","parentDropdown","isEnd","_getOffset","popperData","defaultBsPopperConfig","_selectMenuItem","clearMenus","openToggles","context","composedPath","isMenuTarget","dataApiKeydownHandler","isInput","isEscapeEvent","isUpOrDownEvent","getToggleButton","stopPropagation","EVENT_MOUSEDOWN","className","clickCallback","rootElement","Backdrop","_isAppended","_append","_getElement","_emulateAnimation","backdrop","createElement","append","EVENT_FOCUSIN","EVENT_KEYDOWN_TAB","TAB_NAV_BACKWARD","autofocus","trapElement","FocusTrap","_isActive","_lastTabNavDirection","activate","_handleFocusin","_handleKeydown","deactivate","shiftKey","SELECTOR_FIXED_CONTENT","SELECTOR_STICKY_CONTENT","PROPERTY_PADDING","PROPERTY_MARGIN","ScrollBarHelper","getWidth","documentWidth","innerWidth","_disableOverFlow","_setElementAttributes","calculatedValue","_resetElementAttributes","isOverflowing","_saveInitialAttribute","styleProperty","scrollbarWidth","_applyManipulationCallback","setProperty","actualValue","removeProperty","callBack","EVENT_HIDE_PREVENTED","EVENT_RESIZE","EVENT_CLICK_DISMISS","EVENT_MOUSEDOWN_DISMISS","EVENT_KEYDOWN_DISMISS","CLASS_NAME_OPEN","CLASS_NAME_STATIC","Modal","_dialog","_backdrop","_initializeBackDrop","_focustrap","_initializeFocusTrap","_scrollBar","_adjustDialog","_showElement","_hideModal","handleUpdate","modalBody","transitionComplete","_triggerBackdropTransition","event2","_resetAdjustments","isModalOverflowing","initialOverflowY","isBodyOverflowing","paddingLeft","paddingRight","showEvent","alreadyOpen","CLASS_NAME_SHOWING","CLASS_NAME_HIDING","OPEN_SELECTOR","Offcanvas","blur","completeCallback","DefaultAllowlist","area","br","col","code","dd","div","dl","dt","em","hr","h1","h2","h3","h4","h5","h6","li","ol","p","pre","s","small","span","sub","sup","strong","u","ul","uriAttributes","SAFE_URL_PATTERN","allowedAttribute","allowedAttributeList","attributeName","nodeValue","attributeRegex","regex","allowList","content","extraClass","sanitize","sanitizeFn","template","DefaultContentType","entry","TemplateFactory","getContent","_resolvePossibleFunction","hasContent","changeContent","_checkContent","toHtml","templateWrapper","innerHTML","_maybeSanitize","text","_setContent","arg","templateElement","_putElementInTemplate","textContent","unsafeHtml","sanitizeFunction","createdDocument","DOMParser","parseFromString","elementName","attributeList","allowedAttributes","sanitizeHtml","DISALLOWED_ATTRIBUTES","CLASS_NAME_FADE","SELECTOR_TOOLTIP_INNER","SELECTOR_MODAL","EVENT_MODAL_HIDE","TRIGGER_HOVER","TRIGGER_FOCUS","AttachmentMap","AUTO","TOP","RIGHT","BOTTOM","LEFT","animation","container","customClass","delay","title","Tooltip","_isEnabled","_timeout","_isHovered","_activeTrigger","_templateFactory","_newContent","tip","_setListeners","_fixTitle","enable","disable","toggleEnabled","click","_leave","_enter","_hideModalHandler","_disposePopper","_isWithContent","isInTheDom","_getTipElement","_isWithActiveTrigger","_getTitle","_createTipElement","_getContentForTemplate","_getTemplateFactory","tipId","prefix","floor","random","getElementById","getUID","setContent","_initializeOnDelegatedTarget","_getDelegateConfig","attachment","triggers","eventIn","eventOut","_setTimeout","timeout","dataAttributes","dataAttribute","SELECTOR_TITLE","SELECTOR_CONTENT","Popover","_getContent","EVENT_ACTIVATE","EVENT_CLICK","SELECTOR_TARGET_LINKS","SELECTOR_NAV_LINKS","SELECTOR_LINK_ITEMS","rootMargin","smoothScroll","threshold","ScrollSpy","_targetLinks","_observableSections","_rootElement","_activeTarget","_observer","_previousScrollData","visibleEntryTop","parentScrollTop","refresh","_initializeTargetsAndObservables","_maybeEnableSmoothScroll","disconnect","_getNewObserver","section","observe","observableSection","scrollTo","behavior","IntersectionObserver","_observerCallback","targetElement","_process","userScrollsDown","isIntersecting","_clearActiveClass","entryIsLowerThanPrevious","targetLinks","anchor","decodeURI","_activateParents","listGroup","activeNodes","spy","HOME_KEY","END_KEY","SELECTOR_DROPDOWN_TOGGLE","NOT_SELECTOR_DROPDOWN_TOGGLE","SELECTOR_INNER_ELEM","SELECTOR_DATA_TOGGLE_ACTIVE","Tab","_setInitialAttributes","_getChildren","innerElem","_elemIsActive","active","_getActiveElem","hideEvent","_deactivate","_activate","relatedElem","_toggleDropDown","nextActiveElement","preventScroll","_setAttributeIfNotExists","_setInitialAttributesOnChild","_getInnerElement","isActive","outerElem","_getOuterElement","_setInitialAttributesOnTargetPanel","open","EVENT_MOUSEOVER","EVENT_MOUSEOUT","EVENT_FOCUSOUT","CLASS_NAME_HIDE","autohide","Toast","_hasMouseInteraction","_hasKeyboardInteraction","_clearTimeout","_maybeScheduleHide","isShown","_onInteraction","isInteracting","e","t","module","exports","ie","oe","r","getPrototypeOf","ae","g","flat","se","n","ue","o","le","C","src","nonce","noModule","head","appendChild","removeChild","l","ce","init","c","fe","toArray","pushStack","merge","prevObject","first","eq","last","even","grep","odd","splice","extend","isPlainObject","expando","isReady","isEmptyObject","globalEval","makeArray","inArray","isXMLDoc","namespaceURI","guid","support","Symbol","iterator","pe","pop","de","he","ge","ve","compareDocumentPosition","f","charCodeAt","escapeSelector","ye","me","w","T","d","k","S","E","W","h","j","A","D","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","N","q","L","H","O","P","String","fromCharCode","M","V","R","J","childNodes","I","exec","getElementsByTagName","getElementsByClassName","U","scope","Y","Q","re","cacheLength","shift","F","B","_","z","X","webkitMatchesSelector","msMatchesSelector","getById","getElementsByName","disconnectedMatch","cssHas","getAttributeNode","sortDetached","matchesSelector","attr","attrHandle","uniqueSort","sortStable","expr","createPseudo","relative","preFilter","firstChild","lastChild","pseudos","setFilters","not","ne","lang","location","hasFocus","href","tabIndex","checked","selectedIndex","empty","nextSibling","header","input","lt","gt","nth","radio","checkbox","file","password","image","submit","G","K","Z","ee","te","filters","unique","compile","select","setDocument","tokenize","getText","isXML","selectors","is","parseHTML","ready","contents","prevAll","addBack","parentsUntil","nextAll","nextUntil","prevUntil","siblings","contentDocument","reverse","promise","done","fail","Callbacks","once","stopOnFalse","memory","lock","locked","fireWith","fire","fired","Deferred","always","catch","pipe","progress","notify","reject","notifyWith","resolveWith","exceptionHook","rejectWith","getErrorHook","getStackHook","when","warn","message","stack","readyException","readyWait","doScroll","cache","access","hasData","removeData","_data","_removeData","queue","dequeue","_queueHooks","unshift","stop","clearQueue","source","composed","cur","cssNumber","unit","xe","be","we","Te","Ce","createDocumentFragment","checkClone","cloneNode","noCloneChecked","option","ke","thead","tr","td","_default","Se","Ee","tbody","tfoot","colgroup","caption","th","optgroup","je","Ae","htmlPrefilter","createTextNode","De","Ne","qe","Le","He","isTrigger","special","delegateType","stopImmediatePropagation","global","create","handle","triggered","dispatch","bindType","origType","delegateCount","setup","teardown","removeEvent","fix","preDispatch","currentTarget","rnamespace","handleObj","postDispatch","addProp","enumerable","originalEvent","writable","load","noBubble","beforeunload","returnValue","timeStamp","Date","now","isSimulated","altKey","changedTouches","ctrlKey","detail","eventPhase","metaKey","pageX","pageY","view","char","charCode","keyCode","buttons","clientY","offsetX","offsetY","pointerId","screenX","screenY","targetTouches","toElement","which","documentMode","simulate","pointerenter","pointerleave","Oe","Pe","Me","Re","Ie","We","Fe","$e","clone","_evalUrl","Be","cleanData","detach","prepend","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","_e","ze","Xe","opener","Ue","Ve","Ge","pixelBoxStyles","minWidth","maxWidth","Ye","cssText","marginLeft","backgroundClip","clearCloneStyle","boxSizingReliable","pixelPosition","reliableMarginLeft","scrollboxSize","reliableTrDimensions","borderTopWidth","borderBottomWidth","Qe","Je","Ke","Ze","cssProps","et","tt","visibility","nt","letterSpacing","fontWeight","rt","it","ceil","ot","at","cssHooks","opacity","animationIterationCount","aspectRatio","borderImageSlice","columnCount","flexGrow","flexShrink","gridArea","gridColumn","gridColumnEnd","gridColumnStart","gridRow","gridRowEnd","gridRowStart","lineHeight","orphans","scale","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeMiterlimit","strokeOpacity","isFinite","border","expand","Tween","prop","easing","propHooks","run","duration","pos","step","fx","linear","swing","cos","PI","st","ut","ct","ft","pt","requestAnimationFrame","tick","ht","vt","yt","tweeners","prefilters","startTime","tweens","props","opts","specialEasing","originalProperties","originalOptions","createTween","bind","timer","anim","Animation","tweener","unqueued","prefilter","speed","speeds","old","fadeTo","animate","finish","timers","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","slow","fast","checkOn","optSelected","radioValue","mt","xt","removeAttr","attrHooks","bt","wt","Tt","Ct","kt","removeProp","propFix","for","class","addClass","removeClass","toggleClass","hasClass","St","val","valHooks","Et","jt","At","parseXML","Dt","Nt","parentWindow","triggerHandler","qt","Lt","Ht","Ot","Pt","param","encodeURIComponent","serialize","serializeArray","Mt","Rt","It","Wt","Ft","$t","Bt","_t","zt","Xt","Ut","Vt","dataTypes","Gt","ajaxSettings","flatOptions","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","xml","json","responseFields","converters","ajaxSetup","ajaxPrefilter","ajaxTransport","ajax","statusCode","getResponseHeader","getAllResponseHeaders","setRequestHeader","overrideMimeType","mimeType","status","abort","dataType","crossDomain","traditional","ifModified","headers","beforeSend","success","send","dataFilter","statusText","getJSON","getScript","wrapAll","firstElementChild","wrapInner","unwrap","visible","xhr","XMLHttpRequest","Yt","Qt","cors","username","xhrFields","onload","onerror","onabort","ontimeout","onreadystatechange","responseType","responseText","binary","response","script","scriptAttrs","charset","scriptCharset","Jt","Kt","Zt","jsonp","jsonpCallback","createHTMLDocument","implementation","animated","setOffset","using","Height","Width","unbind","delegate","undelegate","hover","en","proxy","holdReady","parseJSON","isFunction","isWindow","camelCase","isNumeric","isNaN","define","amd","tn","nn","factory","SimpleBar","setPrototypeOf","__proto__","globalThis","self","Function","toStringTag","NaN","valueOf","leading","maxWait","trailing","cancel","flush","freeze","addClasses","canUseDOM","classNamesToQuery","getElementDocument","getElementWindow","getOptions","removeClasses","removePreventClickId","minScrollbarWidth","stopScrollDelay","isScrolling","isMouseEntering","isDragging","scrollXTicking","scrollYTicking","wrapperEl","contentWrapperEl","contentEl","offsetEl","maskEl","placeholderEl","heightAutoObserverWrapperEl","heightAutoObserverEl","rtlHelpers","resizeObserver","mutationObserver","elStyles","isRtl","mouseX","mouseY","onMouseMove","onWindowResize","onStopScrolling","onMouseEntered","onScroll","scrollX","scrollY","classNames","scrolling","showScrollbar","positionScrollbar","_onStopScrolling","autoHide","hideScrollbar","onMouseEnter","mouseEntered","_onMouseEntered","_onMouseMove","forceVisible","onMouseMoveForAxis","onMouseLeave","onMouseLeaveForAxis","_onWindowResize","getScrollbarWidth","hideNativeScrollbar","onPointerEvent","track","scrollbar","isWithinBounds","onDragStart","onTrackClick","drag","draggedAxis","sizeAttr","scrollSizeAttr","offsetAttr","dragOffset","getRtlHelpers","isScrollingToNegative","scrollOffsetAttr","onEndDrag","dragging","preventClick","offsetSizeAttr","overflowAttr","getOffset","isScrollOriginAtZero","initDOM","recalculate","initListeners","wrapper","scrollableNode","contentWrapper","contentNode","mask","findChild","placeholder","horizontal","vertical","ResizeObserver","MutationObserver","childList","subtree","characterData","paddingTop","paddingBottom","getScrollbarSize","toggleTrackVisibility","scrollbarMinSize","scrollbarMaxSize","scrollable","clickOnTrack","getContentElement","getScrollElement","removeListeners","unMount","mozMatchesSelector","ariaLabel","helpers","instances","initDOMLoadedElements","removeObserver","globalObserver","initHtmlApi","handleMutations","addedNodes","removedNodes","WeakMap","Waves","isObject","getWavesElements","nodes","stringRepr","$$","isDOMNode","docElem","box","doc","convertStyle","styleObj","removeRipple","ripple","relativeX","relativeY","translate","Effect","-webkit-transition-duration","-moz-transition-duration","-o-transition-duration","transition-duration","-webkit-transform","-moz-transform","-ms-transform","-o-transform","showEffect","TouchHandler","allowEvent","srcElement","parentElement","SVGElement","getWavesEffectElement","registerEvent","hideEffect","touchMove","moveEvent","isTouchAvailable","velocity","rippleStyle","ripples","TagWrapper","elementStyle","color","backgroundColor","allow","eType","attach","classes","elementsLen","wait","centre","mousedown","mouseup","calm","displayEffect","Adapter","defaults","adapter","triggerPoint","group","Group","findOrCreate","Context","findOrCreateByElement","offsetAliases","queueTrigger","invokeAll","destroyAll","disableAll","enableAll","refreshAll","viewportHeight","innerHeight","viewportWidth","adapters","continuous","outerHeight","outerWidth","Waypoint","didScroll","didResize","oldScroll","waypoints","waypointContextKey","windowContext","createThrottledScrollHandler","createThrottledResizeHandler","checkEmpty","handleResize","handleScroll","isTouch","newScroll","forward","backward","flushTriggers","contextOffset","contextScroll","contextDimension","offsetProp","findByElement","mozRequestAnimationFrame","webkitRequestAnimationFrame","clearTriggerQueues","triggerQueues","up","down","$element","waypoint","Zepto","counterUp","settings","time","beginAt","formatter","$this","counter","nums","divisions","num","isComma","decimalPlaces","isTime","times","newNum","toFixed","hours","minutes","seconds","counterUpper","feather","installedModules","__webpack_require__","moduleId","modules","getter","__esModule","default","shared","NATIVE_SYMBOL","store","DESCRIPTORS","definePropertyModule","createPropertyDescriptor","IE8_DOM_DEFINE","anObject","toPrimitive","nativeDefineProperty","Attributes","fails","bitmap","setGlobal","IS_PURE","mode","copyright","icons","Icon","tags","icon","IndexedObject","requireObjectCoercible","argument","__WEBPACK_AMD_DEFINE_RESULT__","StorageObject","_parseArray","resultSet","array","_parse","hasOwn","SPACE","argType","str","classSet","TO_STRING_TAG","STATIC","toObject","sharedKey","CORRECT_PROTOTYPE_GETTER","IE_PROTO","ObjectPrototype","IteratorPrototype","PrototypeOfArrayIteratorPrototype","arrayIterator","wellKnownSymbol","ITERATOR","BUGGY_SAFARI_ITERATORS","toInteger","toIndexedObject","arrayIncludes","hiddenKeys","arrayIndexOf","names","nativeFunctionToString","InternalStateModule","getInternalState","enforceInternalState","enforce","TEMPLATE","unsafe","simple","noTargetGet","propertyIsEnumerableModule","nativeGetOwnPropertyDescriptor","getOwnPropertyDescriptor","redefine","copyConstructorProperties","isForced","targetProperty","sourceProperty","descriptor","TARGET","GLOBAL","stat","forced","sham","postfix","exist","NATIVE_WEAK_MAP","objectHas","wmget","wmhas","wmset","metadata","STATE","getterFor","TYPE","attrs","elementsToReplace","elementAttrs","svgString","toSvg","_extends","_dedupe2","svgElement","DEFAULT_ATTRS","combinedAttrs","SAFE_CLOSING","iteratorWithReturn","return","SKIP_CLOSING","ITERATION_SUPPORT","classofRaw","CORRECT_ARGUMENTS","tag","callee","classof","Iterators","propertyKey","ArrayPrototype","ENTRIES","returnMethod","aFunction","that","callWithSafeIterationClosing","isArrayIteratorMethod","toLength","createProperty","getIteratorMethod","arrayLike","argumentsLength","mapfn","mapping","iteratorMethod","iterable","proto","validateSetPrototypeOfArguments","setter","correctSetter","internalObjectKeys","enumBugKeys","objectKeys","defineProperties","Properties","documentCreateElement","Empty","createDict","iframeDocument","iframe","contentWindow","write","getOwnPropertySymbols","setToStringTag","returnThis","IteratorConstructor","replacement","feature","detection","normalize","POLYFILL","NATIVE","string","integer","toAbsoluteIndex","IS_INCLUDES","fromIndex","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","Reflect","ownKeys","getOwnPropertyDescriptorModule","propertyIsEnumerable","nativePropertyIsEnumerable","NASHORN_BUG","1","createIteratorConstructor","IteratorsCore","Iterable","DEFAULT","IS_SET","FORCED","CurrentIteratorPrototype","methods","KEY","getIterationMethod","KIND","defaultIterator","IterablePrototype","INCORRECT_VALUES_NAME","nativeIterator","anyNativeIterator","eval","CONVERT_TO_STRING","second","codePointAt","defineIterator","setInternalState","iterated","point","path","definition","AutoNumericEnum","allowedTagList","fromCharCodeKeyCode","keyName","Unidentified","AndroidDefault","Alt","AltGr","CapsLock","Ctrl","Fn","FnLock","Hyper","Meta","OSLeft","OSRight","Command","NumLock","ScrollLock","Shift","Super","SymbolLock","Enter","Space","LeftArrow","UpArrow","RightArrow","DownArrow","End","Home","PageUp","PageDown","Backspace","Clear","Copy","CrSel","Cut","Delete","EraseEof","ExSel","Insert","Paste","Redo","Undo","Accept","Again","Attn","Cancel","ContextMenu","Esc","Execute","Find","Finish","Help","Pause","Play","Props","Select","ZoomIn","ZoomOut","BrightnessDown","BrightnessUp","Eject","LogOff","Power","PowerOff","PrintScreen","Hibernate","Standby","WakeUp","Compose","Dead","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","Print","num0","num1","num2","num3","num4","num5","num6","num7","num8","num9","Semicolon","Equal","Comma","Hyphen","Minus","Plus","Dot","Slash","Backquote","LeftParenthesis","RightParenthesis","LeftBracket","RightBracket","Backslash","Quote","numpad0","numpad1","numpad2","numpad3","numpad4","numpad5","numpad6","numpad7","numpad8","numpad9","NumpadDot","NumpadDotAlt","NumpadMultiply","NumpadPlus","NumpadMinus","NumpadSubtract","NumpadSlash","NumpadDotObsoleteBrowsers","NumpadMultiplyObsoleteBrowsers","NumpadPlusObsoleteBrowsers","NumpadMinusObsoleteBrowsers","NumpadSlashObsoleteBrowsers","_allFnKeys","_someNonPrintableKeys","_directionKeys","AutoNumericHelper","lowercaseValue","_typeof","latinConvertedNumber","arabicToLatinNumbers","isNumber","func","needle","isString","isUndefined","arr","decimalPart","_slicedToArray","lastIndexOf","isSeleniumBot","keyCodeNumber","potentialResult","isUndefinedOrNullOrEmpty","tem","ua","appName","appVersion","webdriver","numberOrNumericString","negativeSignCharacter","checkEverywhere","isNegativeStrict","numericString","valueString","leftBracket","rightBracket","newCharacter","substr","minimumValue","maximumValue","formattedNumberString","caretPosition","decimalCharacter","numberDotOrNegativeSign","numberDotAndNegativeSignCount","rawNumberString","caretPositionInRawValue","formattedNumberStringIndex","formattedNumberStringSize","rawNumberStringSize","rawNumberStringIndex","character","charCounter","characterCount","isSelectionStartUndefined","selectionStart","selectionInfo","getSelection","getRangeAt","startOffset","endOffset","selectionEnd","isInputElement","setSelectionRange","isNull","range","createRange","setStart","setEnd","selection","removeAllRanges","addRange","WheelEvent","wheelEvent","isWheelEvent","deltaY","throwError","_String$split4","integerPart","stepPlace","isAddition","decimalPlacesRawValue","forceDecimalPlaces","absValue","rawValueMinimumOffset","pow","minimumOffsetFirstDecimalPlaceIndex","indexFirstNonZeroDecimalPlace","roundToNearest","lengthValue","decimalPlacesLimit","modifyAndRoundToNearestAuto","arabicNumbers","returnANumber","parseDecimalCharacter","parseThousandSeparator","resultAsNumber","CustomEvent","createEvent","initCustomEvent","nL","search","xc","yc","xNeg","strLength","domElementOrSelector","setCustomValidity","separator","skipFirstWord","word","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","TEXT_NODE","excludedElements","_this","isInArray","_numericString$split2","trimmedDecimalPart","hoveredElements","_toConsumableArray","arrLength","mapObjects","as","numericValue","_val$split2","exponent","isNegative","isNegativeExponent","_value$split2","int","float","insertAt","repeat","Evaluator","ast","evaluate","ASTNode","Token","_createClass","symbol","Lexer","textLength","token","_skipSpaces","isDigit","_getNumber","startIndex","substring","Parser","customDecimalCharacter","lexer","getNextToken","_exp","termNode","_term","exprNode","_moreExp","createNode","createLeaf","factorNode","_factor","termsNode","_moreTerms","expression","factor","createUnaryNode","_match","expected","getIndex","AutoNumeric","arg1","arg2","arg3","_AutoNumeric$_setArgu","_setArgumentsValues","initialValue","userOptions","defaultRawValue","_setSettings","_checkElement","savedCancellableValue","historyTable","historyTableIndex","onGoingRedo","parentForm","_getParentForm","runOnce","formatOnPageLoad","_formatDefaultValueOnPageLoad","valueToSet","emptyInputBehavior","zero","press","null","_setElementAndRawValue","hasEventListeners","isContentEditable","noEventListeners","_createEventListeners","_setWritePermissions","_saveInitialValues","storageNamePrefix","_setPersistentStorageName","validState","isFocused","isDropEvent","isEditing","rawValueOnFocus","internalModification","attributeToWatch","_getAttributeToWatch","getterSetter","_addWatcher","createLocalList","_createLocalList","_addToGlobalList","newValue","autoNumericLocalList","aNObject","setUnformatted","_executeCallback","getNumericString","getFormatted","getNumber","getLocalized","reformat","unformat","unformatLocalized","forcedOutputFormat","newOptions","isPristine","checkOnlyRawValue","clear","forceClearAll","wipe","nuke","domElementOrAutoNumericObject","addObject","otherAutoNumericObject","getAutoNumericElement","_hasLocalList","mergedLocalLists","otherANLocalList","_getLocalList","mergeMaps","_addToLocalList","_setLocalList","removeObject","keepCurrentANObject","initialCompleteLocalList","keepEachANObjectInItsOwnList","getList","rawValue","defaultSettings","allowDecimalPadding","alwaysAllowDecimalCharacter","caretPositionOnFocus","_deleteLocalList","currencySymbol","currencySymbolPlacement","decimalCharacterAlternative","warning","showWarnings","decimalPlacesShownOnBlur","decimalPlacesShownOnFocus","defaultValueOverride","digitalGroupSpacing","digitGroupSeparator","divisorWhenUnfocused","eventBubbles","eventIsCancelable","failOnUnknownOption","formulaMode","historySize","invalidClass","isCancellable","leadingZero","modifyValueOnUpDownArrow","modifyValueOnWheel","negativeBracketsTypeOnBlur","negativePositiveSignPlacement","negativePositiveSignBehavior","noEvents","addEvents","_removeEventListeners","onInvalidPaste","outputFormat","overrideMinMaxLimits","positiveSignCharacter","rawValueDivisor","readOnly","roundingMethod","saveValueToSessionStorage","symbolWhenUnfocused","selectNumberOnly","selectOnFocus","serializeSpaces","showOnlyNumbersOnFocus","showPositiveSign","styleRules","suffixText","unformatOnHover","unformatOnSubmit","upDownStep","valuesToStrings","watchExternalChanges","wheelOn","wheelStep","_triggerEvent","initialized","getElementValue","newRawValue","aNElement","initialValueHtmlAttribute","scientificToDecimal","_this2","_onFocusInFunc","_onFocusIn","_onFocusInAndMouseEnterFunc","_onFocusInAndMouseEnter","_onFocusFunc","_onFocus","_onKeydownFunc","_onKeydown","_onKeypressFunc","_onKeypress","_onKeyupFunc","_onKeyup","_onFocusOutAndMouseLeaveFunc","_onFocusOutAndMouseLeave","_onPasteFunc","_onPaste","_onWheelFunc","_onWheel","_onDropFunc","_onDrop","_onKeydownGlobalFunc","_onKeydownGlobal","_onKeyupGlobalFunc","_onKeyupGlobal","_setupFormListener","_doesGlobalListExists","_removeFormListener","_this3","_onFormSubmitFunc","_onFormSubmit","_onFormResetFunc","_onFormReset","_hasParentFormCounter","_incrementParentFormCounter","_initializeFormCounterToOne","_storeFormHandlerFunction","anCount","_getParentFormCounter","_getFormHandlerFunction","submitFn","resetFn","_removeFormDataSetInfo","_decrementParentFormCounter","formElement","_getFormElement","_doesFormHandlerListExists","_createFormHandlerList","formHandlerName","randomString","anFormHandler","aNFormHandlerMap","_hasFormHandlerFunction","_getFormHandlerKey","_setReadOnly","_setReadWrite","_this4","_this$getterSetter","_this5","_this$getterSetter2","isEmptyHistoryTable","_historyTableCurrentValueUsed","addNewHistoryState","nextHistoryStateIndex","arrayTrim","getElementSelection","_historyTableForget","undoInfo","setElementSelection","_historyTableUndoOrRedo","numberOfEntriesToForget","shiftedAway","indexToUse","_this6","positive","_addCSSClass","_removeCSSClass","negative","ranges","userDefined","userObject","callbackResult","userClass","isInt","cssClassName","_this7","_len2","_key2","originalSettings","cloneObject","optionsToUse","optionObject","_isPreDefinedOptionValid","_getOptionObject","_updateEventListeners","saveChangeToHistory","_saveValueToPersistentStorage","_toNumericValue","setValue","_this$constructor$_ch2","_checkIfInRangeWithOverrideOption","minTest","maxTest","_checkValuesToStrings","isZeroOrHasNoValue","forcedRawValue","_roundRawValue","_trimLeadingAndTrailingZeros","_getRawValueToFormat","_roundFormattedValueShownOnFocus","_roundFormattedValueShownOnBlur","_modifyNegativeSignAndDecimalCharacterForFormattedValue","_addGroupSeparators","_setValidOrInvalidState","_triggerRangeEvents","_removeValueFromPersistentStorage","strippedValue","_removeBrackets","normalizedValue","_stripAllNonNumberCharacters","_isWithinRangeWithOverrideOption","_this8","oldRawValue","_isUserManuallyEditingTheValue","rawValueModified","_parseStyleRules","_historyTableAdd","newElementValue","sendFormattedEvent","oldElementValue","setElementValue","formatted","oldValue","isBoolean","_setElementValue","_setRawValue","_checkValuesToStringsArray","valuesToStringsKeys","trimPaddedZerosFromDecimalPlaces","_toLocale","outputFormatToUse","isEmptyString","keep","selectNumber","_defaultSelectAll","unformattedValue","valueLen","currencySymbolSize","negLen","suffixTextLen","suffix","isPositive","none","elementValue","decimalCount","domElementToDetach","otherAnElement","_removeFromLocalList","reFormat","valueOrElement","optionOverride","_formatOrUnformatOther","stringOrElement","isFormatting","valueOrStringOrElement","settingsToUse","_cloneAndMergeSettings","format","domElementOrArrayOrString","_this9","attached","returnASingleAutoNumericObject","domElementsArray","currentLocalList","autoNumericObjectsArray","originalCreateLocalListSetting","newAutoNumericElement","temporaryForcedOptions","_removeWatcher","_removeFromGlobalList","newParentForm","oldANChildren","_getFormAutoNumericChildren","_this10","inputElementsList","nonInputContentEditableElementsList","_getContenteditableElements","arrayUnique","isManagedByAutoNumeric","elementsInside","elementsOutside","form","_serializeNumericString","_serializeFormatted","_serializeLocalized","_serializeNumericStringArray","_serializeFormattedArray","_serializeLocalizedArray","stringify","formArrayNumericString","formArrayFormatted","formArrayLocalized","_getChildANInputElement","formUnformat","formReformat","formNumericString","formFormatted","formUnformatLocalized","formLocalized","formJsonNumericString","formJsonFormatted","formJsonLocalized","localList","autoNumericObject","_len3","newSettings","_key3","_len4","_key4","predefinedOption","_mergeSettings","_updatePredefinedOptions","getPredefinedOptions","French","NorthAmerican","British","Swiss","Japanese","Spanish","Chinese","Brazilian","htmlAttribute","camelize","isTrailingNegative","isNegativeSignAllowed","doNotSelect","isValueNegative","totalLength","valueSize","integerSize","hasDecimalChar","offsetDecimalChar","decimalLeft","decimalRight","signToUse","positiveNegativeSignSize","minRangeExceeded","maxRangeExceeded","setInvalidState","invalidValue","setValidState","correctedValue","invalid","minRangeOk","_isMinimumRangeRespected","maxRangeOk","_isMaximumRangeRespected","_setValidState","_setInvalidState","originalDigitGroupSeparator","originalCurrencySymbol","originalSuffixText","rawValueStorageName","sessionStorage","setItem","getItem","removeItem","_unformatAltHovered","hoveredWithAlt","_reformatAltHovered","elementValueToSet","rawValueToFormat","roundedValue","_roundFormattedValueShownOnFocusOrBlur","onlyNumbers","valueOnFocus","lastVal","isEmptyValue","_isElementValueEmptyOrOnlyTheNegativeSign","orderedValue","_orderValueCurrencySymbolAndSuffixText","orderedValueTest","_saveCancellableValue","_initialCaretPosition","formula","invalidFormula","validFormula","eventKey","getHoveredElement","_updateEventKeyInfo","keydownEventCounter","initialValueOnFirstKeydown","initialRawValueOnFirstKeydown","_exitFormulaMode","_acceptNonPrintableKeysInFormulaMode","_enterFormulaMode","upDownArrowAction","processed","native","targetValue","change","_updateInternalProperties","_processNonPrintableKeysAndShortcuts","isDeletionAllowed","_processCharacterDeletion","_formatValue","throwInput","formulaChars","_processCharacterInsertion","_historyTableRedo","_historyTableUndo","cutNumber","_setCaretPosition","skip","valuePartsBeforePaste","_saveRawValueForAndroid","_stripAllNonNumberCharactersExceptCustomDecimalChar","_convertToNumericString","isRawValueNull","_this$constructor$_ch4","elementValueIsAlreadySet","_roundValue","_modifyNegativeSignAndDecimalCharacterForRawValue","groupedValue","never","floats","_onBlur","rawPastedText","eventTarget","clipboardData","getData","explicitOriginalTarget","initialFormattedValue","selectionSize","untranslatedPastedText","_preparePastedText","pastedRawValue","isPasteNegative","pastedText","caretPositionOnInitialTextAfterPasting","isPasteNegativeAndInitialValueIsPositive","isInitialValueNegative","leftFormattedPart","rightFormattedPart","setRawNegativeSign","convertCharacterCountToIndexPosition","countNumberCharactersOnTheCaretLeftSide","leftPart","rightPart","leftPartContainedADot","negativePasteOnNegativeNumber","truncate","minParse","parseStr","maxParse","lastGoodKnownResult","pastedTextIndex","modifiedLeftPart","_checkIfInRange","lastGoodKnownResultIndex","lastGoodKnownResultSize","replaceCharAt","ignore","clamp","indexSelectionEndInRawValue","selectedText","countCharInText","valueHasBeenSet","valueHasBeenClamped","clampedValue","clampToRangeLimits","caretPositionInFormattedNumber","findCaretPositionInFormattedNumber","isUp","isDown","currentUnformattedValue","stepToUse","addAndRoundToNearestAuto","subtractAndRoundToNearestAuto","_setSelection","_wheelAndUpDownActions","wheelAction","scrollBy","isDeltaYZero","isWheelUpEvent","isWheelDownEvent","isWheelEventWithZeroDeltaY","droppedText","dataTransfer","cleanedValue","unformatOther","previousValue","_this11","_unformatOnSubmit","_this12","_getDefaultValue","hoveredElement","anElement","currentElementTag","_isElementTagSupported","_isInputElement","_isInputTypeSupported","_isContentEditable","currentValue","forcedInitialValue","unLocalizedCurrentValue","_getValueFromPersistentStorage","toStrip","Infinity","maximumValueIntegerPart","minimumValueIntegerPart","mIntPos","mIntNeg","_convertOldOptionsToNewOnes","originalDecimalPlacesRawValue","originalDecimalPlaces","_calculateDecimalPlacesOnUpdate","getDefaultConfig","caretFix","_transformOptionsValuesToDefaultTypes","_runCallbacksFoundInTheSettingsObject","_correctNegativePositiveSignPlacementOption","_correctCaretPositionOnFocusAndSelectOnFocusOptions","_setNegativePositiveSignPermissions","_calculateDecimalPlacesOnInit","_calculateVMinAndVMaxIntegerSizes","_setTrailingNegativeSignInfo","_cachesUsualRegularExpressions","_setBrackets","_calculateValuesToStringsKeys","isEmptyObj","validate","_keepAnOriginalSettingsCopy","_this$_getLeftAndRigh2","_getLeftAndRightPartAroundTheSelection","stripZeros","deny","aNegRegAutoStrip","isPaste","_this$_normalizeParts2","_normalizeParts","normalizedLeft","normalizedRight","normalizedNewValue","_AutoNumeric$_checkIf2","testValue","_truncateDecimalPlaces","valueToSetOnEmpty","roundedValueToShow","currencySymbolLen","_this$_getSignPositio2","_getSignPosition","signPosition","currencySymbolPosition","oldParts","_this$_getLeftAndRigh4","_setValueParts","_checkPaste","_shouldSkipEventKey","_expandSelectionOnSign","isValNegative","_this$_getUnformatted4","_getUnformattedLeftAndRightPartAroundTheSelection","_this$_getUnformatted2","_this$_processCharact2","_processCharacterDeletionIfTrailingNegativeSign","_this$_getUnformatted6","_isDecimalCharacterInsertionAllowed","eventNumber","subParts","negativeSign","leftReg","leftAr","signParts","escapeChr","escapedParts","miniParts","newLeft","isArg1Element","isArg1String","isArg2Object","isArg2Array","isArg2Number","isNumberOrArabic","isArg2PreDefinedOptionName","isArg2Null","isArg2EmptyString","isArg3Object","isArg3Array","isArg3Null","isArg3PreDefinedOptionName","mergeOptions","optionsArray","_this13","mergedOptions","optionObjectOrPredefinedOptionString","preDefinedOptionName","predefinedOptions","optionObjectOrPredefinedName","stringsArray","formNode","_this14","inputList","autoNumericInputs","_isInGlobalList","weakMapName","autoNumericGlobalListName","_createWeakMap","_createGlobalList","_getFromGlobalList","getSettings","shouldExtendDefaultOptions","isOriginalOptionAnObject","isTrueOrFalseString","testPositiveInteger","testNumericalCharacters","testFloatOrIntegerAndPossibleNegativeSign","testPositiveFloatOrInteger","doNoForceCaretPosition","comma","dot","normalSpace","thinSpace","narrowNoBreakSpace","noBreakSpace","noSeparator","apostrophe","arabicThousandsSeparator","dotAbove","privateUseTwo","two","twoThree","twoScaled","three","four","middleDot","arabicDecimalSeparator","decimalSeparatorKeySymbol","_ref6","ceiling","_validateDecimalPlacesRawValue","halfUpSymmetric","halfUpAsymmetric","halfDownSymmetric","halfDownAsymmetric","halfEvenBankersRounding","upRoundAwayFromZero","downRoundTowardZero","toCeilingTowardPositiveInfinity","toFloorTowardNegativeInfinity","toNearest05","toNearest05Alt","upToNext05","downToNext05","parentheses","brackets","chevrons","curlyBraces","angleBrackets","japaneseQuotationMarks","halfBrackets","whiteSquareBrackets","quotationMarks","guillemets","number","negativeDot","negativeComma","dotNegative","commaNegative","plus","percent","rule","isValid","optionsResult","_this15","numericStringOrDomElement","_len5","_key5","_generateOptionsObjectFromOptionsArray","isPositiveSignAllowed","_checkValuesToStringsSettings","formattedValue","isNumberStrict","_len6","_key6","_checkStringsToValuesSettings","objectKeyLookup","_settings$negativeBra2","firstBracket","lastBracket","localizedValue","localize","_get","getFunction","_normalizeCurrencySuffixAndNegativeSignCharacters","allowedAutoStrip","numRegAutoStrip","_s$split2","modifiedIntegerPart","stripReg","_addBrackets","rearrangeSignsAndValueOrder","_mergeCurrencySignNegativePositiveSignAndValue","_settings$negativeBra4","convertToNumber","temp","hyphen","locale","signOnEmpty","inputValue","currentRawValue","isNegativeWithBrackets","decimalPlacesToRoundTo","_inputValue$split2","_inputValue$split4","digitalGroup","_toggleNegativeBracket","roundedInputValue","decimalPlacesNeeded","_roundCloseTo05","temporaryDecimalPlacesOverride","_AutoNumeric$_prepare2","_prepareValueForRounding","decimalCharacterPosition","inputValueHasNoDot","_inputValue$split6","roundedStrLength","decimalPositionToUse","checkDecimalPlaces","inputValueRounded","zeros","_truncateZeros","lastDigit","inputValueArray","_shouldRoundUp","modifiedDecimalPart","valParse","testMinMax","_this$_checkIfInRange2","_cleanValueForRangeParse","useDefault","additionalDecimalPlacesRawValue","currentSettings","decimalPlacesInOptions","negativeSignReg","oldOptionsConverter","aSep","nSep","dGroup","aDec","altDec","aSign","pSign","pNeg","aSuffix","oLimits","vMax","vMin","mDec","eDec","scaleDecimal","aStor","mRound","aPad","nBracket","wEmpty","lZero","aForm","sNumber","anDefault","unSetOnSubmit","outputType","debug","parsedMinValue","parsedMaxValue","parsedValue","eventKeyName","isFnKeys","isOSKeys","isContextMenu","isSomeNonPrintableKeys","isOtherNonPrintableKeys","isUnrecognizableKeys","finalResult","_this16","intoAnArray","formatType","serializedSpaceCharacter","valueResult","_serialize","_defineProperty","multiple","exclude","filterOut","isInitialValueArrayAndNotEmpty","secondArgumentIsInitialValueArray","secondArgumentIsOptionArray","typeOfFirstArrayElement","thirdArgumentIsOptionArray","initialValueArraySize","isInitialValueNumber","alwaysAllow","doNotAllow","createList","doNotCreateList","currencySign","austral","australCentavo","baht","cedi","cent","colon","cruzeiro","dollar","dong","drachma","dram","european","euro","florin","franc","guarani","hryvnia","kip","att","lepton","lira","liraOld","lari","mark","mill","naira","peseta","peso","pfennig","pound","real","riel","ruble","rupee","rupeeOld","shekel","shekelAlt","taka","tenge","togrog","won","yen","five","six","doNotOverride","percentage","permille","basisPoint","doesNotBubble","isCancelable","isNotCancelable","doNotFormat","verySmall","medium","large","veryLarge","insane","MAX_SAFE_INTEGER","cancellable","notCancellable","tenTrillions","oneBillion","modifyValue","doNothing","minus","heavyMinus","fullWidthHyphen","circledMinus","squaredMinus","triangleMinus","plusMinus","minusPlus","dotMinus","minusTilde","doNotToggle","fullWidthPlus","heavyPlus","doublePlus","triplePlus","circledPlus","squaredPlus","trianglePlus","dotPlus","altHebrewPlus","readWrite","save","doNotSave","selectNumbersOnly","selectAll","showAll","positiveNegative","range0To100With4Steps","evenOdd","rangeSmallAndZero","doNotUnformat","keepCurrentValue","progressive","zeroDash","oneAroundZero","watch","doNotWatch","optionName","valuesToStringObjectName","japanese","euroPos","euroNeg","euroSpace","euroSpacePos","euroSpaceNeg","percentageEU2dec","percentageEU2decPos","percentageEU2decNeg","percentageEU3dec","percentageEU3decPos","percentageEU3decNeg","dollarPos","dollarNeg","dollarNegBrackets","percentageUS2dec","percentageUS2decPos","percentageUS2decNeg","percentageUS3dec","percentageUS3decPos","percentageUS3decNeg","turkish","Turkish","dotDecimalCharCommaSeparator","commaDecimalCharDotSeparator","integerPos","integerNeg","floatPos","floatNeg","numeric","numericPos","numericNeg"],"mappings":"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","file":"vendor.min.js","sourcesContent":["// @flow\nimport type { Window } from '../types';\ndeclare function getWindow(node: Node | Window): Window;\n\nexport default function getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    const ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}\n","// @flow\nimport getWindow from './getWindow';\n\ndeclare function isElement(node: mixed): boolean %checks(node instanceof\n  Element);\nfunction isElement(node) {\n  const OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\ndeclare function isHTMLElement(node: mixed): boolean %checks(node instanceof\n  HTMLElement);\nfunction isHTMLElement(node) {\n  const OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\ndeclare function isShadowRoot(node: mixed): boolean %checks(node instanceof\n  ShadowRoot);\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nexport { isElement, isHTMLElement, isShadowRoot };\n","// @flow\nexport const max = Math.max;\nexport const min = Math.min;\nexport const round = Math.round;\n","// @flow\ntype Navigator = Navigator & { userAgentData?: NavigatorUAData };\n\ninterface NavigatorUAData {\n  brands: Array<{ brand: string, version: string }>;\n  mobile: boolean;\n  platform: string;\n}\n\nexport default function getUAString(): string {\n  const uaData = (navigator: Navigator).userAgentData;\n\n  if (uaData?.brands && Array.isArray(uaData.brands)) {\n    return uaData.brands\n      .map((item) => `${item.brand}/${item.version}`)\n      .join(' ');\n  }\n\n  return navigator.userAgent;\n}\n","// @flow\nimport getUAString from '../utils/userAgent';\n\nexport default function isLayoutViewport() {\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\n}\n","// @flow\nimport type { ClientRectObject, VirtualElement } from '../types';\nimport { isElement, isHTMLElement } from './instanceOf';\nimport { round } from '../utils/math';\nimport getWindow from './getWindow';\nimport isLayoutViewport from './isLayoutViewport';\n\nexport default function getBoundingClientRect(\n  element: Element | VirtualElement,\n  includeScale: boolean = false,\n  isFixedStrategy: boolean = false\n): ClientRectObject {\n  const clientRect = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX =\n      (element: HTMLElement).offsetWidth > 0\n        ? round(clientRect.width) / (element: HTMLElement).offsetWidth || 1\n        : 1;\n    scaleY =\n      (element: HTMLElement).offsetHeight > 0\n        ? round(clientRect.height) / (element: HTMLElement).offsetHeight || 1\n        : 1;\n  }\n\n  const { visualViewport } = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n\n  const x =\n    (clientRect.left +\n      (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) /\n    scaleX;\n  const y =\n    (clientRect.top +\n      (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) /\n    scaleY;\n  const width = clientRect.width / scaleX;\n  const height = clientRect.height / scaleY;\n\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y,\n  };\n}\n","// @flow\nimport getWindow from './getWindow';\nimport type { Window } from '../types';\n\nexport default function getWindowScroll(node: Node | Window) {\n  const win = getWindow(node);\n  const scrollLeft = win.pageXOffset;\n  const scrollTop = win.pageYOffset;\n\n  return {\n    scrollLeft,\n    scrollTop,\n  };\n}\n","// @flow\nimport type { Window } from '../types';\n\nexport default function getNodeName(element: ?Node | Window): ?string {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}\n","// @flow\nimport { isElement } from './instanceOf';\nimport type { Window } from '../types';\n\nexport default function getDocumentElement(\n  element: Element | Window\n): HTMLElement {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return (\n    (isElement(element)\n      ? element.ownerDocument\n      : // $FlowFixMe[prop-missing]\n        element.document) || window.document\n  ).documentElement;\n}\n","// @flow\nimport getBoundingClientRect from './getBoundingClientRect';\nimport getDocumentElement from './getDocumentElement';\nimport getWindowScroll from './getWindowScroll';\n\nexport default function getWindowScrollBarX(element: Element): number {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return (\n    getBoundingClientRect(getDocumentElement(element)).left +\n    getWindowScroll(element).scrollLeft\n  );\n}\n","// @flow\nimport getWindow from './getWindow';\n\nexport default function getComputedStyle(\n  element: Element\n): CSSStyleDeclaration {\n  return getWindow(element).getComputedStyle(element);\n}\n","// @flow\nimport getComputedStyle from './getComputedStyle';\n\nexport default function isScrollParent(element: HTMLElement): boolean {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\n","// @flow\nimport type { Rect, VirtualElement, Window } from '../types';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport getNodeScroll from './getNodeScroll';\nimport getNodeName from './getNodeName';\nimport { isHTMLElement } from './instanceOf';\nimport getWindowScrollBarX from './getWindowScrollBarX';\nimport getDocumentElement from './getDocumentElement';\nimport isScrollParent from './isScrollParent';\nimport { round } from '../utils/math';\n\nfunction isElementScaled(element: HTMLElement) {\n  const rect = element.getBoundingClientRect();\n  const scaleX = round(rect.width) / element.offsetWidth || 1;\n  const scaleY = round(rect.height) / element.offsetHeight || 1;\n\n  return scaleX !== 1 || scaleY !== 1;\n}\n\n// Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\nexport default function getCompositeRect(\n  elementOrVirtualElement: Element | VirtualElement,\n  offsetParent: Element | Window,\n  isFixed: boolean = false\n): Rect {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const offsetParentIsScaled =\n    isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(\n    elementOrVirtualElement,\n    offsetParentIsScaled,\n    isFixed\n  );\n\n  let scroll = { scrollLeft: 0, scrollTop: 0 };\n  let offsets = { x: 0, y: 0 };\n\n  if (isOffsetParentAnElement || (!isOffsetParentAnElement && !isFixed)) {\n    if (\n      getNodeName(offsetParent) !== 'body' ||\n      // https://github.com/popperjs/popper-core/issues/1078\n      isScrollParent(documentElement)\n    ) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height,\n  };\n}\n","// @flow\nimport getWindowScroll from './getWindowScroll';\nimport getWindow from './getWindow';\nimport { isHTMLElement } from './instanceOf';\nimport getHTMLElementScroll from './getHTMLElementScroll';\nimport type { Window } from '../types';\n\nexport default function getNodeScroll(node: Node | Window) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}\n","// @flow\n\nexport default function getHTMLElementScroll(element: HTMLElement) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop,\n  };\n}\n","// @flow\nimport type { Rect } from '../types';\nimport getBoundingClientRect from './getBoundingClientRect';\n\n// Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\nexport default function getLayoutRect(element: HTMLElement): Rect {\n  const clientRect = getBoundingClientRect(element);\n\n  // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n  let width = element.offsetWidth;\n  let height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width,\n    height,\n  };\n}\n","// @flow\nimport getNodeName from './getNodeName';\nimport getDocumentElement from './getDocumentElement';\nimport { isShadowRoot } from './instanceOf';\n\nexport default function getParentNode(element: Node | ShadowRoot): Node {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (\n    // this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || // DOM Element detected\n    (isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n  );\n}\n","// @flow\nimport getParentNode from './getParentNode';\nimport isScrollParent from './isScrollParent';\nimport getNodeName from './getNodeName';\nimport { isHTMLElement } from './instanceOf';\n\nexport default function getScrollParent(node: Node): HTMLElement {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}\n","// @flow\nimport getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport getWindow from './getWindow';\nimport type { Window, VisualViewport } from '../types';\nimport isScrollParent from './isScrollParent';\n\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\nexport default function listScrollParents(\n  element: Node,\n  list: Array<Element | Window> = []\n): Array<Element | Window | VisualViewport> {\n  const scrollParent = getScrollParent(element);\n  const isBody = scrollParent === element.ownerDocument?.body;\n  const win = getWindow(scrollParent);\n  const target = isBody\n    ? [win].concat(\n        win.visualViewport || [],\n        isScrollParent(scrollParent) ? scrollParent : []\n      )\n    : scrollParent;\n  const updatedList = list.concat(target);\n\n  return isBody\n    ? updatedList\n    : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n      updatedList.concat(listScrollParents(getParentNode(target)));\n}\n","// @flow\nimport getNodeName from './getNodeName';\n\nexport default function isTableElement(element: Element): boolean {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}\n","// @flow\nimport getWindow from './getWindow';\nimport getNodeName from './getNodeName';\nimport getComputedStyle from './getComputedStyle';\nimport { isHTMLElement, isShadowRoot } from './instanceOf';\nimport isTableElement from './isTableElement';\nimport getParentNode from './getParentNode';\nimport getUAString from '../utils/userAgent';\n\nfunction getTrueOffsetParent(element: Element): ?Element {\n  if (\n    !isHTMLElement(element) ||\n    // https://github.com/popperjs/popper-core/issues/837\n    getComputedStyle(element).position === 'fixed'\n  ) {\n    return null;\n  }\n\n  return element.offsetParent;\n}\n\n// `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\nfunction getContainingBlock(element: Element) {\n  const isFirefox = /firefox/i.test(getUAString());\n  const isIE = /Trident/i.test(getUAString());\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    const elementCss = getComputedStyle(element);\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  let currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (\n    isHTMLElement(currentNode) &&\n    ['html', 'body'].indexOf(getNodeName(currentNode)) < 0\n  ) {\n    const css = getComputedStyle(currentNode);\n\n    // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n    if (\n      css.transform !== 'none' ||\n      css.perspective !== 'none' ||\n      css.contain === 'paint' ||\n      ['transform', 'perspective'].indexOf(css.willChange) !== -1 ||\n      (isFirefox && css.willChange === 'filter') ||\n      (isFirefox && css.filter && css.filter !== 'none')\n    ) {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nexport default function getOffsetParent(element: Element) {\n  const window = getWindow(element);\n\n  let offsetParent = getTrueOffsetParent(element);\n\n  while (\n    offsetParent &&\n    isTableElement(offsetParent) &&\n    getComputedStyle(offsetParent).position === 'static'\n  ) {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (\n    offsetParent &&\n    (getNodeName(offsetParent) === 'html' ||\n      (getNodeName(offsetParent) === 'body' &&\n        getComputedStyle(offsetParent).position === 'static'))\n  ) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n","// @flow\nexport const top: 'top' = 'top';\nexport const bottom: 'bottom' = 'bottom';\nexport const right: 'right' = 'right';\nexport const left: 'left' = 'left';\nexport const auto: 'auto' = 'auto';\nexport type BasePlacement =\n  | typeof top\n  | typeof bottom\n  | typeof right\n  | typeof left;\nexport const basePlacements: Array<BasePlacement> = [top, bottom, right, left];\n\nexport const start: 'start' = 'start';\nexport const end: 'end' = 'end';\nexport type Variation = typeof start | typeof end;\n\nexport const clippingParents: 'clippingParents' = 'clippingParents';\nexport const viewport: 'viewport' = 'viewport';\nexport type Boundary = Element | Array<Element> | typeof clippingParents;\nexport type RootBoundary = typeof viewport | 'document';\n\nexport const popper: 'popper' = 'popper';\nexport const reference: 'reference' = 'reference';\nexport type Context = typeof popper | typeof reference;\n\nexport type VariationPlacement =\n  | 'top-start'\n  | 'top-end'\n  | 'bottom-start'\n  | 'bottom-end'\n  | 'right-start'\n  | 'right-end'\n  | 'left-start'\n  | 'left-end';\nexport type AutoPlacement = 'auto' | 'auto-start' | 'auto-end';\nexport type ComputedPlacement = VariationPlacement | BasePlacement;\nexport type Placement = AutoPlacement | BasePlacement | VariationPlacement;\n\nexport const variationPlacements: Array<VariationPlacement> = basePlacements.reduce(\n  (acc: Array<VariationPlacement>, placement: BasePlacement) =>\n    acc.concat([(`${placement}-${start}`: any), (`${placement}-${end}`: any)]),\n  []\n);\nexport const placements: Array<Placement> = [...basePlacements, auto].reduce(\n  (\n    acc: Array<Placement>,\n    placement: BasePlacement | typeof auto\n  ): Array<Placement> =>\n    acc.concat([\n      placement,\n      (`${placement}-${start}`: any),\n      (`${placement}-${end}`: any),\n    ]),\n  []\n);\n\n// modifiers that need to read the DOM\nexport const beforeRead: 'beforeRead' = 'beforeRead';\nexport const read: 'read' = 'read';\nexport const afterRead: 'afterRead' = 'afterRead';\n// pure-logic modifiers\nexport const beforeMain: 'beforeMain' = 'beforeMain';\nexport const main: 'main' = 'main';\nexport const afterMain: 'afterMain' = 'afterMain';\n// modifier with the purpose to write to the DOM (or write into a framework state)\nexport const beforeWrite: 'beforeWrite' = 'beforeWrite';\nexport const write: 'write' = 'write';\nexport const afterWrite: 'afterWrite' = 'afterWrite';\nexport const modifierPhases: Array<ModifierPhases> = [\n  beforeRead,\n  read,\n  afterRead,\n  beforeMain,\n  main,\n  afterMain,\n  beforeWrite,\n  write,\n  afterWrite,\n];\n\nexport type ModifierPhases =\n  | typeof beforeRead\n  | typeof read\n  | typeof afterRead\n  | typeof beforeMain\n  | typeof main\n  | typeof afterMain\n  | typeof beforeWrite\n  | typeof write\n  | typeof afterWrite;\n","// @flow\nimport type { Modifier } from '../types';\nimport { modifierPhases } from '../enums';\n\n// source: https://stackoverflow.com/questions/49875255\nfunction order(modifiers) {\n  const map = new Map();\n  const visited = new Set();\n  const result = [];\n\n  modifiers.forEach(modifier => {\n    map.set(modifier.name, modifier);\n  });\n\n  // On visiting object, check for its dependencies and visit them recursively\n  function sort(modifier: Modifier<any, any>) {\n    visited.add(modifier.name);\n\n    const requires = [\n      ...(modifier.requires || []),\n      ...(modifier.requiresIfExists || []),\n    ];\n\n    requires.forEach(dep => {\n      if (!visited.has(dep)) {\n        const depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n\n    result.push(modifier);\n  }\n\n  modifiers.forEach(modifier => {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n\n  return result;\n}\n\nexport default function orderModifiers(\n  modifiers: Array<Modifier<any, any>>\n): Array<Modifier<any, any>> {\n  // order based on dependencies\n  const orderedModifiers = order(modifiers);\n\n  // order based on phase\n  return modifierPhases.reduce((acc, phase) => {\n    return acc.concat(\n      orderedModifiers.filter(modifier => modifier.phase === phase)\n    );\n  }, []);\n}\n","// @flow\nimport { isShadowRoot } from './instanceOf';\n\nexport default function contains(parent: Element, child: Element) {\n  const rootNode = child.getRootNode && child.getRootNode();\n\n  // First, attempt with faster native method\n  if (parent.contains(child)) {\n    return true;\n  }\n  // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n    do {\n      if (next && parent.isSameNode(next)) {\n        return true;\n      }\n      // $FlowFixMe[prop-missing]: need a better way to handle this...\n      next = next.parentNode || next.host;\n    } while (next);\n  }\n\n  // Give up, the result is false\n  return false;\n}\n","// @flow\nimport type { Rect, ClientRectObject } from '../types';\n\nexport default function rectToClientRect(rect: Rect): ClientRectObject {\n  return {\n    ...rect,\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height,\n  };\n}\n","// @flow\nimport type { ClientRectObject, PositioningStrategy } from '../types';\nimport type { Boundary, RootBoundary } from '../enums';\nimport { viewport } from '../enums';\nimport getViewportRect from './getViewportRect';\nimport getDocumentRect from './getDocumentRect';\nimport listScrollParents from './listScrollParents';\nimport getOffsetParent from './getOffsetParent';\nimport getDocumentElement from './getDocumentElement';\nimport getComputedStyle from './getComputedStyle';\nimport { isElement, isHTMLElement } from './instanceOf';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport getParentNode from './getParentNode';\nimport contains from './contains';\nimport getNodeName from './getNodeName';\nimport rectToClientRect from '../utils/rectToClientRect';\nimport { max, min } from '../utils/math';\n\nfunction getInnerBoundingClientRect(\n  element: Element,\n  strategy: PositioningStrategy\n) {\n  const rect = getBoundingClientRect(element, false, strategy === 'fixed');\n\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n\n  return rect;\n}\n\nfunction getClientRectFromMixedType(\n  element: Element,\n  clippingParent: Element | RootBoundary,\n  strategy: PositioningStrategy\n): ClientRectObject {\n  return clippingParent === viewport\n    ? rectToClientRect(getViewportRect(element, strategy))\n    : isElement(clippingParent)\n    ? getInnerBoundingClientRect(clippingParent, strategy)\n    : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n}\n\n// A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\nfunction getClippingParents(element: Element): Array<Element> {\n  const clippingParents = listScrollParents(getParentNode(element));\n  const canEscapeClipping =\n    ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  const clipperElement =\n    canEscapeClipping && isHTMLElement(element)\n      ? getOffsetParent(element)\n      : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  }\n\n  // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n  return clippingParents.filter(\n    (clippingParent) =>\n      isElement(clippingParent) &&\n      contains(clippingParent, clipperElement) &&\n      getNodeName(clippingParent) !== 'body'\n  );\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping parents\nexport default function getClippingRect(\n  element: Element,\n  boundary: Boundary,\n  rootBoundary: RootBoundary,\n  strategy: PositioningStrategy\n): ClientRectObject {\n  const mainClippingParents =\n    boundary === 'clippingParents'\n      ? getClippingParents(element)\n      : [].concat(boundary);\n  const clippingParents = [...mainClippingParents, rootBoundary];\n  const firstClippingParent = clippingParents[0];\n\n  const clippingRect = clippingParents.reduce((accRect, clippingParent) => {\n    const rect = getClientRectFromMixedType(element, clippingParent, strategy);\n\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent, strategy));\n\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n\n  return clippingRect;\n}\n","// @flow\nimport getWindow from './getWindow';\nimport getDocumentElement from './getDocumentElement';\nimport getWindowScrollBarX from './getWindowScrollBarX';\nimport isLayoutViewport from './isLayoutViewport';\nimport type { PositioningStrategy } from '../types';\n\nexport default function getViewportRect(\n  element: Element,\n  strategy: PositioningStrategy\n) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n\n    const layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || (!layoutViewport && strategy === 'fixed')) {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x: x + getWindowScrollBarX(element),\n    y,\n  };\n}\n","// @flow\nimport type { Rect } from '../types';\nimport getDocumentElement from './getDocumentElement';\nimport getComputedStyle from './getComputedStyle';\nimport getWindowScrollBarX from './getWindowScrollBarX';\nimport getWindowScroll from './getWindowScroll';\nimport { max } from '../utils/math';\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\nexport default function getDocumentRect(element: HTMLElement): Rect {\n  const html = getDocumentElement(element);\n  const winScroll = getWindowScroll(element);\n  const body = element.ownerDocument?.body;\n\n  const width = max(\n    html.scrollWidth,\n    html.clientWidth,\n    body ? body.scrollWidth : 0,\n    body ? body.clientWidth : 0\n  );\n  const height = max(\n    html.scrollHeight,\n    html.clientHeight,\n    body ? body.scrollHeight : 0,\n    body ? body.clientHeight : 0\n  );\n\n  let x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return { width, height, x, y };\n}\n","// @flow\nimport { type BasePlacement, type Placement, auto } from '../enums';\n\nexport default function getBasePlacement(\n  placement: Placement | typeof auto\n): BasePlacement {\n  return (placement.split('-')[0]: any);\n}\n","// @flow\nimport { type Variation, type Placement } from '../enums';\n\nexport default function getVariation(placement: Placement): ?Variation {\n  return (placement.split('-')[1]: any);\n}\n","// @flow\nimport type { Placement } from '../enums';\n\nexport default function getMainAxisFromPlacement(\n  placement: Placement\n): 'x' | 'y' {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}\n","// @flow\nimport getBasePlacement from './getBasePlacement';\nimport getVariation from './getVariation';\nimport getMainAxisFromPlacement from './getMainAxisFromPlacement';\nimport type {\n  Rect,\n  PositioningStrategy,\n  Offsets,\n  ClientRectObject,\n} from '../types';\nimport { top, right, bottom, left, start, end, type Placement } from '../enums';\n\nexport default function computeOffsets({\n  reference,\n  element,\n  placement,\n}: {\n  reference: Rect | ClientRectObject,\n  element: Rect | ClientRectObject,\n  strategy: PositioningStrategy,\n  placement?: Placement,\n}): Offsets {\n  const basePlacement = placement ? getBasePlacement(placement) : null;\n  const variation = placement ? getVariation(placement) : null;\n  const commonX = reference.x + reference.width / 2 - element.width / 2;\n  const commonY = reference.y + reference.height / 2 - element.height / 2;\n\n  let offsets;\n  switch (basePlacement) {\n    case top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height,\n      };\n      break;\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height,\n      };\n      break;\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY,\n      };\n      break;\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY,\n      };\n      break;\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y,\n      };\n  }\n\n  const mainAxis = basePlacement\n    ? getMainAxisFromPlacement(basePlacement)\n    : null;\n\n  if (mainAxis != null) {\n    const len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] =\n          offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n      case end:\n        offsets[mainAxis] =\n          offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n      default:\n    }\n  }\n\n  return offsets;\n}\n","// @flow\nimport type { SideObject } from '../types';\nimport getFreshSideObject from './getFreshSideObject';\n\nexport default function mergePaddingObject(\n  paddingObject: $Shape<SideObject>\n): SideObject {\n  return {\n    ...getFreshSideObject(),\n    ...paddingObject,\n  };\n}\n","// @flow\nimport type { SideObject } from '../types';\n\nexport default function getFreshSideObject(): SideObject {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  };\n}\n","// @flow\n\nexport default function expandToHashMap<\n  T: number | string | boolean,\n  K: string\n>(value: T, keys: Array<K>): { [key: string]: T } {\n  return keys.reduce((hashMap, key) => {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}\n","// @flow\nimport type { State, SideObject, Padding, PositioningStrategy } from '../types';\nimport type { Placement, Boundary, RootBoundary, Context } from '../enums';\nimport getClippingRect from '../dom-utils/getClippingRect';\nimport getDocumentElement from '../dom-utils/getDocumentElement';\nimport getBoundingClientRect from '../dom-utils/getBoundingClientRect';\nimport computeOffsets from './computeOffsets';\nimport rectToClientRect from './rectToClientRect';\nimport {\n  clippingParents,\n  reference,\n  popper,\n  bottom,\n  top,\n  right,\n  basePlacements,\n  viewport,\n} from '../enums';\nimport { isElement } from '../dom-utils/instanceOf';\nimport mergePaddingObject from './mergePaddingObject';\nimport expandToHashMap from './expandToHashMap';\n\n// eslint-disable-next-line import/no-unused-modules\nexport type Options = {\n  placement: Placement,\n  strategy: PositioningStrategy,\n  boundary: Boundary,\n  rootBoundary: RootBoundary,\n  elementContext: Context,\n  altBoundary: boolean,\n  padding: Padding,\n};\n\nexport default function detectOverflow(\n  state: State,\n  options: $Shape<Options> = {}\n): SideObject {\n  const {\n    placement = state.placement,\n    strategy = state.strategy,\n    boundary = clippingParents,\n    rootBoundary = viewport,\n    elementContext = popper,\n    altBoundary = false,\n    padding = 0,\n  } = options;\n\n  const paddingObject = mergePaddingObject(\n    typeof padding !== 'number'\n      ? padding\n      : expandToHashMap(padding, basePlacements)\n  );\n\n  const altContext = elementContext === popper ? reference : popper;\n\n  const popperRect = state.rects.popper;\n  const element = state.elements[altBoundary ? altContext : elementContext];\n\n  const clippingClientRect = getClippingRect(\n    isElement(element)\n      ? element\n      : element.contextElement || getDocumentElement(state.elements.popper),\n    boundary,\n    rootBoundary,\n    strategy\n  );\n\n  const referenceClientRect = getBoundingClientRect(state.elements.reference);\n\n  const popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement,\n  });\n\n  const popperClientRect = rectToClientRect({\n    ...popperRect,\n    ...popperOffsets,\n  });\n\n  const elementClientRect =\n    elementContext === popper ? popperClientRect : referenceClientRect;\n\n  // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n  const overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom:\n      elementClientRect.bottom -\n      clippingClientRect.bottom +\n      paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right:\n      elementClientRect.right - clippingClientRect.right + paddingObject.right,\n  };\n\n  const offsetData = state.modifiersData.offset;\n\n  // Offsets can be applied only to the popper element\n  if (elementContext === popper && offsetData) {\n    const offset = offsetData[placement];\n\n    Object.keys(overflowOffsets).forEach((key) => {\n      const multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      const axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}\n","// @flow\nimport type {\n  State,\n  OptionsGeneric,\n  Modifier,\n  Instance,\n  VirtualElement,\n} from './types';\nimport getCompositeRect from './dom-utils/getCompositeRect';\nimport getLayoutRect from './dom-utils/getLayoutRect';\nimport listScrollParents from './dom-utils/listScrollParents';\nimport getOffsetParent from './dom-utils/getOffsetParent';\nimport orderModifiers from './utils/orderModifiers';\nimport debounce from './utils/debounce';\nimport mergeByName from './utils/mergeByName';\nimport detectOverflow from './utils/detectOverflow';\nimport { isElement } from './dom-utils/instanceOf';\n\nconst DEFAULT_OPTIONS: OptionsGeneric<any> = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute',\n};\n\ntype PopperGeneratorArgs = {\n  defaultModifiers?: Array<Modifier<any, any>>,\n  defaultOptions?: $Shape<OptionsGeneric<any>>,\n};\n\nfunction areValidElements(...args: Array<any>): boolean {\n  return !args.some(\n    (element) =>\n      !(element && typeof element.getBoundingClientRect === 'function')\n  );\n}\n\nexport function popperGenerator(generatorOptions: PopperGeneratorArgs = {}) {\n  const { defaultModifiers = [], defaultOptions = DEFAULT_OPTIONS } =\n    generatorOptions;\n\n  return function createPopper<TModifier: $Shape<Modifier<any, any>>>(\n    reference: Element | VirtualElement,\n    popper: HTMLElement,\n    options: $Shape<OptionsGeneric<TModifier>> = defaultOptions\n  ): Instance {\n    let state: $Shape<State> = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: { ...DEFAULT_OPTIONS, ...defaultOptions },\n      modifiersData: {},\n      elements: {\n        reference,\n        popper,\n      },\n      attributes: {},\n      styles: {},\n    };\n\n    let effectCleanupFns: Array<() => void> = [];\n    let isDestroyed = false;\n\n    const instance = {\n      state,\n      setOptions(setOptionsAction) {\n        const options =\n          typeof setOptionsAction === 'function'\n            ? setOptionsAction(state.options)\n            : setOptionsAction;\n\n        cleanupModifierEffects();\n\n        state.options = {\n          // $FlowFixMe[exponential-spread]\n          ...defaultOptions,\n          ...state.options,\n          ...options,\n        };\n\n        state.scrollParents = {\n          reference: isElement(reference)\n            ? listScrollParents(reference)\n            : reference.contextElement\n            ? listScrollParents(reference.contextElement)\n            : [],\n          popper: listScrollParents(popper),\n        };\n\n        // Orders the modifiers based on their dependencies and `phase`\n        // properties\n        const orderedModifiers = orderModifiers(\n          mergeByName([...defaultModifiers, ...state.options.modifiers])\n        );\n\n        // Strip out disabled modifiers\n        state.orderedModifiers = orderedModifiers.filter((m) => m.enabled);\n\n        runModifierEffects();\n\n        return instance.update();\n      },\n\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        const { reference, popper } = state.elements;\n\n        // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n        if (!areValidElements(reference, popper)) {\n          return;\n        }\n\n        // Store the reference and popper rects to be read by modifiers\n        state.rects = {\n          reference: getCompositeRect(\n            reference,\n            getOffsetParent(popper),\n            state.options.strategy === 'fixed'\n          ),\n          popper: getLayoutRect(popper),\n        };\n\n        // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n        state.reset = false;\n\n        state.placement = state.options.placement;\n\n        // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n        state.orderedModifiers.forEach(\n          (modifier) =>\n            (state.modifiersData[modifier.name] = {\n              ...modifier.data,\n            })\n        );\n\n        for (let index = 0; index < state.orderedModifiers.length; index++) {\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          const { fn, options = {}, name } = state.orderedModifiers[index];\n\n          if (typeof fn === 'function') {\n            state = fn({ state, options, name, instance }) || state;\n          }\n        }\n      },\n\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce<$Shape<State>>(\n        () =>\n          new Promise<$Shape<State>>((resolve) => {\n            instance.forceUpdate();\n            resolve(state);\n          })\n      ),\n\n      destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      },\n    };\n\n    if (!areValidElements(reference, popper)) {\n      return instance;\n    }\n\n    instance.setOptions(options).then((state) => {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    });\n\n    // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(({ name, options = {}, effect }) => {\n        if (typeof effect === 'function') {\n          const cleanupFn = effect({ state, name, instance, options });\n          const noopFn = () => {};\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach((fn) => fn());\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\n\nexport const createPopper = popperGenerator();\n\n// eslint-disable-next-line import/no-unused-modules\nexport { detectOverflow };\n","// @flow\n\nexport default function debounce<T>(fn: Function): () => Promise<T> {\n  let pending;\n  return () => {\n    if (!pending) {\n      pending = new Promise<T>(resolve => {\n        Promise.resolve().then(() => {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}\n","// @flow\nimport type { Modifier } from '../types';\n\nexport default function mergeByName(\n  modifiers: Array<$Shape<Modifier<any, any>>>\n): Array<$Shape<Modifier<any, any>>> {\n  const merged = modifiers.reduce((merged, current) => {\n    const existing = merged[current.name];\n    merged[current.name] = existing\n      ? {\n          ...existing,\n          ...current,\n          options: { ...existing.options, ...current.options },\n          data: { ...existing.data, ...current.data },\n        }\n      : current;\n    return merged;\n  }, {});\n\n  // IE11 does not support Object.values\n  return Object.keys(merged).map(key => merged[key]);\n}\n","// @flow\nimport type { ModifierArguments, Modifier } from '../types';\nimport getWindow from '../dom-utils/getWindow';\n\n// eslint-disable-next-line import/no-unused-modules\nexport type Options = {\n  scroll: boolean,\n  resize: boolean,\n};\n\nconst passive = { passive: true };\n\nfunction effect({ state, instance, options }: ModifierArguments<Options>) {\n  const { scroll = true, resize = true } = options;\n\n  const window = getWindow(state.elements.popper);\n  const scrollParents = [\n    ...state.scrollParents.reference,\n    ...state.scrollParents.popper,\n  ];\n\n  if (scroll) {\n    scrollParents.forEach(scrollParent => {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return () => {\n    if (scroll) {\n      scrollParents.forEach(scrollParent => {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type EventListenersModifier = Modifier<'eventListeners', Options>;\nexport default ({\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: () => {},\n  effect,\n  data: {},\n}: EventListenersModifier);\n","// @flow\nimport type { ModifierArguments, Modifier } from '../types';\nimport computeOffsets from '../utils/computeOffsets';\n\nfunction popperOffsets({ state, name }: ModifierArguments<{||}>) {\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement,\n  });\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type PopperOffsetsModifier = Modifier<'popperOffsets', {||}>;\nexport default ({\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {},\n}: PopperOffsetsModifier);\n","// @flow\nimport type {\n  PositioningStrategy,\n  Offsets,\n  Modifier,\n  ModifierArguments,\n  Rect,\n  Window,\n} from '../types';\nimport {\n  type BasePlacement,\n  type Variation,\n  top,\n  left,\n  right,\n  bottom,\n  end,\n} from '../enums';\nimport getOffsetParent from '../dom-utils/getOffsetParent';\nimport getWindow from '../dom-utils/getWindow';\nimport getDocumentElement from '../dom-utils/getDocumentElement';\nimport getComputedStyle from '../dom-utils/getComputedStyle';\nimport getBasePlacement from '../utils/getBasePlacement';\nimport getVariation from '../utils/getVariation';\nimport { round } from '../utils/math';\n\n// eslint-disable-next-line import/no-unused-modules\nexport type RoundOffsets = (\n  offsets: $Shape<{ x: number, y: number, centerOffset: number }>\n) => Offsets;\n\n// eslint-disable-next-line import/no-unused-modules\nexport type Options = {\n  gpuAcceleration: boolean,\n  adaptive: boolean,\n  roundOffsets?: boolean | RoundOffsets,\n};\n\nconst unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto',\n};\n\n// Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\nfunction roundOffsetsByDPR({ x, y }, win: Window): Offsets {\n  const dpr = win.devicePixelRatio || 1;\n\n  return {\n    x: round(x * dpr) / dpr || 0,\n    y: round(y * dpr) / dpr || 0,\n  };\n}\n\nexport function mapToStyles({\n  popper,\n  popperRect,\n  placement,\n  variation,\n  offsets,\n  position,\n  gpuAcceleration,\n  adaptive,\n  roundOffsets,\n  isFixed,\n}: {\n  popper: HTMLElement,\n  popperRect: Rect,\n  placement: BasePlacement,\n  variation: ?Variation,\n  offsets: $Shape<{ x: number, y: number, centerOffset: number }>,\n  position: PositioningStrategy,\n  gpuAcceleration: boolean,\n  adaptive: boolean,\n  roundOffsets: boolean | RoundOffsets,\n  isFixed: boolean,\n}) {\n  let { x = 0, y = 0 } = offsets;\n\n  ({ x, y } =\n    typeof roundOffsets === 'function' ? roundOffsets({ x, y }) : { x, y });\n\n  const hasX = offsets.hasOwnProperty('x');\n  const hasY = offsets.hasOwnProperty('y');\n\n  let sideX: string = left;\n  let sideY: string = top;\n\n  const win: Window = window;\n\n  if (adaptive) {\n    let offsetParent = getOffsetParent(popper);\n    let heightProp = 'clientHeight';\n    let widthProp = 'clientWidth';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (\n        getComputedStyle(offsetParent).position !== 'static' &&\n        position === 'absolute'\n      ) {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    }\n\n    // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n    offsetParent = (offsetParent: Element);\n\n    if (\n      placement === top ||\n      ((placement === left || placement === right) && variation === end)\n    ) {\n      sideY = bottom;\n      const offsetY =\n        isFixed && offsetParent === win && win.visualViewport\n          ? win.visualViewport.height\n          : // $FlowFixMe[prop-missing]\n            offsetParent[heightProp];\n      y -= offsetY - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (\n      placement === left ||\n      ((placement === top || placement === bottom) && variation === end)\n    ) {\n      sideX = right;\n      const offsetX =\n        isFixed && offsetParent === win && win.visualViewport\n          ? win.visualViewport.width\n          : // $FlowFixMe[prop-missing]\n            offsetParent[widthProp];\n      x -= offsetX - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  const commonStyles = {\n    position,\n    ...(adaptive && unsetSides),\n  };\n\n  ({ x, y } =\n    roundOffsets === true\n      ? roundOffsetsByDPR({ x, y }, getWindow(popper))\n      : { x, y });\n\n  if (gpuAcceleration) {\n    return {\n      ...commonStyles,\n      [sideY]: hasY ? '0' : '',\n      [sideX]: hasX ? '0' : '',\n      // Layer acceleration can disable subpixel rendering which causes slightly\n      // blurry text on low PPI displays, so we want to use 2D transforms\n      // instead\n      transform:\n        (win.devicePixelRatio || 1) <= 1\n          ? `translate(${x}px, ${y}px)`\n          : `translate3d(${x}px, ${y}px, 0)`,\n    };\n  }\n\n  return {\n    ...commonStyles,\n    [sideY]: hasY ? `${y}px` : '',\n    [sideX]: hasX ? `${x}px` : '',\n    transform: '',\n  };\n}\n\nfunction computeStyles({ state, options }: ModifierArguments<Options>) {\n  const {\n    gpuAcceleration = true,\n    adaptive = true,\n    // defaults to use builtin `roundOffsetsByDPR`\n    roundOffsets = true,\n  } = options;\n\n  const commonStyles = {\n    placement: getBasePlacement(state.placement),\n    variation: getVariation(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration,\n    isFixed: state.options.strategy === 'fixed',\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = {\n      ...state.styles.popper,\n      ...mapToStyles({\n        ...commonStyles,\n        offsets: state.modifiersData.popperOffsets,\n        position: state.options.strategy,\n        adaptive,\n        roundOffsets,\n      }),\n    };\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = {\n      ...state.styles.arrow,\n      ...mapToStyles({\n        ...commonStyles,\n        offsets: state.modifiersData.arrow,\n        position: 'absolute',\n        adaptive: false,\n        roundOffsets,\n      }),\n    };\n  }\n\n  state.attributes.popper = {\n    ...state.attributes.popper,\n    'data-popper-placement': state.placement,\n  };\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type ComputeStylesModifier = Modifier<'computeStyles', Options>;\nexport default ({\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {},\n}: ComputeStylesModifier);\n","// @flow\nimport type { Modifier, ModifierArguments } from '../types';\nimport getNodeName from '../dom-utils/getNodeName';\nimport { isHTMLElement } from '../dom-utils/instanceOf';\n\n// This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles({ state }: ModifierArguments<{||}>) {\n  Object.keys(state.elements).forEach((name) => {\n    const style = state.styles[name] || {};\n\n    const attributes = state.attributes[name] || {};\n    const element = state.elements[name];\n\n    // arrow is optional + virtual elements\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    }\n\n    // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n    Object.assign(element.style, style);\n\n    Object.keys(attributes).forEach((name) => {\n      const value = attributes[name];\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect({ state }: ModifierArguments<{||}>) {\n  const initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0',\n    },\n    arrow: {\n      position: 'absolute',\n    },\n    reference: {},\n  };\n\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return () => {\n    Object.keys(state.elements).forEach((name) => {\n      const element = state.elements[name];\n      const attributes = state.attributes[name] || {};\n\n      const styleProperties = Object.keys(\n        state.styles.hasOwnProperty(name)\n          ? state.styles[name]\n          : initialStyles[name]\n      );\n\n      // Set all values to an empty string to unset them\n      const style = styleProperties.reduce((style, property) => {\n        style[property] = '';\n        return style;\n      }, {});\n\n      // arrow is optional + virtual elements\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n\n      Object.keys(attributes).forEach((attribute) => {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type ApplyStylesModifier = Modifier<'applyStyles', {||}>;\nexport default ({\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect,\n  requires: ['computeStyles'],\n}: ApplyStylesModifier);\n","// @flow\nimport type { Placement } from '../enums';\nimport type { ModifierArguments, Modifier, Rect, Offsets } from '../types';\nimport getBasePlacement from '../utils/getBasePlacement';\nimport { top, left, right, placements } from '../enums';\n\n// eslint-disable-next-line import/no-unused-modules\nexport type OffsetsFunction = ({\n  popper: Rect,\n  reference: Rect,\n  placement: Placement,\n}) => [?number, ?number];\n\ntype Offset = OffsetsFunction | [?number, ?number];\n\n// eslint-disable-next-line import/no-unused-modules\nexport type Options = {\n  offset: Offset,\n};\n\nexport function distanceAndSkiddingToXY(\n  placement: Placement,\n  rects: { popper: Rect, reference: Rect },\n  offset: Offset\n): Offsets {\n  const basePlacement = getBasePlacement(placement);\n  const invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  let [skidding, distance] =\n    typeof offset === 'function'\n      ? offset({\n          ...rects,\n          placement,\n        })\n      : offset;\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n\n  return [left, right].indexOf(basePlacement) >= 0\n    ? { x: distance, y: skidding }\n    : { x: skidding, y: distance };\n}\n\nfunction offset({ state, options, name }: ModifierArguments<Options>) {\n  const { offset = [0, 0] } = options;\n\n  const data = placements.reduce((acc, placement) => {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n\n  const { x, y } = data[state.placement];\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type OffsetModifier = Modifier<'offset', Options>;\nexport default ({\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset,\n}: OffsetModifier);\n","// @flow\nimport type { Placement } from '../enums';\n\nconst hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n\nexport default function getOppositePlacement(placement: Placement): Placement {\n  return (placement.replace(\n    /left|right|bottom|top/g,\n    matched => hash[matched]\n  ): any);\n}\n","// @flow\nimport type { Placement } from '../enums';\n\nconst hash = { start: 'end', end: 'start' };\n\nexport default function getOppositeVariationPlacement(\n  placement: Placement\n): Placement {\n  return (placement.replace(/start|end/g, matched => hash[matched]): any);\n}\n","// @flow\nimport type { State, Padding } from '../types';\nimport type {\n  Placement,\n  ComputedPlacement,\n  Boundary,\n  RootBoundary,\n} from '../enums';\nimport getVariation from './getVariation';\nimport {\n  variationPlacements,\n  basePlacements,\n  placements as allPlacements,\n} from '../enums';\nimport detectOverflow from './detectOverflow';\nimport getBasePlacement from './getBasePlacement';\n\ntype Options = {\n  placement: Placement,\n  padding: Padding,\n  boundary: Boundary,\n  rootBoundary: RootBoundary,\n  flipVariations: boolean,\n  allowedAutoPlacements?: Array<Placement>,\n};\n\ntype OverflowsMap = { [ComputedPlacement]: number };\n\nexport default function computeAutoPlacement(\n  state: $Shape<State>,\n  options: Options = {}\n): Array<ComputedPlacement> {\n  const {\n    placement,\n    boundary,\n    rootBoundary,\n    padding,\n    flipVariations,\n    allowedAutoPlacements = allPlacements,\n  } = options;\n\n  const variation = getVariation(placement);\n\n  const placements = variation\n    ? flipVariations\n      ? variationPlacements\n      : variationPlacements.filter(\n          (placement) => getVariation(placement) === variation\n        )\n    : basePlacements;\n\n  let allowedPlacements = placements.filter(\n    (placement) => allowedAutoPlacements.indexOf(placement) >= 0\n  );\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n  }\n\n  // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n  const overflows: OverflowsMap = allowedPlacements.reduce((acc, placement) => {\n    acc[placement] = detectOverflow(state, {\n      placement,\n      boundary,\n      rootBoundary,\n      padding,\n    })[getBasePlacement(placement)];\n\n    return acc;\n  }, {});\n\n  return Object.keys(overflows).sort((a, b) => overflows[a] - overflows[b]);\n}\n","// @flow\nimport type { Placement, Boundary, RootBoundary } from '../enums';\nimport type { ModifierArguments, Modifier, Padding } from '../types';\nimport getOppositePlacement from '../utils/getOppositePlacement';\nimport getBasePlacement from '../utils/getBasePlacement';\nimport getOppositeVariationPlacement from '../utils/getOppositeVariationPlacement';\nimport detectOverflow from '../utils/detectOverflow';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\nimport { bottom, top, start, right, left, auto } from '../enums';\nimport getVariation from '../utils/getVariation';\n\n// eslint-disable-next-line import/no-unused-modules\nexport type Options = {\n  mainAxis: boolean,\n  altAxis: boolean,\n  fallbackPlacements: Array<Placement>,\n  padding: Padding,\n  boundary: Boundary,\n  rootBoundary: RootBoundary,\n  altBoundary: boolean,\n  flipVariations: boolean,\n  allowedAutoPlacements: Array<Placement>,\n};\n\nfunction getExpandedFallbackPlacements(placement: Placement): Array<Placement> {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  const oppositePlacement = getOppositePlacement(placement);\n\n  return [\n    getOppositeVariationPlacement(placement),\n    oppositePlacement,\n    getOppositeVariationPlacement(oppositePlacement),\n  ];\n}\n\nfunction flip({ state, options, name }: ModifierArguments<Options>) {\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  const {\n    mainAxis: checkMainAxis = true,\n    altAxis: checkAltAxis = true,\n    fallbackPlacements: specifiedFallbackPlacements,\n    padding,\n    boundary,\n    rootBoundary,\n    altBoundary,\n    flipVariations = true,\n    allowedAutoPlacements,\n  } = options;\n\n  const preferredPlacement = state.options.placement;\n  const basePlacement = getBasePlacement(preferredPlacement);\n  const isBasePlacement = basePlacement === preferredPlacement;\n\n  const fallbackPlacements =\n    specifiedFallbackPlacements ||\n    (isBasePlacement || !flipVariations\n      ? [getOppositePlacement(preferredPlacement)]\n      : getExpandedFallbackPlacements(preferredPlacement));\n\n  const placements = [preferredPlacement, ...fallbackPlacements].reduce(\n    (acc, placement) => {\n      return acc.concat(\n        getBasePlacement(placement) === auto\n          ? computeAutoPlacement(state, {\n              placement,\n              boundary,\n              rootBoundary,\n              padding,\n              flipVariations,\n              allowedAutoPlacements,\n            })\n          : placement\n      );\n    },\n    []\n  );\n\n  const referenceRect = state.rects.reference;\n  const popperRect = state.rects.popper;\n\n  const checksMap = new Map();\n  let makeFallbackChecks = true;\n  let firstFittingPlacement = placements[0];\n\n  for (let i = 0; i < placements.length; i++) {\n    const placement = placements[i];\n    const basePlacement = getBasePlacement(placement);\n    const isStartVariation = getVariation(placement) === start;\n    const isVertical = [top, bottom].indexOf(basePlacement) >= 0;\n    const len = isVertical ? 'width' : 'height';\n\n    const overflow = detectOverflow(state, {\n      placement,\n      boundary,\n      rootBoundary,\n      altBoundary,\n      padding,\n    });\n\n    let mainVariationSide: any = isVertical\n      ? isStartVariation\n        ? right\n        : left\n      : isStartVariation\n      ? bottom\n      : top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    const altVariationSide: any = getOppositePlacement(mainVariationSide);\n\n    const checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(\n        overflow[mainVariationSide] <= 0,\n        overflow[altVariationSide] <= 0\n      );\n    }\n\n    if (checks.every((check) => check)) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    const numberOfChecks = flipVariations ? 3 : 1;\n\n    for (let i = numberOfChecks; i > 0; i--) {\n      const fittingPlacement = placements.find((placement) => {\n        const checks = checksMap.get(placement);\n        if (checks) {\n          return checks.slice(0, i).every((check) => check);\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        break;\n      }\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type FlipModifier = Modifier<'flip', Options>;\nexport default ({\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: { _skip: false },\n}: FlipModifier);\n","// @flow\nimport { max as mathMax, min as mathMin } from './math';\n\nexport function within(min: number, value: number, max: number): number {\n  return mathMax(min, mathMin(value, max));\n}\n\nexport function withinMaxClamp(min: number, value: number, max: number) {\n  const v = within(min, value, max);\n  return v > max ? max : v;\n}\n","// @flow\nimport { top, left, right, bottom, start } from '../enums';\nimport type { Placement, Boundary, RootBoundary } from '../enums';\nimport type { Rect, ModifierArguments, Modifier, Padding } from '../types';\nimport getBasePlacement from '../utils/getBasePlacement';\nimport getMainAxisFromPlacement from '../utils/getMainAxisFromPlacement';\nimport getAltAxis from '../utils/getAltAxis';\nimport { within, withinMaxClamp } from '../utils/within';\nimport getLayoutRect from '../dom-utils/getLayoutRect';\nimport getOffsetParent from '../dom-utils/getOffsetParent';\nimport detectOverflow from '../utils/detectOverflow';\nimport getVariation from '../utils/getVariation';\nimport getFreshSideObject from '../utils/getFreshSideObject';\nimport { min as mathMin, max as mathMax } from '../utils/math';\n\ntype TetherOffset =\n  | (({\n      popper: Rect,\n      reference: Rect,\n      placement: Placement,\n    }) => number | { mainAxis: number, altAxis: number })\n  | number\n  | { mainAxis: number, altAxis: number };\n\n// eslint-disable-next-line import/no-unused-modules\nexport type Options = {\n  /* Prevents boundaries overflow on the main axis */\n  mainAxis: boolean,\n  /* Prevents boundaries overflow on the alternate axis */\n  altAxis: boolean,\n  /* The area to check the popper is overflowing in */\n  boundary: Boundary,\n  /* If the popper is not overflowing the main area, fallback to this one */\n  rootBoundary: RootBoundary,\n  /* Use the reference's \"clippingParents\" boundary context */\n  altBoundary: boolean,\n  /**\n   * Allows the popper to overflow from its boundaries to keep it near its\n   * reference element\n   */\n  tether: boolean,\n  /* Offsets when the `tether` option should activate */\n  tetherOffset: TetherOffset,\n  /* Sets a padding to the provided boundary */\n  padding: Padding,\n};\n\nfunction preventOverflow({ state, options, name }: ModifierArguments<Options>) {\n  const {\n    mainAxis: checkMainAxis = true,\n    altAxis: checkAltAxis = false,\n    boundary,\n    rootBoundary,\n    altBoundary,\n    padding,\n    tether = true,\n    tetherOffset = 0,\n  } = options;\n\n  const overflow = detectOverflow(state, {\n    boundary,\n    rootBoundary,\n    padding,\n    altBoundary,\n  });\n  const basePlacement = getBasePlacement(state.placement);\n  const variation = getVariation(state.placement);\n  const isBasePlacement = !variation;\n  const mainAxis = getMainAxisFromPlacement(basePlacement);\n  const altAxis = getAltAxis(mainAxis);\n  const popperOffsets = state.modifiersData.popperOffsets;\n  const referenceRect = state.rects.reference;\n  const popperRect = state.rects.popper;\n  const tetherOffsetValue =\n    typeof tetherOffset === 'function'\n      ? tetherOffset({\n          ...state.rects,\n          placement: state.placement,\n        })\n      : tetherOffset;\n  const normalizedTetherOffsetValue =\n    typeof tetherOffsetValue === 'number'\n      ? { mainAxis: tetherOffsetValue, altAxis: tetherOffsetValue }\n      : { mainAxis: 0, altAxis: 0, ...tetherOffsetValue };\n  const offsetModifierState = state.modifiersData.offset\n    ? state.modifiersData.offset[state.placement]\n    : null;\n\n  const data = { x: 0, y: 0 };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    const mainSide = mainAxis === 'y' ? top : left;\n    const altSide = mainAxis === 'y' ? bottom : right;\n    const len = mainAxis === 'y' ? 'height' : 'width';\n    const offset = popperOffsets[mainAxis];\n\n    const min = offset + overflow[mainSide];\n    const max = offset - overflow[altSide];\n\n    const additive = tether ? -popperRect[len] / 2 : 0;\n\n    const minLen = variation === start ? referenceRect[len] : popperRect[len];\n    const maxLen = variation === start ? -popperRect[len] : -referenceRect[len];\n\n    // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n    const arrowElement = state.elements.arrow;\n    const arrowRect =\n      tether && arrowElement\n        ? getLayoutRect(arrowElement)\n        : { width: 0, height: 0 };\n    const arrowPaddingObject = state.modifiersData['arrow#persistent']\n      ? state.modifiersData['arrow#persistent'].padding\n      : getFreshSideObject();\n    const arrowPaddingMin = arrowPaddingObject[mainSide];\n    const arrowPaddingMax = arrowPaddingObject[altSide];\n\n    // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n    const arrowLen = within(0, referenceRect[len], arrowRect[len]);\n\n    const minOffset = isBasePlacement\n      ? referenceRect[len] / 2 -\n        additive -\n        arrowLen -\n        arrowPaddingMin -\n        normalizedTetherOffsetValue.mainAxis\n      : minLen -\n        arrowLen -\n        arrowPaddingMin -\n        normalizedTetherOffsetValue.mainAxis;\n    const maxOffset = isBasePlacement\n      ? -referenceRect[len] / 2 +\n        additive +\n        arrowLen +\n        arrowPaddingMax +\n        normalizedTetherOffsetValue.mainAxis\n      : maxLen +\n        arrowLen +\n        arrowPaddingMax +\n        normalizedTetherOffsetValue.mainAxis;\n\n    const arrowOffsetParent =\n      state.elements.arrow && getOffsetParent(state.elements.arrow);\n    const clientOffset = arrowOffsetParent\n      ? mainAxis === 'y'\n        ? arrowOffsetParent.clientTop || 0\n        : arrowOffsetParent.clientLeft || 0\n      : 0;\n\n    const offsetModifierValue = offsetModifierState?.[mainAxis] ?? 0;\n    const tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n    const tetherMax = offset + maxOffset - offsetModifierValue;\n\n    const preventedOffset = within(\n      tether ? mathMin(min, tetherMin) : min,\n      offset,\n      tether ? mathMax(max, tetherMax) : max\n    );\n\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    const mainSide = mainAxis === 'x' ? top : left;\n    const altSide = mainAxis === 'x' ? bottom : right;\n    const offset = popperOffsets[altAxis];\n\n    const len = altAxis === 'y' ? 'height' : 'width';\n\n    const min = offset + overflow[mainSide];\n    const max = offset - overflow[altSide];\n\n    const isOriginSide = [top, left].indexOf(basePlacement) !== -1;\n\n    const offsetModifierValue = offsetModifierState?.[altAxis] ?? 0;\n    const tetherMin = isOriginSide\n      ? min\n      : offset -\n        referenceRect[len] -\n        popperRect[len] -\n        offsetModifierValue +\n        normalizedTetherOffsetValue.altAxis;\n    const tetherMax = isOriginSide\n      ? offset +\n        referenceRect[len] +\n        popperRect[len] -\n        offsetModifierValue -\n        normalizedTetherOffsetValue.altAxis\n      : max;\n\n    const preventedOffset =\n      tether && isOriginSide\n        ? withinMaxClamp(tetherMin, offset, tetherMax)\n        : within(tether ? tetherMin : min, offset, tether ? tetherMax : max);\n\n    popperOffsets[altAxis] = preventedOffset;\n    data[altAxis] = preventedOffset - offset;\n  }\n\n  state.modifiersData[name] = data;\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type PreventOverflowModifier = Modifier<'preventOverflow', Options>;\nexport default ({\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset'],\n}: PreventOverflowModifier);\n","// @flow\n\nexport default function getAltAxis(axis: 'x' | 'y'): 'x' | 'y' {\n  return axis === 'x' ? 'y' : 'x';\n}\n","// @flow\nimport type { Modifier, ModifierArguments, Padding, Rect } from '../types';\nimport type { Placement } from '../enums';\nimport getBasePlacement from '../utils/getBasePlacement';\nimport getLayoutRect from '../dom-utils/getLayoutRect';\nimport contains from '../dom-utils/contains';\nimport getOffsetParent from '../dom-utils/getOffsetParent';\nimport getMainAxisFromPlacement from '../utils/getMainAxisFromPlacement';\nimport { within } from '../utils/within';\nimport mergePaddingObject from '../utils/mergePaddingObject';\nimport expandToHashMap from '../utils/expandToHashMap';\nimport { left, right, basePlacements, top, bottom } from '../enums';\n\n// eslint-disable-next-line import/no-unused-modules\nexport type Options = {\n  element: HTMLElement | string | null,\n  padding:\n    | Padding\n    | (({|\n        popper: Rect,\n        reference: Rect,\n        placement: Placement,\n      |}) => Padding),\n};\n\nconst toPaddingObject = (padding, state) => {\n  padding =\n    typeof padding === 'function'\n      ? padding({ ...state.rects, placement: state.placement })\n      : padding;\n\n  return mergePaddingObject(\n    typeof padding !== 'number'\n      ? padding\n      : expandToHashMap(padding, basePlacements)\n  );\n};\n\nfunction arrow({ state, name, options }: ModifierArguments<Options>) {\n  const arrowElement = state.elements.arrow;\n  const popperOffsets = state.modifiersData.popperOffsets;\n  const basePlacement = getBasePlacement(state.placement);\n  const axis = getMainAxisFromPlacement(basePlacement);\n  const isVertical = [left, right].indexOf(basePlacement) >= 0;\n  const len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  const paddingObject = toPaddingObject(options.padding, state);\n  const arrowRect = getLayoutRect(arrowElement);\n  const minProp = axis === 'y' ? top : left;\n  const maxProp = axis === 'y' ? bottom : right;\n\n  const endDiff =\n    state.rects.reference[len] +\n    state.rects.reference[axis] -\n    popperOffsets[axis] -\n    state.rects.popper[len];\n  const startDiff = popperOffsets[axis] - state.rects.reference[axis];\n\n  const arrowOffsetParent = getOffsetParent(arrowElement);\n  const clientSize = arrowOffsetParent\n    ? axis === 'y'\n      ? arrowOffsetParent.clientHeight || 0\n      : arrowOffsetParent.clientWidth || 0\n    : 0;\n\n  const centerToReference = endDiff / 2 - startDiff / 2;\n\n  // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n  const min = paddingObject[minProp];\n  const max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  const center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  const offset = within(min, center, max);\n\n  // Prevents breaking syntax highlighting...\n  const axisProp: string = axis;\n  state.modifiersData[name] = {\n    [axisProp]: offset,\n    centerOffset: offset - center,\n  };\n}\n\nfunction effect({ state, options }: ModifierArguments<Options>) {\n  let { element: arrowElement = '[data-popper-arrow]' } = options;\n\n  if (arrowElement == null) {\n    return;\n  }\n\n  // CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type ArrowModifier = Modifier<'arrow', Options>;\nexport default ({\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow'],\n}: ArrowModifier);\n","// @flow\nimport type {\n  ModifierArguments,\n  Modifier,\n  Rect,\n  SideObject,\n  Offsets,\n} from '../types';\nimport { top, bottom, left, right } from '../enums';\nimport detectOverflow from '../utils/detectOverflow';\n\nfunction getSideOffsets(\n  overflow: SideObject,\n  rect: Rect,\n  preventedOffsets: Offsets = { x: 0, y: 0 }\n): SideObject {\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x,\n  };\n}\n\nfunction isAnySideFullyClipped(overflow: SideObject): boolean {\n  return [top, right, bottom, left].some((side) => overflow[side] >= 0);\n}\n\nfunction hide({ state, name }: ModifierArguments<{||}>) {\n  const referenceRect = state.rects.reference;\n  const popperRect = state.rects.popper;\n  const preventedOffsets = state.modifiersData.preventOverflow;\n\n  const referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference',\n  });\n  const popperAltOverflow = detectOverflow(state, {\n    altBoundary: true,\n  });\n\n  const referenceClippingOffsets = getSideOffsets(\n    referenceOverflow,\n    referenceRect\n  );\n  const popperEscapeOffsets = getSideOffsets(\n    popperAltOverflow,\n    popperRect,\n    preventedOffsets\n  );\n\n  const isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  const hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n\n  state.modifiersData[name] = {\n    referenceClippingOffsets,\n    popperEscapeOffsets,\n    isReferenceHidden,\n    hasPopperEscaped,\n  };\n\n  state.attributes.popper = {\n    ...state.attributes.popper,\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped,\n  };\n}\n\n// eslint-disable-next-line import/no-unused-modules\nexport type HideModifier = Modifier<'hide', {||}>;\nexport default ({\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide,\n}: HideModifier);\n","// @flow\nimport { popperGenerator, detectOverflow } from './createPopper';\n\nimport eventListeners from './modifiers/eventListeners';\nimport popperOffsets from './modifiers/popperOffsets';\nimport computeStyles from './modifiers/computeStyles';\nimport applyStyles from './modifiers/applyStyles';\n\nexport type * from './types';\n\nconst defaultModifiers = [\n  eventListeners,\n  popperOffsets,\n  computeStyles,\n  applyStyles,\n];\n\nconst createPopper = popperGenerator({ defaultModifiers });\n\n// eslint-disable-next-line import/no-unused-modules\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow };\n","// @flow\nimport { popperGenerator, detectOverflow } from './createPopper';\n\nimport eventListeners from './modifiers/eventListeners';\nimport popperOffsets from './modifiers/popperOffsets';\nimport computeStyles from './modifiers/computeStyles';\nimport applyStyles from './modifiers/applyStyles';\nimport offset from './modifiers/offset';\nimport flip from './modifiers/flip';\nimport preventOverflow from './modifiers/preventOverflow';\nimport arrow from './modifiers/arrow';\nimport hide from './modifiers/hide';\n\nexport type * from './types';\n\nconst defaultModifiers = [\n  eventListeners,\n  popperOffsets,\n  computeStyles,\n  applyStyles,\n  offset,\n  flip,\n  preventOverflow,\n  arrow,\n  hide,\n];\n\nconst createPopper = popperGenerator({ defaultModifiers });\n\n// eslint-disable-next-line import/no-unused-modules\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow };\n// eslint-disable-next-line import/no-unused-modules\nexport { createPopper as createPopperLite } from './popper-lite';\n// eslint-disable-next-line import/no-unused-modules\nexport * from './modifiers';\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/data.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * Constants\n */\n\nconst elementMap = new Map()\n\nexport default {\n  set(element, key, instance) {\n    if (!elementMap.has(element)) {\n      elementMap.set(element, new Map())\n    }\n\n    const instanceMap = elementMap.get(element)\n\n    // make it clear we only want one instance per element\n    // can be removed later when multiple key/instances are fine to be used\n    if (!instanceMap.has(key) && instanceMap.size !== 0) {\n      // eslint-disable-next-line no-console\n      console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`)\n      return\n    }\n\n    instanceMap.set(key, instance)\n  },\n\n  get(element, key) {\n    if (elementMap.has(element)) {\n      return elementMap.get(element).get(key) || null\n    }\n\n    return null\n  },\n\n  remove(element, key) {\n    if (!elementMap.has(element)) {\n      return\n    }\n\n    const instanceMap = elementMap.get(element)\n\n    instanceMap.delete(key)\n\n    // free up element references if there are no instances left for an element\n    if (instanceMap.size === 0) {\n      elementMap.delete(element)\n    }\n  }\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/index.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst MAX_UID = 1_000_000\nconst MILLISECONDS_MULTIPLIER = 1000\nconst TRANSITION_END = 'transitionend'\n\n/**\n * Properly escape IDs selectors to handle weird IDs\n * @param {string} selector\n * @returns {string}\n */\nconst parseSelector = selector => {\n  if (selector && window.CSS && window.CSS.escape) {\n    // document.querySelector needs escaping to handle IDs (html5+) containing for instance /\n    selector = selector.replace(/#([^\\s\"#']+)/g, (match, id) => `#${CSS.escape(id)}`)\n  }\n\n  return selector\n}\n\n// Shout-out Angus Croll (https://goo.gl/pxwQGp)\nconst toType = object => {\n  if (object === null || object === undefined) {\n    return `${object}`\n  }\n\n  return Object.prototype.toString.call(object).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\n/**\n * Public Util API\n */\n\nconst getUID = prefix => {\n  do {\n    prefix += Math.floor(Math.random() * MAX_UID)\n  } while (document.getElementById(prefix))\n\n  return prefix\n}\n\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let { transitionDuration, transitionDelay } = window.getComputedStyle(element)\n\n  const floatTransitionDuration = Number.parseFloat(transitionDuration)\n  const floatTransitionDelay = Number.parseFloat(transitionDelay)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n  transitionDelay = transitionDelay.split(',')[0]\n\n  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\n}\n\nconst triggerTransitionEnd = element => {\n  element.dispatchEvent(new Event(TRANSITION_END))\n}\n\nconst isElement = object => {\n  if (!object || typeof object !== 'object') {\n    return false\n  }\n\n  if (typeof object.jquery !== 'undefined') {\n    object = object[0]\n  }\n\n  return typeof object.nodeType !== 'undefined'\n}\n\nconst getElement = object => {\n  // it's a jQuery object or a node element\n  if (isElement(object)) {\n    return object.jquery ? object[0] : object\n  }\n\n  if (typeof object === 'string' && object.length > 0) {\n    return document.querySelector(parseSelector(object))\n  }\n\n  return null\n}\n\nconst isVisible = element => {\n  if (!isElement(element) || element.getClientRects().length === 0) {\n    return false\n  }\n\n  const elementIsVisible = getComputedStyle(element).getPropertyValue('visibility') === 'visible'\n  // Handle `details` element as its content may falsie appear visible when it is closed\n  const closedDetails = element.closest('details:not([open])')\n\n  if (!closedDetails) {\n    return elementIsVisible\n  }\n\n  if (closedDetails !== element) {\n    const summary = element.closest('summary')\n    if (summary && summary.parentNode !== closedDetails) {\n      return false\n    }\n\n    if (summary === null) {\n      return false\n    }\n  }\n\n  return elementIsVisible\n}\n\nconst isDisabled = element => {\n  if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n    return true\n  }\n\n  if (element.classList.contains('disabled')) {\n    return true\n  }\n\n  if (typeof element.disabled !== 'undefined') {\n    return element.disabled\n  }\n\n  return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false'\n}\n\nconst findShadowRoot = element => {\n  if (!document.documentElement.attachShadow) {\n    return null\n  }\n\n  // Can find the shadow root otherwise it'll return the document\n  if (typeof element.getRootNode === 'function') {\n    const root = element.getRootNode()\n    return root instanceof ShadowRoot ? root : null\n  }\n\n  if (element instanceof ShadowRoot) {\n    return element\n  }\n\n  // when we don't find a shadow root\n  if (!element.parentNode) {\n    return null\n  }\n\n  return findShadowRoot(element.parentNode)\n}\n\nconst noop = () => {}\n\n/**\n * Trick to restart an element's animation\n *\n * @param {HTMLElement} element\n * @return void\n *\n * @see https://www.charistheo.io/blog/2021/02/restart-a-css-animation-with-javascript/#restarting-a-css-animation\n */\nconst reflow = element => {\n  element.offsetHeight // eslint-disable-line no-unused-expressions\n}\n\nconst getjQuery = () => {\n  if (window.jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n    return window.jQuery\n  }\n\n  return null\n}\n\nconst DOMContentLoadedCallbacks = []\n\nconst onDOMContentLoaded = callback => {\n  if (document.readyState === 'loading') {\n    // add listener on the first call when the document is in loading state\n    if (!DOMContentLoadedCallbacks.length) {\n      document.addEventListener('DOMContentLoaded', () => {\n        for (const callback of DOMContentLoadedCallbacks) {\n          callback()\n        }\n      })\n    }\n\n    DOMContentLoadedCallbacks.push(callback)\n  } else {\n    callback()\n  }\n}\n\nconst isRTL = () => document.documentElement.dir === 'rtl'\n\nconst defineJQueryPlugin = plugin => {\n  onDOMContentLoaded(() => {\n    const $ = getjQuery()\n    /* istanbul ignore if */\n    if ($) {\n      const name = plugin.NAME\n      const JQUERY_NO_CONFLICT = $.fn[name]\n      $.fn[name] = plugin.jQueryInterface\n      $.fn[name].Constructor = plugin\n      $.fn[name].noConflict = () => {\n        $.fn[name] = JQUERY_NO_CONFLICT\n        return plugin.jQueryInterface\n      }\n    }\n  })\n}\n\nconst execute = (possibleCallback, args = [], defaultValue = possibleCallback) => {\n  return typeof possibleCallback === 'function' ? possibleCallback(...args) : defaultValue\n}\n\nconst executeAfterTransition = (callback, transitionElement, waitForTransition = true) => {\n  if (!waitForTransition) {\n    execute(callback)\n    return\n  }\n\n  const durationPadding = 5\n  const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding\n\n  let called = false\n\n  const handler = ({ target }) => {\n    if (target !== transitionElement) {\n      return\n    }\n\n    called = true\n    transitionElement.removeEventListener(TRANSITION_END, handler)\n    execute(callback)\n  }\n\n  transitionElement.addEventListener(TRANSITION_END, handler)\n  setTimeout(() => {\n    if (!called) {\n      triggerTransitionEnd(transitionElement)\n    }\n  }, emulatedDuration)\n}\n\n/**\n * Return the previous/next element of a list.\n *\n * @param {array} list    The list of elements\n * @param activeElement   The active element\n * @param shouldGetNext   Choose to get next or previous element\n * @param isCycleAllowed\n * @return {Element|elem} The proper element\n */\nconst getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed) => {\n  const listLength = list.length\n  let index = list.indexOf(activeElement)\n\n  // if the element does not exist in the list return an element\n  // depending on the direction and if cycle is allowed\n  if (index === -1) {\n    return !shouldGetNext && isCycleAllowed ? list[listLength - 1] : list[0]\n  }\n\n  index += shouldGetNext ? 1 : -1\n\n  if (isCycleAllowed) {\n    index = (index + listLength) % listLength\n  }\n\n  return list[Math.max(0, Math.min(index, listLength - 1))]\n}\n\nexport {\n  defineJQueryPlugin,\n  execute,\n  executeAfterTransition,\n  findShadowRoot,\n  getElement,\n  getjQuery,\n  getNextActiveElement,\n  getTransitionDurationFromElement,\n  getUID,\n  isDisabled,\n  isElement,\n  isRTL,\n  isVisible,\n  noop,\n  onDOMContentLoaded,\n  parseSelector,\n  reflow,\n  triggerTransitionEnd,\n  toType\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/event-handler.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { getjQuery } from '../util/index.js'\n\n/**\n * Constants\n */\n\nconst namespaceRegex = /[^.]*(?=\\..*)\\.|.*/\nconst stripNameRegex = /\\..*/\nconst stripUidRegex = /::\\d+$/\nconst eventRegistry = {} // Events storage\nlet uidEvent = 1\nconst customEvents = {\n  mouseenter: 'mouseover',\n  mouseleave: 'mouseout'\n}\n\nconst nativeEvents = new Set([\n  'click',\n  'dblclick',\n  'mouseup',\n  'mousedown',\n  'contextmenu',\n  'mousewheel',\n  'DOMMouseScroll',\n  'mouseover',\n  'mouseout',\n  'mousemove',\n  'selectstart',\n  'selectend',\n  'keydown',\n  'keypress',\n  'keyup',\n  'orientationchange',\n  'touchstart',\n  'touchmove',\n  'touchend',\n  'touchcancel',\n  'pointerdown',\n  'pointermove',\n  'pointerup',\n  'pointerleave',\n  'pointercancel',\n  'gesturestart',\n  'gesturechange',\n  'gestureend',\n  'focus',\n  'blur',\n  'change',\n  'reset',\n  'select',\n  'submit',\n  'focusin',\n  'focusout',\n  'load',\n  'unload',\n  'beforeunload',\n  'resize',\n  'move',\n  'DOMContentLoaded',\n  'readystatechange',\n  'error',\n  'abort',\n  'scroll'\n])\n\n/**\n * Private methods\n */\n\nfunction makeEventUid(element, uid) {\n  return (uid && `${uid}::${uidEvent++}`) || element.uidEvent || uidEvent++\n}\n\nfunction getElementEvents(element) {\n  const uid = makeEventUid(element)\n\n  element.uidEvent = uid\n  eventRegistry[uid] = eventRegistry[uid] || {}\n\n  return eventRegistry[uid]\n}\n\nfunction bootstrapHandler(element, fn) {\n  return function handler(event) {\n    hydrateObj(event, { delegateTarget: element })\n\n    if (handler.oneOff) {\n      EventHandler.off(element, event.type, fn)\n    }\n\n    return fn.apply(element, [event])\n  }\n}\n\nfunction bootstrapDelegationHandler(element, selector, fn) {\n  return function handler(event) {\n    const domElements = element.querySelectorAll(selector)\n\n    for (let { target } = event; target && target !== this; target = target.parentNode) {\n      for (const domElement of domElements) {\n        if (domElement !== target) {\n          continue\n        }\n\n        hydrateObj(event, { delegateTarget: target })\n\n        if (handler.oneOff) {\n          EventHandler.off(element, event.type, selector, fn)\n        }\n\n        return fn.apply(target, [event])\n      }\n    }\n  }\n}\n\nfunction findHandler(events, callable, delegationSelector = null) {\n  return Object.values(events)\n    .find(event => event.callable === callable && event.delegationSelector === delegationSelector)\n}\n\nfunction normalizeParameters(originalTypeEvent, handler, delegationFunction) {\n  const isDelegated = typeof handler === 'string'\n  // TODO: tooltip passes `false` instead of selector, so we need to check\n  const callable = isDelegated ? delegationFunction : (handler || delegationFunction)\n  let typeEvent = getTypeEvent(originalTypeEvent)\n\n  if (!nativeEvents.has(typeEvent)) {\n    typeEvent = originalTypeEvent\n  }\n\n  return [isDelegated, callable, typeEvent]\n}\n\nfunction addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {\n  if (typeof originalTypeEvent !== 'string' || !element) {\n    return\n  }\n\n  let [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction)\n\n  // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n  // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n  if (originalTypeEvent in customEvents) {\n    const wrapFunction = fn => {\n      return function (event) {\n        if (!event.relatedTarget || (event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget))) {\n          return fn.call(this, event)\n        }\n      }\n    }\n\n    callable = wrapFunction(callable)\n  }\n\n  const events = getElementEvents(element)\n  const handlers = events[typeEvent] || (events[typeEvent] = {})\n  const previousFunction = findHandler(handlers, callable, isDelegated ? handler : null)\n\n  if (previousFunction) {\n    previousFunction.oneOff = previousFunction.oneOff && oneOff\n\n    return\n  }\n\n  const uid = makeEventUid(callable, originalTypeEvent.replace(namespaceRegex, ''))\n  const fn = isDelegated ?\n    bootstrapDelegationHandler(element, handler, callable) :\n    bootstrapHandler(element, callable)\n\n  fn.delegationSelector = isDelegated ? handler : null\n  fn.callable = callable\n  fn.oneOff = oneOff\n  fn.uidEvent = uid\n  handlers[uid] = fn\n\n  element.addEventListener(typeEvent, fn, isDelegated)\n}\n\nfunction removeHandler(element, events, typeEvent, handler, delegationSelector) {\n  const fn = findHandler(events[typeEvent], handler, delegationSelector)\n\n  if (!fn) {\n    return\n  }\n\n  element.removeEventListener(typeEvent, fn, Boolean(delegationSelector))\n  delete events[typeEvent][fn.uidEvent]\n}\n\nfunction removeNamespacedHandlers(element, events, typeEvent, namespace) {\n  const storeElementEvent = events[typeEvent] || {}\n\n  for (const [handlerKey, event] of Object.entries(storeElementEvent)) {\n    if (handlerKey.includes(namespace)) {\n      removeHandler(element, events, typeEvent, event.callable, event.delegationSelector)\n    }\n  }\n}\n\nfunction getTypeEvent(event) {\n  // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n  event = event.replace(stripNameRegex, '')\n  return customEvents[event] || event\n}\n\nconst EventHandler = {\n  on(element, event, handler, delegationFunction) {\n    addHandler(element, event, handler, delegationFunction, false)\n  },\n\n  one(element, event, handler, delegationFunction) {\n    addHandler(element, event, handler, delegationFunction, true)\n  },\n\n  off(element, originalTypeEvent, handler, delegationFunction) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return\n    }\n\n    const [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction)\n    const inNamespace = typeEvent !== originalTypeEvent\n    const events = getElementEvents(element)\n    const storeElementEvent = events[typeEvent] || {}\n    const isNamespace = originalTypeEvent.startsWith('.')\n\n    if (typeof callable !== 'undefined') {\n      // Simplest case: handler is passed, remove that listener ONLY.\n      if (!Object.keys(storeElementEvent).length) {\n        return\n      }\n\n      removeHandler(element, events, typeEvent, callable, isDelegated ? handler : null)\n      return\n    }\n\n    if (isNamespace) {\n      for (const elementEvent of Object.keys(events)) {\n        removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1))\n      }\n    }\n\n    for (const [keyHandlers, event] of Object.entries(storeElementEvent)) {\n      const handlerKey = keyHandlers.replace(stripUidRegex, '')\n\n      if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n        removeHandler(element, events, typeEvent, event.callable, event.delegationSelector)\n      }\n    }\n  },\n\n  trigger(element, event, args) {\n    if (typeof event !== 'string' || !element) {\n      return null\n    }\n\n    const $ = getjQuery()\n    const typeEvent = getTypeEvent(event)\n    const inNamespace = event !== typeEvent\n\n    let jQueryEvent = null\n    let bubbles = true\n    let nativeDispatch = true\n    let defaultPrevented = false\n\n    if (inNamespace && $) {\n      jQueryEvent = $.Event(event, args)\n\n      $(element).trigger(jQueryEvent)\n      bubbles = !jQueryEvent.isPropagationStopped()\n      nativeDispatch = !jQueryEvent.isImmediatePropagationStopped()\n      defaultPrevented = jQueryEvent.isDefaultPrevented()\n    }\n\n    const evt = hydrateObj(new Event(event, { bubbles, cancelable: true }), args)\n\n    if (defaultPrevented) {\n      evt.preventDefault()\n    }\n\n    if (nativeDispatch) {\n      element.dispatchEvent(evt)\n    }\n\n    if (evt.defaultPrevented && jQueryEvent) {\n      jQueryEvent.preventDefault()\n    }\n\n    return evt\n  }\n}\n\nfunction hydrateObj(obj, meta = {}) {\n  for (const [key, value] of Object.entries(meta)) {\n    try {\n      obj[key] = value\n    } catch {\n      Object.defineProperty(obj, key, {\n        configurable: true,\n        get() {\n          return value\n        }\n      })\n    }\n  }\n\n  return obj\n}\n\nexport default EventHandler\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/manipulator.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nfunction normalizeData(value) {\n  if (value === 'true') {\n    return true\n  }\n\n  if (value === 'false') {\n    return false\n  }\n\n  if (value === Number(value).toString()) {\n    return Number(value)\n  }\n\n  if (value === '' || value === 'null') {\n    return null\n  }\n\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  try {\n    return JSON.parse(decodeURIComponent(value))\n  } catch {\n    return value\n  }\n}\n\nfunction normalizeDataKey(key) {\n  return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`)\n}\n\nconst Manipulator = {\n  setDataAttribute(element, key, value) {\n    element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value)\n  },\n\n  removeDataAttribute(element, key) {\n    element.removeAttribute(`data-bs-${normalizeDataKey(key)}`)\n  },\n\n  getDataAttributes(element) {\n    if (!element) {\n      return {}\n    }\n\n    const attributes = {}\n    const bsKeys = Object.keys(element.dataset).filter(key => key.startsWith('bs') && !key.startsWith('bsConfig'))\n\n    for (const key of bsKeys) {\n      let pureKey = key.replace(/^bs/, '')\n      pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length)\n      attributes[pureKey] = normalizeData(element.dataset[key])\n    }\n\n    return attributes\n  },\n\n  getDataAttribute(element, key) {\n    return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`))\n  }\n}\n\nexport default Manipulator\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/config.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Manipulator from '../dom/manipulator.js'\nimport { isElement, toType } from './index.js'\n\n/**\n * Class definition\n */\n\nclass Config {\n  // Getters\n  static get Default() {\n    return {}\n  }\n\n  static get DefaultType() {\n    return {}\n  }\n\n  static get NAME() {\n    throw new Error('You have to implement the static method \"NAME\", for each component!')\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  _configAfterMerge(config) {\n    return config\n  }\n\n  _mergeConfigObj(config, element) {\n    const jsonConfig = isElement(element) ? Manipulator.getDataAttribute(element, 'config') : {} // try to parse\n\n    return {\n      ...this.constructor.Default,\n      ...(typeof jsonConfig === 'object' ? jsonConfig : {}),\n      ...(isElement(element) ? Manipulator.getDataAttributes(element) : {}),\n      ...(typeof config === 'object' ? config : {})\n    }\n  }\n\n  _typeCheckConfig(config, configTypes = this.constructor.DefaultType) {\n    for (const [property, expectedTypes] of Object.entries(configTypes)) {\n      const value = config[property]\n      const valueType = isElement(value) ? 'element' : toType(value)\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        throw new TypeError(\n          `${this.constructor.NAME.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`\n        )\n      }\n    }\n  }\n}\n\nexport default Config\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap base-component.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Data from './dom/data.js'\nimport EventHandler from './dom/event-handler.js'\nimport Config from './util/config.js'\nimport { executeAfterTransition, getElement } from './util/index.js'\n\n/**\n * Constants\n */\n\nconst VERSION = '5.3.3'\n\n/**\n * Class definition\n */\n\nclass BaseComponent extends Config {\n  constructor(element, config) {\n    super()\n\n    element = getElement(element)\n    if (!element) {\n      return\n    }\n\n    this._element = element\n    this._config = this._getConfig(config)\n\n    Data.set(this._element, this.constructor.DATA_KEY, this)\n  }\n\n  // Public\n  dispose() {\n    Data.remove(this._element, this.constructor.DATA_KEY)\n    EventHandler.off(this._element, this.constructor.EVENT_KEY)\n\n    for (const propertyName of Object.getOwnPropertyNames(this)) {\n      this[propertyName] = null\n    }\n  }\n\n  _queueCallback(callback, element, isAnimated = true) {\n    executeAfterTransition(callback, element, isAnimated)\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config, this._element)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  // Static\n  static getInstance(element) {\n    return Data.get(getElement(element), this.DATA_KEY)\n  }\n\n  static getOrCreateInstance(element, config = {}) {\n    return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null)\n  }\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get DATA_KEY() {\n    return `bs.${this.NAME}`\n  }\n\n  static get EVENT_KEY() {\n    return `.${this.DATA_KEY}`\n  }\n\n  static eventName(name) {\n    return `${name}${this.EVENT_KEY}`\n  }\n}\n\nexport default BaseComponent\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { isDisabled, isVisible, parseSelector } from '../util/index.js'\n\nconst getSelector = element => {\n  let selector = element.getAttribute('data-bs-target')\n\n  if (!selector || selector === '#') {\n    let hrefAttribute = element.getAttribute('href')\n\n    // The only valid content that could double as a selector are IDs or classes,\n    // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n    // `document.querySelector` will rightfully complain it is invalid.\n    // See https://github.com/twbs/bootstrap/issues/32273\n    if (!hrefAttribute || (!hrefAttribute.includes('#') && !hrefAttribute.startsWith('.'))) {\n      return null\n    }\n\n    // Just in case some CMS puts out a full URL with the anchor appended\n    if (hrefAttribute.includes('#') && !hrefAttribute.startsWith('#')) {\n      hrefAttribute = `#${hrefAttribute.split('#')[1]}`\n    }\n\n    selector = hrefAttribute && hrefAttribute !== '#' ? hrefAttribute.trim() : null\n  }\n\n  return selector ? selector.split(',').map(sel => parseSelector(sel)).join(',') : null\n}\n\nconst SelectorEngine = {\n  find(selector, element = document.documentElement) {\n    return [].concat(...Element.prototype.querySelectorAll.call(element, selector))\n  },\n\n  findOne(selector, element = document.documentElement) {\n    return Element.prototype.querySelector.call(element, selector)\n  },\n\n  children(element, selector) {\n    return [].concat(...element.children).filter(child => child.matches(selector))\n  },\n\n  parents(element, selector) {\n    const parents = []\n    let ancestor = element.parentNode.closest(selector)\n\n    while (ancestor) {\n      parents.push(ancestor)\n      ancestor = ancestor.parentNode.closest(selector)\n    }\n\n    return parents\n  },\n\n  prev(element, selector) {\n    let previous = element.previousElementSibling\n\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous]\n      }\n\n      previous = previous.previousElementSibling\n    }\n\n    return []\n  },\n  // TODO: this is now unused; remove later along with prev()\n  next(element, selector) {\n    let next = element.nextElementSibling\n\n    while (next) {\n      if (next.matches(selector)) {\n        return [next]\n      }\n\n      next = next.nextElementSibling\n    }\n\n    return []\n  },\n\n  focusableChildren(element) {\n    const focusables = [\n      'a',\n      'button',\n      'input',\n      'textarea',\n      'select',\n      'details',\n      '[tabindex]',\n      '[contenteditable=\"true\"]'\n    ].map(selector => `${selector}:not([tabindex^=\"-\"])`).join(',')\n\n    return this.find(focusables, element).filter(el => !isDisabled(el) && isVisible(el))\n  },\n\n  getSelectorFromElement(element) {\n    const selector = getSelector(element)\n\n    if (selector) {\n      return SelectorEngine.findOne(selector) ? selector : null\n    }\n\n    return null\n  },\n\n  getElementFromSelector(element) {\n    const selector = getSelector(element)\n\n    return selector ? SelectorEngine.findOne(selector) : null\n  },\n\n  getMultipleElementsFromSelector(element) {\n    const selector = getSelector(element)\n\n    return selector ? SelectorEngine.find(selector) : []\n  }\n}\n\nexport default SelectorEngine\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/component-functions.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler.js'\nimport SelectorEngine from '../dom/selector-engine.js'\nimport { isDisabled } from './index.js'\n\nconst enableDismissTrigger = (component, method = 'hide') => {\n  const clickEvent = `click.dismiss${component.EVENT_KEY}`\n  const name = component.NAME\n\n  EventHandler.on(document, clickEvent, `[data-bs-dismiss=\"${name}\"]`, function (event) {\n    if (['A', 'AREA'].includes(this.tagName)) {\n      event.preventDefault()\n    }\n\n    if (isDisabled(this)) {\n      return\n    }\n\n    const target = SelectorEngine.getElementFromSelector(this) || this.closest(`.${name}`)\n    const instance = component.getOrCreateInstance(target)\n\n    // Method argument is left, for Alert and only, as it doesn't implement the 'hide' method\n    instance[method]()\n  })\n}\n\nexport {\n  enableDismissTrigger\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap alert.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport { enableDismissTrigger } from './util/component-functions.js'\nimport { defineJQueryPlugin } from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'alert'\nconst DATA_KEY = 'bs.alert'\nconst EVENT_KEY = `.${DATA_KEY}`\n\nconst EVENT_CLOSE = `close${EVENT_KEY}`\nconst EVENT_CLOSED = `closed${EVENT_KEY}`\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\n\n/**\n * Class definition\n */\n\nclass Alert extends BaseComponent {\n  // Getters\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  close() {\n    const closeEvent = EventHandler.trigger(this._element, EVENT_CLOSE)\n\n    if (closeEvent.defaultPrevented) {\n      return\n    }\n\n    this._element.classList.remove(CLASS_NAME_SHOW)\n\n    const isAnimated = this._element.classList.contains(CLASS_NAME_FADE)\n    this._queueCallback(() => this._destroyElement(), this._element, isAnimated)\n  }\n\n  // Private\n  _destroyElement() {\n    this._element.remove()\n    EventHandler.trigger(this._element, EVENT_CLOSED)\n    this.dispose()\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Alert.getOrCreateInstance(this)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config](this)\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nenableDismissTrigger(Alert, 'close')\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Alert)\n\nexport default Alert\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport { defineJQueryPlugin } from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'button'\nconst DATA_KEY = 'bs.button'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst CLASS_NAME_ACTIVE = 'active'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"button\"]'\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\n/**\n * Class definition\n */\n\nclass Button extends BaseComponent {\n  // Getters\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggle() {\n    // Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method\n    this._element.setAttribute('aria-pressed', this._element.classList.toggle(CLASS_NAME_ACTIVE))\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Button.getOrCreateInstance(this)\n\n      if (config === 'toggle') {\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, event => {\n  event.preventDefault()\n\n  const button = event.target.closest(SELECTOR_DATA_TOGGLE)\n  const data = Button.getOrCreateInstance(button)\n\n  data.toggle()\n})\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Button)\n\nexport default Button\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/swipe.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler.js'\nimport Config from './config.js'\nimport { execute } from './index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'swipe'\nconst EVENT_KEY = '.bs.swipe'\nconst EVENT_TOUCHSTART = `touchstart${EVENT_KEY}`\nconst EVENT_TOUCHMOVE = `touchmove${EVENT_KEY}`\nconst EVENT_TOUCHEND = `touchend${EVENT_KEY}`\nconst EVENT_POINTERDOWN = `pointerdown${EVENT_KEY}`\nconst EVENT_POINTERUP = `pointerup${EVENT_KEY}`\nconst POINTER_TYPE_TOUCH = 'touch'\nconst POINTER_TYPE_PEN = 'pen'\nconst CLASS_NAME_POINTER_EVENT = 'pointer-event'\nconst SWIPE_THRESHOLD = 40\n\nconst Default = {\n  endCallback: null,\n  leftCallback: null,\n  rightCallback: null\n}\n\nconst DefaultType = {\n  endCallback: '(function|null)',\n  leftCallback: '(function|null)',\n  rightCallback: '(function|null)'\n}\n\n/**\n * Class definition\n */\n\nclass Swipe extends Config {\n  constructor(element, config) {\n    super()\n    this._element = element\n\n    if (!element || !Swipe.isSupported()) {\n      return\n    }\n\n    this._config = this._getConfig(config)\n    this._deltaX = 0\n    this._supportPointerEvents = Boolean(window.PointerEvent)\n    this._initEvents()\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  dispose() {\n    EventHandler.off(this._element, EVENT_KEY)\n  }\n\n  // Private\n  _start(event) {\n    if (!this._supportPointerEvents) {\n      this._deltaX = event.touches[0].clientX\n\n      return\n    }\n\n    if (this._eventIsPointerPenTouch(event)) {\n      this._deltaX = event.clientX\n    }\n  }\n\n  _end(event) {\n    if (this._eventIsPointerPenTouch(event)) {\n      this._deltaX = event.clientX - this._deltaX\n    }\n\n    this._handleSwipe()\n    execute(this._config.endCallback)\n  }\n\n  _move(event) {\n    this._deltaX = event.touches && event.touches.length > 1 ?\n      0 :\n      event.touches[0].clientX - this._deltaX\n  }\n\n  _handleSwipe() {\n    const absDeltaX = Math.abs(this._deltaX)\n\n    if (absDeltaX <= SWIPE_THRESHOLD) {\n      return\n    }\n\n    const direction = absDeltaX / this._deltaX\n\n    this._deltaX = 0\n\n    if (!direction) {\n      return\n    }\n\n    execute(direction > 0 ? this._config.rightCallback : this._config.leftCallback)\n  }\n\n  _initEvents() {\n    if (this._supportPointerEvents) {\n      EventHandler.on(this._element, EVENT_POINTERDOWN, event => this._start(event))\n      EventHandler.on(this._element, EVENT_POINTERUP, event => this._end(event))\n\n      this._element.classList.add(CLASS_NAME_POINTER_EVENT)\n    } else {\n      EventHandler.on(this._element, EVENT_TOUCHSTART, event => this._start(event))\n      EventHandler.on(this._element, EVENT_TOUCHMOVE, event => this._move(event))\n      EventHandler.on(this._element, EVENT_TOUCHEND, event => this._end(event))\n    }\n  }\n\n  _eventIsPointerPenTouch(event) {\n    return this._supportPointerEvents && (event.pointerType === POINTER_TYPE_PEN || event.pointerType === POINTER_TYPE_TOUCH)\n  }\n\n  // Static\n  static isSupported() {\n    return 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0\n  }\n}\n\nexport default Swipe\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap carousel.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport Manipulator from './dom/manipulator.js'\nimport SelectorEngine from './dom/selector-engine.js'\nimport {\n  defineJQueryPlugin,\n  getNextActiveElement,\n  isRTL,\n  isVisible,\n  reflow,\n  triggerTransitionEnd\n} from './util/index.js'\nimport Swipe from './util/swipe.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'carousel'\nconst DATA_KEY = 'bs.carousel'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst ARROW_LEFT_KEY = 'ArrowLeft'\nconst ARROW_RIGHT_KEY = 'ArrowRight'\nconst TOUCHEVENT_COMPAT_WAIT = 500 // Time for mouse compat events to fire after touch\n\nconst ORDER_NEXT = 'next'\nconst ORDER_PREV = 'prev'\nconst DIRECTION_LEFT = 'left'\nconst DIRECTION_RIGHT = 'right'\n\nconst EVENT_SLIDE = `slide${EVENT_KEY}`\nconst EVENT_SLID = `slid${EVENT_KEY}`\nconst EVENT_KEYDOWN = `keydown${EVENT_KEY}`\nconst EVENT_MOUSEENTER = `mouseenter${EVENT_KEY}`\nconst EVENT_MOUSELEAVE = `mouseleave${EVENT_KEY}`\nconst EVENT_DRAG_START = `dragstart${EVENT_KEY}`\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_CAROUSEL = 'carousel'\nconst CLASS_NAME_ACTIVE = 'active'\nconst CLASS_NAME_SLIDE = 'slide'\nconst CLASS_NAME_END = 'carousel-item-end'\nconst CLASS_NAME_START = 'carousel-item-start'\nconst CLASS_NAME_NEXT = 'carousel-item-next'\nconst CLASS_NAME_PREV = 'carousel-item-prev'\n\nconst SELECTOR_ACTIVE = '.active'\nconst SELECTOR_ITEM = '.carousel-item'\nconst SELECTOR_ACTIVE_ITEM = SELECTOR_ACTIVE + SELECTOR_ITEM\nconst SELECTOR_ITEM_IMG = '.carousel-item img'\nconst SELECTOR_INDICATORS = '.carousel-indicators'\nconst SELECTOR_DATA_SLIDE = '[data-bs-slide], [data-bs-slide-to]'\nconst SELECTOR_DATA_RIDE = '[data-bs-ride=\"carousel\"]'\n\nconst KEY_TO_DIRECTION = {\n  [ARROW_LEFT_KEY]: DIRECTION_RIGHT,\n  [ARROW_RIGHT_KEY]: DIRECTION_LEFT\n}\n\nconst Default = {\n  interval: 5000,\n  keyboard: true,\n  pause: 'hover',\n  ride: false,\n  touch: true,\n  wrap: true\n}\n\nconst DefaultType = {\n  interval: '(number|boolean)', // TODO:v6 remove boolean support\n  keyboard: 'boolean',\n  pause: '(string|boolean)',\n  ride: '(boolean|string)',\n  touch: 'boolean',\n  wrap: 'boolean'\n}\n\n/**\n * Class definition\n */\n\nclass Carousel extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    this._interval = null\n    this._activeElement = null\n    this._isSliding = false\n    this.touchTimeout = null\n    this._swipeHelper = null\n\n    this._indicatorsElement = SelectorEngine.findOne(SELECTOR_INDICATORS, this._element)\n    this._addEventListeners()\n\n    if (this._config.ride === CLASS_NAME_CAROUSEL) {\n      this.cycle()\n    }\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  next() {\n    this._slide(ORDER_NEXT)\n  }\n\n  nextWhenVisible() {\n    // FIXME TODO use `document.visibilityState`\n    // Don't call next when the page isn't visible\n    // or the carousel or its parent isn't visible\n    if (!document.hidden && isVisible(this._element)) {\n      this.next()\n    }\n  }\n\n  prev() {\n    this._slide(ORDER_PREV)\n  }\n\n  pause() {\n    if (this._isSliding) {\n      triggerTransitionEnd(this._element)\n    }\n\n    this._clearInterval()\n  }\n\n  cycle() {\n    this._clearInterval()\n    this._updateInterval()\n\n    this._interval = setInterval(() => this.nextWhenVisible(), this._config.interval)\n  }\n\n  _maybeEnableCycle() {\n    if (!this._config.ride) {\n      return\n    }\n\n    if (this._isSliding) {\n      EventHandler.one(this._element, EVENT_SLID, () => this.cycle())\n      return\n    }\n\n    this.cycle()\n  }\n\n  to(index) {\n    const items = this._getItems()\n    if (index > items.length - 1 || index < 0) {\n      return\n    }\n\n    if (this._isSliding) {\n      EventHandler.one(this._element, EVENT_SLID, () => this.to(index))\n      return\n    }\n\n    const activeIndex = this._getItemIndex(this._getActive())\n    if (activeIndex === index) {\n      return\n    }\n\n    const order = index > activeIndex ? ORDER_NEXT : ORDER_PREV\n\n    this._slide(order, items[index])\n  }\n\n  dispose() {\n    if (this._swipeHelper) {\n      this._swipeHelper.dispose()\n    }\n\n    super.dispose()\n  }\n\n  // Private\n  _configAfterMerge(config) {\n    config.defaultInterval = config.interval\n    return config\n  }\n\n  _addEventListeners() {\n    if (this._config.keyboard) {\n      EventHandler.on(this._element, EVENT_KEYDOWN, event => this._keydown(event))\n    }\n\n    if (this._config.pause === 'hover') {\n      EventHandler.on(this._element, EVENT_MOUSEENTER, () => this.pause())\n      EventHandler.on(this._element, EVENT_MOUSELEAVE, () => this._maybeEnableCycle())\n    }\n\n    if (this._config.touch && Swipe.isSupported()) {\n      this._addTouchEventListeners()\n    }\n  }\n\n  _addTouchEventListeners() {\n    for (const img of SelectorEngine.find(SELECTOR_ITEM_IMG, this._element)) {\n      EventHandler.on(img, EVENT_DRAG_START, event => event.preventDefault())\n    }\n\n    const endCallBack = () => {\n      if (this._config.pause !== 'hover') {\n        return\n      }\n\n      // If it's a touch-enabled device, mouseenter/leave are fired as\n      // part of the mouse compatibility events on first tap - the carousel\n      // would stop cycling until user tapped out of it;\n      // here, we listen for touchend, explicitly pause the carousel\n      // (as if it's the second time we tap on it, mouseenter compat event\n      // is NOT fired) and after a timeout (to allow for mouse compatibility\n      // events to fire) we explicitly restart cycling\n\n      this.pause()\n      if (this.touchTimeout) {\n        clearTimeout(this.touchTimeout)\n      }\n\n      this.touchTimeout = setTimeout(() => this._maybeEnableCycle(), TOUCHEVENT_COMPAT_WAIT + this._config.interval)\n    }\n\n    const swipeConfig = {\n      leftCallback: () => this._slide(this._directionToOrder(DIRECTION_LEFT)),\n      rightCallback: () => this._slide(this._directionToOrder(DIRECTION_RIGHT)),\n      endCallback: endCallBack\n    }\n\n    this._swipeHelper = new Swipe(this._element, swipeConfig)\n  }\n\n  _keydown(event) {\n    if (/input|textarea/i.test(event.target.tagName)) {\n      return\n    }\n\n    const direction = KEY_TO_DIRECTION[event.key]\n    if (direction) {\n      event.preventDefault()\n      this._slide(this._directionToOrder(direction))\n    }\n  }\n\n  _getItemIndex(element) {\n    return this._getItems().indexOf(element)\n  }\n\n  _setActiveIndicatorElement(index) {\n    if (!this._indicatorsElement) {\n      return\n    }\n\n    const activeIndicator = SelectorEngine.findOne(SELECTOR_ACTIVE, this._indicatorsElement)\n\n    activeIndicator.classList.remove(CLASS_NAME_ACTIVE)\n    activeIndicator.removeAttribute('aria-current')\n\n    const newActiveIndicator = SelectorEngine.findOne(`[data-bs-slide-to=\"${index}\"]`, this._indicatorsElement)\n\n    if (newActiveIndicator) {\n      newActiveIndicator.classList.add(CLASS_NAME_ACTIVE)\n      newActiveIndicator.setAttribute('aria-current', 'true')\n    }\n  }\n\n  _updateInterval() {\n    const element = this._activeElement || this._getActive()\n\n    if (!element) {\n      return\n    }\n\n    const elementInterval = Number.parseInt(element.getAttribute('data-bs-interval'), 10)\n\n    this._config.interval = elementInterval || this._config.defaultInterval\n  }\n\n  _slide(order, element = null) {\n    if (this._isSliding) {\n      return\n    }\n\n    const activeElement = this._getActive()\n    const isNext = order === ORDER_NEXT\n    const nextElement = element || getNextActiveElement(this._getItems(), activeElement, isNext, this._config.wrap)\n\n    if (nextElement === activeElement) {\n      return\n    }\n\n    const nextElementIndex = this._getItemIndex(nextElement)\n\n    const triggerEvent = eventName => {\n      return EventHandler.trigger(this._element, eventName, {\n        relatedTarget: nextElement,\n        direction: this._orderToDirection(order),\n        from: this._getItemIndex(activeElement),\n        to: nextElementIndex\n      })\n    }\n\n    const slideEvent = triggerEvent(EVENT_SLIDE)\n\n    if (slideEvent.defaultPrevented) {\n      return\n    }\n\n    if (!activeElement || !nextElement) {\n      // Some weirdness is happening, so we bail\n      // TODO: change tests that use empty divs to avoid this check\n      return\n    }\n\n    const isCycling = Boolean(this._interval)\n    this.pause()\n\n    this._isSliding = true\n\n    this._setActiveIndicatorElement(nextElementIndex)\n    this._activeElement = nextElement\n\n    const directionalClassName = isNext ? CLASS_NAME_START : CLASS_NAME_END\n    const orderClassName = isNext ? CLASS_NAME_NEXT : CLASS_NAME_PREV\n\n    nextElement.classList.add(orderClassName)\n\n    reflow(nextElement)\n\n    activeElement.classList.add(directionalClassName)\n    nextElement.classList.add(directionalClassName)\n\n    const completeCallBack = () => {\n      nextElement.classList.remove(directionalClassName, orderClassName)\n      nextElement.classList.add(CLASS_NAME_ACTIVE)\n\n      activeElement.classList.remove(CLASS_NAME_ACTIVE, orderClassName, directionalClassName)\n\n      this._isSliding = false\n\n      triggerEvent(EVENT_SLID)\n    }\n\n    this._queueCallback(completeCallBack, activeElement, this._isAnimated())\n\n    if (isCycling) {\n      this.cycle()\n    }\n  }\n\n  _isAnimated() {\n    return this._element.classList.contains(CLASS_NAME_SLIDE)\n  }\n\n  _getActive() {\n    return SelectorEngine.findOne(SELECTOR_ACTIVE_ITEM, this._element)\n  }\n\n  _getItems() {\n    return SelectorEngine.find(SELECTOR_ITEM, this._element)\n  }\n\n  _clearInterval() {\n    if (this._interval) {\n      clearInterval(this._interval)\n      this._interval = null\n    }\n  }\n\n  _directionToOrder(direction) {\n    if (isRTL()) {\n      return direction === DIRECTION_LEFT ? ORDER_PREV : ORDER_NEXT\n    }\n\n    return direction === DIRECTION_LEFT ? ORDER_NEXT : ORDER_PREV\n  }\n\n  _orderToDirection(order) {\n    if (isRTL()) {\n      return order === ORDER_PREV ? DIRECTION_LEFT : DIRECTION_RIGHT\n    }\n\n    return order === ORDER_PREV ? DIRECTION_RIGHT : DIRECTION_LEFT\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Carousel.getOrCreateInstance(this, config)\n\n      if (typeof config === 'number') {\n        data.to(config)\n        return\n      }\n\n      if (typeof config === 'string') {\n        if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_SLIDE, function (event) {\n  const target = SelectorEngine.getElementFromSelector(this)\n\n  if (!target || !target.classList.contains(CLASS_NAME_CAROUSEL)) {\n    return\n  }\n\n  event.preventDefault()\n\n  const carousel = Carousel.getOrCreateInstance(target)\n  const slideIndex = this.getAttribute('data-bs-slide-to')\n\n  if (slideIndex) {\n    carousel.to(slideIndex)\n    carousel._maybeEnableCycle()\n    return\n  }\n\n  if (Manipulator.getDataAttribute(this, 'slide') === 'next') {\n    carousel.next()\n    carousel._maybeEnableCycle()\n    return\n  }\n\n  carousel.prev()\n  carousel._maybeEnableCycle()\n})\n\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n  const carousels = SelectorEngine.find(SELECTOR_DATA_RIDE)\n\n  for (const carousel of carousels) {\n    Carousel.getOrCreateInstance(carousel)\n  }\n})\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Carousel)\n\nexport default Carousel\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap collapse.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport SelectorEngine from './dom/selector-engine.js'\nimport {\n  defineJQueryPlugin,\n  getElement,\n  reflow\n} from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'collapse'\nconst DATA_KEY = 'bs.collapse'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_COLLAPSE = 'collapse'\nconst CLASS_NAME_COLLAPSING = 'collapsing'\nconst CLASS_NAME_COLLAPSED = 'collapsed'\nconst CLASS_NAME_DEEPER_CHILDREN = `:scope .${CLASS_NAME_COLLAPSE} .${CLASS_NAME_COLLAPSE}`\nconst CLASS_NAME_HORIZONTAL = 'collapse-horizontal'\n\nconst WIDTH = 'width'\nconst HEIGHT = 'height'\n\nconst SELECTOR_ACTIVES = '.collapse.show, .collapse.collapsing'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"collapse\"]'\n\nconst Default = {\n  parent: null,\n  toggle: true\n}\n\nconst DefaultType = {\n  parent: '(null|element)',\n  toggle: 'boolean'\n}\n\n/**\n * Class definition\n */\n\nclass Collapse extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    this._isTransitioning = false\n    this._triggerArray = []\n\n    const toggleList = SelectorEngine.find(SELECTOR_DATA_TOGGLE)\n\n    for (const elem of toggleList) {\n      const selector = SelectorEngine.getSelectorFromElement(elem)\n      const filterElement = SelectorEngine.find(selector)\n        .filter(foundElement => foundElement === this._element)\n\n      if (selector !== null && filterElement.length) {\n        this._triggerArray.push(elem)\n      }\n    }\n\n    this._initializeChildren()\n\n    if (!this._config.parent) {\n      this._addAriaAndCollapsedClass(this._triggerArray, this._isShown())\n    }\n\n    if (this._config.toggle) {\n      this.toggle()\n    }\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggle() {\n    if (this._isShown()) {\n      this.hide()\n    } else {\n      this.show()\n    }\n  }\n\n  show() {\n    if (this._isTransitioning || this._isShown()) {\n      return\n    }\n\n    let activeChildren = []\n\n    // find active children\n    if (this._config.parent) {\n      activeChildren = this._getFirstLevelChildren(SELECTOR_ACTIVES)\n        .filter(element => element !== this._element)\n        .map(element => Collapse.getOrCreateInstance(element, { toggle: false }))\n    }\n\n    if (activeChildren.length && activeChildren[0]._isTransitioning) {\n      return\n    }\n\n    const startEvent = EventHandler.trigger(this._element, EVENT_SHOW)\n    if (startEvent.defaultPrevented) {\n      return\n    }\n\n    for (const activeInstance of activeChildren) {\n      activeInstance.hide()\n    }\n\n    const dimension = this._getDimension()\n\n    this._element.classList.remove(CLASS_NAME_COLLAPSE)\n    this._element.classList.add(CLASS_NAME_COLLAPSING)\n\n    this._element.style[dimension] = 0\n\n    this._addAriaAndCollapsedClass(this._triggerArray, true)\n    this._isTransitioning = true\n\n    const complete = () => {\n      this._isTransitioning = false\n\n      this._element.classList.remove(CLASS_NAME_COLLAPSING)\n      this._element.classList.add(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW)\n\n      this._element.style[dimension] = ''\n\n      EventHandler.trigger(this._element, EVENT_SHOWN)\n    }\n\n    const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1)\n    const scrollSize = `scroll${capitalizedDimension}`\n\n    this._queueCallback(complete, this._element, true)\n    this._element.style[dimension] = `${this._element[scrollSize]}px`\n  }\n\n  hide() {\n    if (this._isTransitioning || !this._isShown()) {\n      return\n    }\n\n    const startEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n    if (startEvent.defaultPrevented) {\n      return\n    }\n\n    const dimension = this._getDimension()\n\n    this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`\n\n    reflow(this._element)\n\n    this._element.classList.add(CLASS_NAME_COLLAPSING)\n    this._element.classList.remove(CLASS_NAME_COLLAPSE, CLASS_NAME_SHOW)\n\n    for (const trigger of this._triggerArray) {\n      const element = SelectorEngine.getElementFromSelector(trigger)\n\n      if (element && !this._isShown(element)) {\n        this._addAriaAndCollapsedClass([trigger], false)\n      }\n    }\n\n    this._isTransitioning = true\n\n    const complete = () => {\n      this._isTransitioning = false\n      this._element.classList.remove(CLASS_NAME_COLLAPSING)\n      this._element.classList.add(CLASS_NAME_COLLAPSE)\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    }\n\n    this._element.style[dimension] = ''\n\n    this._queueCallback(complete, this._element, true)\n  }\n\n  _isShown(element = this._element) {\n    return element.classList.contains(CLASS_NAME_SHOW)\n  }\n\n  // Private\n  _configAfterMerge(config) {\n    config.toggle = Boolean(config.toggle) // Coerce string values\n    config.parent = getElement(config.parent)\n    return config\n  }\n\n  _getDimension() {\n    return this._element.classList.contains(CLASS_NAME_HORIZONTAL) ? WIDTH : HEIGHT\n  }\n\n  _initializeChildren() {\n    if (!this._config.parent) {\n      return\n    }\n\n    const children = this._getFirstLevelChildren(SELECTOR_DATA_TOGGLE)\n\n    for (const element of children) {\n      const selected = SelectorEngine.getElementFromSelector(element)\n\n      if (selected) {\n        this._addAriaAndCollapsedClass([element], this._isShown(selected))\n      }\n    }\n  }\n\n  _getFirstLevelChildren(selector) {\n    const children = SelectorEngine.find(CLASS_NAME_DEEPER_CHILDREN, this._config.parent)\n    // remove children if greater depth\n    return SelectorEngine.find(selector, this._config.parent).filter(element => !children.includes(element))\n  }\n\n  _addAriaAndCollapsedClass(triggerArray, isOpen) {\n    if (!triggerArray.length) {\n      return\n    }\n\n    for (const element of triggerArray) {\n      element.classList.toggle(CLASS_NAME_COLLAPSED, !isOpen)\n      element.setAttribute('aria-expanded', isOpen)\n    }\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    const _config = {}\n    if (typeof config === 'string' && /show|hide/.test(config)) {\n      _config.toggle = false\n    }\n\n    return this.each(function () {\n      const data = Collapse.getOrCreateInstance(this, _config)\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n  if (event.target.tagName === 'A' || (event.delegateTarget && event.delegateTarget.tagName === 'A')) {\n    event.preventDefault()\n  }\n\n  for (const element of SelectorEngine.getMultipleElementsFromSelector(this)) {\n    Collapse.getOrCreateInstance(element, { toggle: false }).toggle()\n  }\n})\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Collapse)\n\nexport default Collapse\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap dropdown.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport * as Popper from '@popperjs/core'\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport Manipulator from './dom/manipulator.js'\nimport SelectorEngine from './dom/selector-engine.js'\nimport {\n  defineJQueryPlugin,\n  execute,\n  getElement,\n  getNextActiveElement,\n  isDisabled,\n  isElement,\n  isRTL,\n  isVisible,\n  noop\n} from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'dropdown'\nconst DATA_KEY = 'bs.dropdown'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst ESCAPE_KEY = 'Escape'\nconst TAB_KEY = 'Tab'\nconst ARROW_UP_KEY = 'ArrowUp'\nconst ARROW_DOWN_KEY = 'ArrowDown'\nconst RIGHT_MOUSE_BUTTON = 2 // MouseEvent.button value for the secondary button, usually the right button\n\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_KEYDOWN_DATA_API = `keydown${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_KEYUP_DATA_API = `keyup${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_DROPUP = 'dropup'\nconst CLASS_NAME_DROPEND = 'dropend'\nconst CLASS_NAME_DROPSTART = 'dropstart'\nconst CLASS_NAME_DROPUP_CENTER = 'dropup-center'\nconst CLASS_NAME_DROPDOWN_CENTER = 'dropdown-center'\n\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"dropdown\"]:not(.disabled):not(:disabled)'\nconst SELECTOR_DATA_TOGGLE_SHOWN = `${SELECTOR_DATA_TOGGLE}.${CLASS_NAME_SHOW}`\nconst SELECTOR_MENU = '.dropdown-menu'\nconst SELECTOR_NAVBAR = '.navbar'\nconst SELECTOR_NAVBAR_NAV = '.navbar-nav'\nconst SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)'\n\nconst PLACEMENT_TOP = isRTL() ? 'top-end' : 'top-start'\nconst PLACEMENT_TOPEND = isRTL() ? 'top-start' : 'top-end'\nconst PLACEMENT_BOTTOM = isRTL() ? 'bottom-end' : 'bottom-start'\nconst PLACEMENT_BOTTOMEND = isRTL() ? 'bottom-start' : 'bottom-end'\nconst PLACEMENT_RIGHT = isRTL() ? 'left-start' : 'right-start'\nconst PLACEMENT_LEFT = isRTL() ? 'right-start' : 'left-start'\nconst PLACEMENT_TOPCENTER = 'top'\nconst PLACEMENT_BOTTOMCENTER = 'bottom'\n\nconst Default = {\n  autoClose: true,\n  boundary: 'clippingParents',\n  display: 'dynamic',\n  offset: [0, 2],\n  popperConfig: null,\n  reference: 'toggle'\n}\n\nconst DefaultType = {\n  autoClose: '(boolean|string)',\n  boundary: '(string|element)',\n  display: 'string',\n  offset: '(array|string|function)',\n  popperConfig: '(null|object|function)',\n  reference: '(string|element|object)'\n}\n\n/**\n * Class definition\n */\n\nclass Dropdown extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    this._popper = null\n    this._parent = this._element.parentNode // dropdown wrapper\n    // TODO: v6 revert #37011 & change markup https://getbootstrap.com/docs/5.3/forms/input-group/\n    this._menu = SelectorEngine.next(this._element, SELECTOR_MENU)[0] ||\n      SelectorEngine.prev(this._element, SELECTOR_MENU)[0] ||\n      SelectorEngine.findOne(SELECTOR_MENU, this._parent)\n    this._inNavbar = this._detectNavbar()\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggle() {\n    return this._isShown() ? this.hide() : this.show()\n  }\n\n  show() {\n    if (isDisabled(this._element) || this._isShown()) {\n      return\n    }\n\n    const relatedTarget = {\n      relatedTarget: this._element\n    }\n\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW, relatedTarget)\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    this._createPopper()\n\n    // If this is a touch-enabled device we add extra\n    // empty mouseover listeners to the body's immediate children;\n    // only needed because of broken event delegation on iOS\n    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n    if ('ontouchstart' in document.documentElement && !this._parent.closest(SELECTOR_NAVBAR_NAV)) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.on(element, 'mouseover', noop)\n      }\n    }\n\n    this._element.focus()\n    this._element.setAttribute('aria-expanded', true)\n\n    this._menu.classList.add(CLASS_NAME_SHOW)\n    this._element.classList.add(CLASS_NAME_SHOW)\n    EventHandler.trigger(this._element, EVENT_SHOWN, relatedTarget)\n  }\n\n  hide() {\n    if (isDisabled(this._element) || !this._isShown()) {\n      return\n    }\n\n    const relatedTarget = {\n      relatedTarget: this._element\n    }\n\n    this._completeHide(relatedTarget)\n  }\n\n  dispose() {\n    if (this._popper) {\n      this._popper.destroy()\n    }\n\n    super.dispose()\n  }\n\n  update() {\n    this._inNavbar = this._detectNavbar()\n    if (this._popper) {\n      this._popper.update()\n    }\n  }\n\n  // Private\n  _completeHide(relatedTarget) {\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE, relatedTarget)\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    // If this is a touch-enabled device we remove the extra\n    // empty mouseover listeners we added for iOS support\n    if ('ontouchstart' in document.documentElement) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.off(element, 'mouseover', noop)\n      }\n    }\n\n    if (this._popper) {\n      this._popper.destroy()\n    }\n\n    this._menu.classList.remove(CLASS_NAME_SHOW)\n    this._element.classList.remove(CLASS_NAME_SHOW)\n    this._element.setAttribute('aria-expanded', 'false')\n    Manipulator.removeDataAttribute(this._menu, 'popper')\n    EventHandler.trigger(this._element, EVENT_HIDDEN, relatedTarget)\n  }\n\n  _getConfig(config) {\n    config = super._getConfig(config)\n\n    if (typeof config.reference === 'object' && !isElement(config.reference) &&\n      typeof config.reference.getBoundingClientRect !== 'function'\n    ) {\n      // Popper virtual elements require a getBoundingClientRect method\n      throw new TypeError(`${NAME.toUpperCase()}: Option \"reference\" provided type \"object\" without a required \"getBoundingClientRect\" method.`)\n    }\n\n    return config\n  }\n\n  _createPopper() {\n    if (typeof Popper === 'undefined') {\n      throw new TypeError('Bootstrap\\'s dropdowns require Popper (https://popper.js.org)')\n    }\n\n    let referenceElement = this._element\n\n    if (this._config.reference === 'parent') {\n      referenceElement = this._parent\n    } else if (isElement(this._config.reference)) {\n      referenceElement = getElement(this._config.reference)\n    } else if (typeof this._config.reference === 'object') {\n      referenceElement = this._config.reference\n    }\n\n    const popperConfig = this._getPopperConfig()\n    this._popper = Popper.createPopper(referenceElement, this._menu, popperConfig)\n  }\n\n  _isShown() {\n    return this._menu.classList.contains(CLASS_NAME_SHOW)\n  }\n\n  _getPlacement() {\n    const parentDropdown = this._parent\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPEND)) {\n      return PLACEMENT_RIGHT\n    }\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPSTART)) {\n      return PLACEMENT_LEFT\n    }\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPUP_CENTER)) {\n      return PLACEMENT_TOPCENTER\n    }\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPDOWN_CENTER)) {\n      return PLACEMENT_BOTTOMCENTER\n    }\n\n    // We need to trim the value because custom properties can also include spaces\n    const isEnd = getComputedStyle(this._menu).getPropertyValue('--bs-position').trim() === 'end'\n\n    if (parentDropdown.classList.contains(CLASS_NAME_DROPUP)) {\n      return isEnd ? PLACEMENT_TOPEND : PLACEMENT_TOP\n    }\n\n    return isEnd ? PLACEMENT_BOTTOMEND : PLACEMENT_BOTTOM\n  }\n\n  _detectNavbar() {\n    return this._element.closest(SELECTOR_NAVBAR) !== null\n  }\n\n  _getOffset() {\n    const { offset } = this._config\n\n    if (typeof offset === 'string') {\n      return offset.split(',').map(value => Number.parseInt(value, 10))\n    }\n\n    if (typeof offset === 'function') {\n      return popperData => offset(popperData, this._element)\n    }\n\n    return offset\n  }\n\n  _getPopperConfig() {\n    const defaultBsPopperConfig = {\n      placement: this._getPlacement(),\n      modifiers: [{\n        name: 'preventOverflow',\n        options: {\n          boundary: this._config.boundary\n        }\n      },\n      {\n        name: 'offset',\n        options: {\n          offset: this._getOffset()\n        }\n      }]\n    }\n\n    // Disable Popper if we have a static display or Dropdown is in Navbar\n    if (this._inNavbar || this._config.display === 'static') {\n      Manipulator.setDataAttribute(this._menu, 'popper', 'static') // TODO: v6 remove\n      defaultBsPopperConfig.modifiers = [{\n        name: 'applyStyles',\n        enabled: false\n      }]\n    }\n\n    return {\n      ...defaultBsPopperConfig,\n      ...execute(this._config.popperConfig, [defaultBsPopperConfig])\n    }\n  }\n\n  _selectMenuItem({ key, target }) {\n    const items = SelectorEngine.find(SELECTOR_VISIBLE_ITEMS, this._menu).filter(element => isVisible(element))\n\n    if (!items.length) {\n      return\n    }\n\n    // if target isn't included in items (e.g. when expanding the dropdown)\n    // allow cycling to get the last item in case key equals ARROW_UP_KEY\n    getNextActiveElement(items, target, key === ARROW_DOWN_KEY, !items.includes(target)).focus()\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Dropdown.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    })\n  }\n\n  static clearMenus(event) {\n    if (event.button === RIGHT_MOUSE_BUTTON || (event.type === 'keyup' && event.key !== TAB_KEY)) {\n      return\n    }\n\n    const openToggles = SelectorEngine.find(SELECTOR_DATA_TOGGLE_SHOWN)\n\n    for (const toggle of openToggles) {\n      const context = Dropdown.getInstance(toggle)\n      if (!context || context._config.autoClose === false) {\n        continue\n      }\n\n      const composedPath = event.composedPath()\n      const isMenuTarget = composedPath.includes(context._menu)\n      if (\n        composedPath.includes(context._element) ||\n        (context._config.autoClose === 'inside' && !isMenuTarget) ||\n        (context._config.autoClose === 'outside' && isMenuTarget)\n      ) {\n        continue\n      }\n\n      // Tab navigation through the dropdown menu or events from contained inputs shouldn't close the menu\n      if (context._menu.contains(event.target) && ((event.type === 'keyup' && event.key === TAB_KEY) || /input|select|option|textarea|form/i.test(event.target.tagName))) {\n        continue\n      }\n\n      const relatedTarget = { relatedTarget: context._element }\n\n      if (event.type === 'click') {\n        relatedTarget.clickEvent = event\n      }\n\n      context._completeHide(relatedTarget)\n    }\n  }\n\n  static dataApiKeydownHandler(event) {\n    // If not an UP | DOWN | ESCAPE key => not a dropdown command\n    // If input/textarea && if key is other than ESCAPE => not a dropdown command\n\n    const isInput = /input|textarea/i.test(event.target.tagName)\n    const isEscapeEvent = event.key === ESCAPE_KEY\n    const isUpOrDownEvent = [ARROW_UP_KEY, ARROW_DOWN_KEY].includes(event.key)\n\n    if (!isUpOrDownEvent && !isEscapeEvent) {\n      return\n    }\n\n    if (isInput && !isEscapeEvent) {\n      return\n    }\n\n    event.preventDefault()\n\n    // TODO: v6 revert #37011 & change markup https://getbootstrap.com/docs/5.3/forms/input-group/\n    const getToggleButton = this.matches(SELECTOR_DATA_TOGGLE) ?\n      this :\n      (SelectorEngine.prev(this, SELECTOR_DATA_TOGGLE)[0] ||\n        SelectorEngine.next(this, SELECTOR_DATA_TOGGLE)[0] ||\n        SelectorEngine.findOne(SELECTOR_DATA_TOGGLE, event.delegateTarget.parentNode))\n\n    const instance = Dropdown.getOrCreateInstance(getToggleButton)\n\n    if (isUpOrDownEvent) {\n      event.stopPropagation()\n      instance.show()\n      instance._selectMenuItem(event)\n      return\n    }\n\n    if (instance._isShown()) { // else is escape and we check if it is shown\n      event.stopPropagation()\n      instance.hide()\n      getToggleButton.focus()\n    }\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_DATA_TOGGLE, Dropdown.dataApiKeydownHandler)\nEventHandler.on(document, EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown.dataApiKeydownHandler)\nEventHandler.on(document, EVENT_CLICK_DATA_API, Dropdown.clearMenus)\nEventHandler.on(document, EVENT_KEYUP_DATA_API, Dropdown.clearMenus)\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  event.preventDefault()\n  Dropdown.getOrCreateInstance(this).toggle()\n})\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Dropdown)\n\nexport default Dropdown\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/backdrop.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler.js'\nimport Config from './config.js'\nimport {\n  execute, executeAfterTransition, getElement, reflow\n} from './index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'backdrop'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\nconst EVENT_MOUSEDOWN = `mousedown.bs.${NAME}`\n\nconst Default = {\n  className: 'modal-backdrop',\n  clickCallback: null,\n  isAnimated: false,\n  isVisible: true, // if false, we use the backdrop helper without adding any element to the dom\n  rootElement: 'body' // give the choice to place backdrop under different elements\n}\n\nconst DefaultType = {\n  className: 'string',\n  clickCallback: '(function|null)',\n  isAnimated: 'boolean',\n  isVisible: 'boolean',\n  rootElement: '(element|string)'\n}\n\n/**\n * Class definition\n */\n\nclass Backdrop extends Config {\n  constructor(config) {\n    super()\n    this._config = this._getConfig(config)\n    this._isAppended = false\n    this._element = null\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  show(callback) {\n    if (!this._config.isVisible) {\n      execute(callback)\n      return\n    }\n\n    this._append()\n\n    const element = this._getElement()\n    if (this._config.isAnimated) {\n      reflow(element)\n    }\n\n    element.classList.add(CLASS_NAME_SHOW)\n\n    this._emulateAnimation(() => {\n      execute(callback)\n    })\n  }\n\n  hide(callback) {\n    if (!this._config.isVisible) {\n      execute(callback)\n      return\n    }\n\n    this._getElement().classList.remove(CLASS_NAME_SHOW)\n\n    this._emulateAnimation(() => {\n      this.dispose()\n      execute(callback)\n    })\n  }\n\n  dispose() {\n    if (!this._isAppended) {\n      return\n    }\n\n    EventHandler.off(this._element, EVENT_MOUSEDOWN)\n\n    this._element.remove()\n    this._isAppended = false\n  }\n\n  // Private\n  _getElement() {\n    if (!this._element) {\n      const backdrop = document.createElement('div')\n      backdrop.className = this._config.className\n      if (this._config.isAnimated) {\n        backdrop.classList.add(CLASS_NAME_FADE)\n      }\n\n      this._element = backdrop\n    }\n\n    return this._element\n  }\n\n  _configAfterMerge(config) {\n    // use getElement() with the default \"body\" to get a fresh Element on each instantiation\n    config.rootElement = getElement(config.rootElement)\n    return config\n  }\n\n  _append() {\n    if (this._isAppended) {\n      return\n    }\n\n    const element = this._getElement()\n    this._config.rootElement.append(element)\n\n    EventHandler.on(element, EVENT_MOUSEDOWN, () => {\n      execute(this._config.clickCallback)\n    })\n\n    this._isAppended = true\n  }\n\n  _emulateAnimation(callback) {\n    executeAfterTransition(callback, this._getElement(), this._config.isAnimated)\n  }\n}\n\nexport default Backdrop\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/focustrap.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport EventHandler from '../dom/event-handler.js'\nimport SelectorEngine from '../dom/selector-engine.js'\nimport Config from './config.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'focustrap'\nconst DATA_KEY = 'bs.focustrap'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst EVENT_FOCUSIN = `focusin${EVENT_KEY}`\nconst EVENT_KEYDOWN_TAB = `keydown.tab${EVENT_KEY}`\n\nconst TAB_KEY = 'Tab'\nconst TAB_NAV_FORWARD = 'forward'\nconst TAB_NAV_BACKWARD = 'backward'\n\nconst Default = {\n  autofocus: true,\n  trapElement: null // The element to trap focus inside of\n}\n\nconst DefaultType = {\n  autofocus: 'boolean',\n  trapElement: 'element'\n}\n\n/**\n * Class definition\n */\n\nclass FocusTrap extends Config {\n  constructor(config) {\n    super()\n    this._config = this._getConfig(config)\n    this._isActive = false\n    this._lastTabNavDirection = null\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  activate() {\n    if (this._isActive) {\n      return\n    }\n\n    if (this._config.autofocus) {\n      this._config.trapElement.focus()\n    }\n\n    EventHandler.off(document, EVENT_KEY) // guard against infinite focus loop\n    EventHandler.on(document, EVENT_FOCUSIN, event => this._handleFocusin(event))\n    EventHandler.on(document, EVENT_KEYDOWN_TAB, event => this._handleKeydown(event))\n\n    this._isActive = true\n  }\n\n  deactivate() {\n    if (!this._isActive) {\n      return\n    }\n\n    this._isActive = false\n    EventHandler.off(document, EVENT_KEY)\n  }\n\n  // Private\n  _handleFocusin(event) {\n    const { trapElement } = this._config\n\n    if (event.target === document || event.target === trapElement || trapElement.contains(event.target)) {\n      return\n    }\n\n    const elements = SelectorEngine.focusableChildren(trapElement)\n\n    if (elements.length === 0) {\n      trapElement.focus()\n    } else if (this._lastTabNavDirection === TAB_NAV_BACKWARD) {\n      elements[elements.length - 1].focus()\n    } else {\n      elements[0].focus()\n    }\n  }\n\n  _handleKeydown(event) {\n    if (event.key !== TAB_KEY) {\n      return\n    }\n\n    this._lastTabNavDirection = event.shiftKey ? TAB_NAV_BACKWARD : TAB_NAV_FORWARD\n  }\n}\n\nexport default FocusTrap\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/scrollBar.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Manipulator from '../dom/manipulator.js'\nimport SelectorEngine from '../dom/selector-engine.js'\nimport { isElement } from './index.js'\n\n/**\n * Constants\n */\n\nconst SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'\nconst SELECTOR_STICKY_CONTENT = '.sticky-top'\nconst PROPERTY_PADDING = 'padding-right'\nconst PROPERTY_MARGIN = 'margin-right'\n\n/**\n * Class definition\n */\n\nclass ScrollBarHelper {\n  constructor() {\n    this._element = document.body\n  }\n\n  // Public\n  getWidth() {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth#usage_notes\n    const documentWidth = document.documentElement.clientWidth\n    return Math.abs(window.innerWidth - documentWidth)\n  }\n\n  hide() {\n    const width = this.getWidth()\n    this._disableOverFlow()\n    // give padding to element to balance the hidden scrollbar width\n    this._setElementAttributes(this._element, PROPERTY_PADDING, calculatedValue => calculatedValue + width)\n    // trick: We adjust positive paddingRight and negative marginRight to sticky-top elements to keep showing fullwidth\n    this._setElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING, calculatedValue => calculatedValue + width)\n    this._setElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN, calculatedValue => calculatedValue - width)\n  }\n\n  reset() {\n    this._resetElementAttributes(this._element, 'overflow')\n    this._resetElementAttributes(this._element, PROPERTY_PADDING)\n    this._resetElementAttributes(SELECTOR_FIXED_CONTENT, PROPERTY_PADDING)\n    this._resetElementAttributes(SELECTOR_STICKY_CONTENT, PROPERTY_MARGIN)\n  }\n\n  isOverflowing() {\n    return this.getWidth() > 0\n  }\n\n  // Private\n  _disableOverFlow() {\n    this._saveInitialAttribute(this._element, 'overflow')\n    this._element.style.overflow = 'hidden'\n  }\n\n  _setElementAttributes(selector, styleProperty, callback) {\n    const scrollbarWidth = this.getWidth()\n    const manipulationCallBack = element => {\n      if (element !== this._element && window.innerWidth > element.clientWidth + scrollbarWidth) {\n        return\n      }\n\n      this._saveInitialAttribute(element, styleProperty)\n      const calculatedValue = window.getComputedStyle(element).getPropertyValue(styleProperty)\n      element.style.setProperty(styleProperty, `${callback(Number.parseFloat(calculatedValue))}px`)\n    }\n\n    this._applyManipulationCallback(selector, manipulationCallBack)\n  }\n\n  _saveInitialAttribute(element, styleProperty) {\n    const actualValue = element.style.getPropertyValue(styleProperty)\n    if (actualValue) {\n      Manipulator.setDataAttribute(element, styleProperty, actualValue)\n    }\n  }\n\n  _resetElementAttributes(selector, styleProperty) {\n    const manipulationCallBack = element => {\n      const value = Manipulator.getDataAttribute(element, styleProperty)\n      // We only want to remove the property if the value is `null`; the value can also be zero\n      if (value === null) {\n        element.style.removeProperty(styleProperty)\n        return\n      }\n\n      Manipulator.removeDataAttribute(element, styleProperty)\n      element.style.setProperty(styleProperty, value)\n    }\n\n    this._applyManipulationCallback(selector, manipulationCallBack)\n  }\n\n  _applyManipulationCallback(selector, callBack) {\n    if (isElement(selector)) {\n      callBack(selector)\n      return\n    }\n\n    for (const sel of SelectorEngine.find(selector, this._element)) {\n      callBack(sel)\n    }\n  }\n}\n\nexport default ScrollBarHelper\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap modal.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport SelectorEngine from './dom/selector-engine.js'\nimport Backdrop from './util/backdrop.js'\nimport { enableDismissTrigger } from './util/component-functions.js'\nimport FocusTrap from './util/focustrap.js'\nimport {\n  defineJQueryPlugin, isRTL, isVisible, reflow\n} from './util/index.js'\nimport ScrollBarHelper from './util/scrollbar.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'modal'\nconst DATA_KEY = 'bs.modal'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst ESCAPE_KEY = 'Escape'\n\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_RESIZE = `resize${EVENT_KEY}`\nconst EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY}`\nconst EVENT_MOUSEDOWN_DISMISS = `mousedown.dismiss${EVENT_KEY}`\nconst EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_OPEN = 'modal-open'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_STATIC = 'modal-static'\n\nconst OPEN_SELECTOR = '.modal.show'\nconst SELECTOR_DIALOG = '.modal-dialog'\nconst SELECTOR_MODAL_BODY = '.modal-body'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"modal\"]'\n\nconst Default = {\n  backdrop: true,\n  focus: true,\n  keyboard: true\n}\n\nconst DefaultType = {\n  backdrop: '(boolean|string)',\n  focus: 'boolean',\n  keyboard: 'boolean'\n}\n\n/**\n * Class definition\n */\n\nclass Modal extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    this._dialog = SelectorEngine.findOne(SELECTOR_DIALOG, this._element)\n    this._backdrop = this._initializeBackDrop()\n    this._focustrap = this._initializeFocusTrap()\n    this._isShown = false\n    this._isTransitioning = false\n    this._scrollBar = new ScrollBarHelper()\n\n    this._addEventListeners()\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggle(relatedTarget) {\n    return this._isShown ? this.hide() : this.show(relatedTarget)\n  }\n\n  show(relatedTarget) {\n    if (this._isShown || this._isTransitioning) {\n      return\n    }\n\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW, {\n      relatedTarget\n    })\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = true\n    this._isTransitioning = true\n\n    this._scrollBar.hide()\n\n    document.body.classList.add(CLASS_NAME_OPEN)\n\n    this._adjustDialog()\n\n    this._backdrop.show(() => this._showElement(relatedTarget))\n  }\n\n  hide() {\n    if (!this._isShown || this._isTransitioning) {\n      return\n    }\n\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = false\n    this._isTransitioning = true\n    this._focustrap.deactivate()\n\n    this._element.classList.remove(CLASS_NAME_SHOW)\n\n    this._queueCallback(() => this._hideModal(), this._element, this._isAnimated())\n  }\n\n  dispose() {\n    EventHandler.off(window, EVENT_KEY)\n    EventHandler.off(this._dialog, EVENT_KEY)\n\n    this._backdrop.dispose()\n    this._focustrap.deactivate()\n\n    super.dispose()\n  }\n\n  handleUpdate() {\n    this._adjustDialog()\n  }\n\n  // Private\n  _initializeBackDrop() {\n    return new Backdrop({\n      isVisible: Boolean(this._config.backdrop), // 'static' option will be translated to true, and booleans will keep their value,\n      isAnimated: this._isAnimated()\n    })\n  }\n\n  _initializeFocusTrap() {\n    return new FocusTrap({\n      trapElement: this._element\n    })\n  }\n\n  _showElement(relatedTarget) {\n    // try to append dynamic modal\n    if (!document.body.contains(this._element)) {\n      document.body.append(this._element)\n    }\n\n    this._element.style.display = 'block'\n    this._element.removeAttribute('aria-hidden')\n    this._element.setAttribute('aria-modal', true)\n    this._element.setAttribute('role', 'dialog')\n    this._element.scrollTop = 0\n\n    const modalBody = SelectorEngine.findOne(SELECTOR_MODAL_BODY, this._dialog)\n    if (modalBody) {\n      modalBody.scrollTop = 0\n    }\n\n    reflow(this._element)\n\n    this._element.classList.add(CLASS_NAME_SHOW)\n\n    const transitionComplete = () => {\n      if (this._config.focus) {\n        this._focustrap.activate()\n      }\n\n      this._isTransitioning = false\n      EventHandler.trigger(this._element, EVENT_SHOWN, {\n        relatedTarget\n      })\n    }\n\n    this._queueCallback(transitionComplete, this._dialog, this._isAnimated())\n  }\n\n  _addEventListeners() {\n    EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS, event => {\n      if (event.key !== ESCAPE_KEY) {\n        return\n      }\n\n      if (this._config.keyboard) {\n        this.hide()\n        return\n      }\n\n      this._triggerBackdropTransition()\n    })\n\n    EventHandler.on(window, EVENT_RESIZE, () => {\n      if (this._isShown && !this._isTransitioning) {\n        this._adjustDialog()\n      }\n    })\n\n    EventHandler.on(this._element, EVENT_MOUSEDOWN_DISMISS, event => {\n      // a bad trick to segregate clicks that may start inside dialog but end outside, and avoid listen to scrollbar clicks\n      EventHandler.one(this._element, EVENT_CLICK_DISMISS, event2 => {\n        if (this._element !== event.target || this._element !== event2.target) {\n          return\n        }\n\n        if (this._config.backdrop === 'static') {\n          this._triggerBackdropTransition()\n          return\n        }\n\n        if (this._config.backdrop) {\n          this.hide()\n        }\n      })\n    })\n  }\n\n  _hideModal() {\n    this._element.style.display = 'none'\n    this._element.setAttribute('aria-hidden', true)\n    this._element.removeAttribute('aria-modal')\n    this._element.removeAttribute('role')\n    this._isTransitioning = false\n\n    this._backdrop.hide(() => {\n      document.body.classList.remove(CLASS_NAME_OPEN)\n      this._resetAdjustments()\n      this._scrollBar.reset()\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    })\n  }\n\n  _isAnimated() {\n    return this._element.classList.contains(CLASS_NAME_FADE)\n  }\n\n  _triggerBackdropTransition() {\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED)\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight\n    const initialOverflowY = this._element.style.overflowY\n    // return if the following background transition hasn't yet completed\n    if (initialOverflowY === 'hidden' || this._element.classList.contains(CLASS_NAME_STATIC)) {\n      return\n    }\n\n    if (!isModalOverflowing) {\n      this._element.style.overflowY = 'hidden'\n    }\n\n    this._element.classList.add(CLASS_NAME_STATIC)\n    this._queueCallback(() => {\n      this._element.classList.remove(CLASS_NAME_STATIC)\n      this._queueCallback(() => {\n        this._element.style.overflowY = initialOverflowY\n      }, this._dialog)\n    }, this._dialog)\n\n    this._element.focus()\n  }\n\n  /**\n   * The following methods are used to handle overflowing modals\n   */\n\n  _adjustDialog() {\n    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight\n    const scrollbarWidth = this._scrollBar.getWidth()\n    const isBodyOverflowing = scrollbarWidth > 0\n\n    if (isBodyOverflowing && !isModalOverflowing) {\n      const property = isRTL() ? 'paddingLeft' : 'paddingRight'\n      this._element.style[property] = `${scrollbarWidth}px`\n    }\n\n    if (!isBodyOverflowing && isModalOverflowing) {\n      const property = isRTL() ? 'paddingRight' : 'paddingLeft'\n      this._element.style[property] = `${scrollbarWidth}px`\n    }\n  }\n\n  _resetAdjustments() {\n    this._element.style.paddingLeft = ''\n    this._element.style.paddingRight = ''\n  }\n\n  // Static\n  static jQueryInterface(config, relatedTarget) {\n    return this.each(function () {\n      const data = Modal.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config](relatedTarget)\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  const target = SelectorEngine.getElementFromSelector(this)\n\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault()\n  }\n\n  EventHandler.one(target, EVENT_SHOW, showEvent => {\n    if (showEvent.defaultPrevented) {\n      // only register focus restorer if modal will actually get shown\n      return\n    }\n\n    EventHandler.one(target, EVENT_HIDDEN, () => {\n      if (isVisible(this)) {\n        this.focus()\n      }\n    })\n  })\n\n  // avoid conflict when clicking modal toggler while another one is open\n  const alreadyOpen = SelectorEngine.findOne(OPEN_SELECTOR)\n  if (alreadyOpen) {\n    Modal.getInstance(alreadyOpen).hide()\n  }\n\n  const data = Modal.getOrCreateInstance(target)\n\n  data.toggle(this)\n})\n\nenableDismissTrigger(Modal)\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Modal)\n\nexport default Modal\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap offcanvas.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport SelectorEngine from './dom/selector-engine.js'\nimport Backdrop from './util/backdrop.js'\nimport { enableDismissTrigger } from './util/component-functions.js'\nimport FocusTrap from './util/focustrap.js'\nimport {\n  defineJQueryPlugin,\n  isDisabled,\n  isVisible\n} from './util/index.js'\nimport ScrollBarHelper from './util/scrollbar.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'offcanvas'\nconst DATA_KEY = 'bs.offcanvas'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\nconst ESCAPE_KEY = 'Escape'\n\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_SHOWING = 'showing'\nconst CLASS_NAME_HIDING = 'hiding'\nconst CLASS_NAME_BACKDROP = 'offcanvas-backdrop'\nconst OPEN_SELECTOR = '.offcanvas.show'\n\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_RESIZE = `resize${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\nconst EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY}`\n\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"offcanvas\"]'\n\nconst Default = {\n  backdrop: true,\n  keyboard: true,\n  scroll: false\n}\n\nconst DefaultType = {\n  backdrop: '(boolean|string)',\n  keyboard: 'boolean',\n  scroll: 'boolean'\n}\n\n/**\n * Class definition\n */\n\nclass Offcanvas extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    this._isShown = false\n    this._backdrop = this._initializeBackDrop()\n    this._focustrap = this._initializeFocusTrap()\n    this._addEventListeners()\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggle(relatedTarget) {\n    return this._isShown ? this.hide() : this.show(relatedTarget)\n  }\n\n  show(relatedTarget) {\n    if (this._isShown) {\n      return\n    }\n\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW, { relatedTarget })\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = true\n    this._backdrop.show()\n\n    if (!this._config.scroll) {\n      new ScrollBarHelper().hide()\n    }\n\n    this._element.setAttribute('aria-modal', true)\n    this._element.setAttribute('role', 'dialog')\n    this._element.classList.add(CLASS_NAME_SHOWING)\n\n    const completeCallBack = () => {\n      if (!this._config.scroll || this._config.backdrop) {\n        this._focustrap.activate()\n      }\n\n      this._element.classList.add(CLASS_NAME_SHOW)\n      this._element.classList.remove(CLASS_NAME_SHOWING)\n      EventHandler.trigger(this._element, EVENT_SHOWN, { relatedTarget })\n    }\n\n    this._queueCallback(completeCallBack, this._element, true)\n  }\n\n  hide() {\n    if (!this._isShown) {\n      return\n    }\n\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    this._focustrap.deactivate()\n    this._element.blur()\n    this._isShown = false\n    this._element.classList.add(CLASS_NAME_HIDING)\n    this._backdrop.hide()\n\n    const completeCallback = () => {\n      this._element.classList.remove(CLASS_NAME_SHOW, CLASS_NAME_HIDING)\n      this._element.removeAttribute('aria-modal')\n      this._element.removeAttribute('role')\n\n      if (!this._config.scroll) {\n        new ScrollBarHelper().reset()\n      }\n\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    }\n\n    this._queueCallback(completeCallback, this._element, true)\n  }\n\n  dispose() {\n    this._backdrop.dispose()\n    this._focustrap.deactivate()\n    super.dispose()\n  }\n\n  // Private\n  _initializeBackDrop() {\n    const clickCallback = () => {\n      if (this._config.backdrop === 'static') {\n        EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED)\n        return\n      }\n\n      this.hide()\n    }\n\n    // 'static' option will be translated to true, and booleans will keep their value\n    const isVisible = Boolean(this._config.backdrop)\n\n    return new Backdrop({\n      className: CLASS_NAME_BACKDROP,\n      isVisible,\n      isAnimated: true,\n      rootElement: this._element.parentNode,\n      clickCallback: isVisible ? clickCallback : null\n    })\n  }\n\n  _initializeFocusTrap() {\n    return new FocusTrap({\n      trapElement: this._element\n    })\n  }\n\n  _addEventListeners() {\n    EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS, event => {\n      if (event.key !== ESCAPE_KEY) {\n        return\n      }\n\n      if (this._config.keyboard) {\n        this.hide()\n        return\n      }\n\n      EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED)\n    })\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Offcanvas.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config](this)\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  const target = SelectorEngine.getElementFromSelector(this)\n\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault()\n  }\n\n  if (isDisabled(this)) {\n    return\n  }\n\n  EventHandler.one(target, EVENT_HIDDEN, () => {\n    // focus on trigger when it is closed\n    if (isVisible(this)) {\n      this.focus()\n    }\n  })\n\n  // avoid conflict when clicking a toggler of an offcanvas, while another is open\n  const alreadyOpen = SelectorEngine.findOne(OPEN_SELECTOR)\n  if (alreadyOpen && alreadyOpen !== target) {\n    Offcanvas.getInstance(alreadyOpen).hide()\n  }\n\n  const data = Offcanvas.getOrCreateInstance(target)\n  data.toggle(this)\n})\n\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n  for (const selector of SelectorEngine.find(OPEN_SELECTOR)) {\n    Offcanvas.getOrCreateInstance(selector).show()\n  }\n})\n\nEventHandler.on(window, EVENT_RESIZE, () => {\n  for (const element of SelectorEngine.find('[aria-modal][class*=show][class*=offcanvas-]')) {\n    if (getComputedStyle(element).position !== 'fixed') {\n      Offcanvas.getOrCreateInstance(element).hide()\n    }\n  }\n})\n\nenableDismissTrigger(Offcanvas)\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Offcanvas)\n\nexport default Offcanvas\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/sanitizer.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n// js-docs-start allow-list\nconst ARIA_ATTRIBUTE_PATTERN = /^aria-[\\w-]*$/i\n\nexport const DefaultAllowlist = {\n  // Global attributes allowed on any supplied element below.\n  '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],\n  a: ['target', 'href', 'title', 'rel'],\n  area: [],\n  b: [],\n  br: [],\n  col: [],\n  code: [],\n  dd: [],\n  div: [],\n  dl: [],\n  dt: [],\n  em: [],\n  hr: [],\n  h1: [],\n  h2: [],\n  h3: [],\n  h4: [],\n  h5: [],\n  h6: [],\n  i: [],\n  img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],\n  li: [],\n  ol: [],\n  p: [],\n  pre: [],\n  s: [],\n  small: [],\n  span: [],\n  sub: [],\n  sup: [],\n  strong: [],\n  u: [],\n  ul: []\n}\n// js-docs-end allow-list\n\nconst uriAttributes = new Set([\n  'background',\n  'cite',\n  'href',\n  'itemtype',\n  'longdesc',\n  'poster',\n  'src',\n  'xlink:href'\n])\n\n/**\n * A pattern that recognizes URLs that are safe wrt. XSS in URL navigation\n * contexts.\n *\n * Shout-out to Angular https://github.com/angular/angular/blob/15.2.8/packages/core/src/sanitization/url_sanitizer.ts#L38\n */\n// eslint-disable-next-line unicorn/better-regex\nconst SAFE_URL_PATTERN = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:/?#]*(?:[/?#]|$))/i\n\nconst allowedAttribute = (attribute, allowedAttributeList) => {\n  const attributeName = attribute.nodeName.toLowerCase()\n\n  if (allowedAttributeList.includes(attributeName)) {\n    if (uriAttributes.has(attributeName)) {\n      return Boolean(SAFE_URL_PATTERN.test(attribute.nodeValue))\n    }\n\n    return true\n  }\n\n  // Check if a regular expression validates the attribute.\n  return allowedAttributeList.filter(attributeRegex => attributeRegex instanceof RegExp)\n    .some(regex => regex.test(attributeName))\n}\n\nexport function sanitizeHtml(unsafeHtml, allowList, sanitizeFunction) {\n  if (!unsafeHtml.length) {\n    return unsafeHtml\n  }\n\n  if (sanitizeFunction && typeof sanitizeFunction === 'function') {\n    return sanitizeFunction(unsafeHtml)\n  }\n\n  const domParser = new window.DOMParser()\n  const createdDocument = domParser.parseFromString(unsafeHtml, 'text/html')\n  const elements = [].concat(...createdDocument.body.querySelectorAll('*'))\n\n  for (const element of elements) {\n    const elementName = element.nodeName.toLowerCase()\n\n    if (!Object.keys(allowList).includes(elementName)) {\n      element.remove()\n      continue\n    }\n\n    const attributeList = [].concat(...element.attributes)\n    const allowedAttributes = [].concat(allowList['*'] || [], allowList[elementName] || [])\n\n    for (const attribute of attributeList) {\n      if (!allowedAttribute(attribute, allowedAttributes)) {\n        element.removeAttribute(attribute.nodeName)\n      }\n    }\n  }\n\n  return createdDocument.body.innerHTML\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap util/template-factory.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport SelectorEngine from '../dom/selector-engine.js'\nimport Config from './config.js'\nimport { DefaultAllowlist, sanitizeHtml } from './sanitizer.js'\nimport { execute, getElement, isElement } from './index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'TemplateFactory'\n\nconst Default = {\n  allowList: DefaultAllowlist,\n  content: {}, // { selector : text ,  selector2 : text2 , }\n  extraClass: '',\n  html: false,\n  sanitize: true,\n  sanitizeFn: null,\n  template: '<div></div>'\n}\n\nconst DefaultType = {\n  allowList: 'object',\n  content: 'object',\n  extraClass: '(string|function)',\n  html: 'boolean',\n  sanitize: 'boolean',\n  sanitizeFn: '(null|function)',\n  template: 'string'\n}\n\nconst DefaultContentType = {\n  entry: '(string|element|function|null)',\n  selector: '(string|element)'\n}\n\n/**\n * Class definition\n */\n\nclass TemplateFactory extends Config {\n  constructor(config) {\n    super()\n    this._config = this._getConfig(config)\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  getContent() {\n    return Object.values(this._config.content)\n      .map(config => this._resolvePossibleFunction(config))\n      .filter(Boolean)\n  }\n\n  hasContent() {\n    return this.getContent().length > 0\n  }\n\n  changeContent(content) {\n    this._checkContent(content)\n    this._config.content = { ...this._config.content, ...content }\n    return this\n  }\n\n  toHtml() {\n    const templateWrapper = document.createElement('div')\n    templateWrapper.innerHTML = this._maybeSanitize(this._config.template)\n\n    for (const [selector, text] of Object.entries(this._config.content)) {\n      this._setContent(templateWrapper, text, selector)\n    }\n\n    const template = templateWrapper.children[0]\n    const extraClass = this._resolvePossibleFunction(this._config.extraClass)\n\n    if (extraClass) {\n      template.classList.add(...extraClass.split(' '))\n    }\n\n    return template\n  }\n\n  // Private\n  _typeCheckConfig(config) {\n    super._typeCheckConfig(config)\n    this._checkContent(config.content)\n  }\n\n  _checkContent(arg) {\n    for (const [selector, content] of Object.entries(arg)) {\n      super._typeCheckConfig({ selector, entry: content }, DefaultContentType)\n    }\n  }\n\n  _setContent(template, content, selector) {\n    const templateElement = SelectorEngine.findOne(selector, template)\n\n    if (!templateElement) {\n      return\n    }\n\n    content = this._resolvePossibleFunction(content)\n\n    if (!content) {\n      templateElement.remove()\n      return\n    }\n\n    if (isElement(content)) {\n      this._putElementInTemplate(getElement(content), templateElement)\n      return\n    }\n\n    if (this._config.html) {\n      templateElement.innerHTML = this._maybeSanitize(content)\n      return\n    }\n\n    templateElement.textContent = content\n  }\n\n  _maybeSanitize(arg) {\n    return this._config.sanitize ? sanitizeHtml(arg, this._config.allowList, this._config.sanitizeFn) : arg\n  }\n\n  _resolvePossibleFunction(arg) {\n    return execute(arg, [this])\n  }\n\n  _putElementInTemplate(element, templateElement) {\n    if (this._config.html) {\n      templateElement.innerHTML = ''\n      templateElement.append(element)\n      return\n    }\n\n    templateElement.textContent = element.textContent\n  }\n}\n\nexport default TemplateFactory\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap tooltip.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport * as Popper from '@popperjs/core'\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport Manipulator from './dom/manipulator.js'\nimport {\n  defineJQueryPlugin, execute, findShadowRoot, getElement, getUID, isRTL, noop\n} from './util/index.js'\nimport { DefaultAllowlist } from './util/sanitizer.js'\nimport TemplateFactory from './util/template-factory.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'tooltip'\nconst DISALLOWED_ATTRIBUTES = new Set(['sanitize', 'allowList', 'sanitizeFn'])\n\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_MODAL = 'modal'\nconst CLASS_NAME_SHOW = 'show'\n\nconst SELECTOR_TOOLTIP_INNER = '.tooltip-inner'\nconst SELECTOR_MODAL = `.${CLASS_NAME_MODAL}`\n\nconst EVENT_MODAL_HIDE = 'hide.bs.modal'\n\nconst TRIGGER_HOVER = 'hover'\nconst TRIGGER_FOCUS = 'focus'\nconst TRIGGER_CLICK = 'click'\nconst TRIGGER_MANUAL = 'manual'\n\nconst EVENT_HIDE = 'hide'\nconst EVENT_HIDDEN = 'hidden'\nconst EVENT_SHOW = 'show'\nconst EVENT_SHOWN = 'shown'\nconst EVENT_INSERTED = 'inserted'\nconst EVENT_CLICK = 'click'\nconst EVENT_FOCUSIN = 'focusin'\nconst EVENT_FOCUSOUT = 'focusout'\nconst EVENT_MOUSEENTER = 'mouseenter'\nconst EVENT_MOUSELEAVE = 'mouseleave'\n\nconst AttachmentMap = {\n  AUTO: 'auto',\n  TOP: 'top',\n  RIGHT: isRTL() ? 'left' : 'right',\n  BOTTOM: 'bottom',\n  LEFT: isRTL() ? 'right' : 'left'\n}\n\nconst Default = {\n  allowList: DefaultAllowlist,\n  animation: true,\n  boundary: 'clippingParents',\n  container: false,\n  customClass: '',\n  delay: 0,\n  fallbackPlacements: ['top', 'right', 'bottom', 'left'],\n  html: false,\n  offset: [0, 6],\n  placement: 'top',\n  popperConfig: null,\n  sanitize: true,\n  sanitizeFn: null,\n  selector: false,\n  template: '<div class=\"tooltip\" role=\"tooltip\">' +\n            '<div class=\"tooltip-arrow\"></div>' +\n            '<div class=\"tooltip-inner\"></div>' +\n            '</div>',\n  title: '',\n  trigger: 'hover focus'\n}\n\nconst DefaultType = {\n  allowList: 'object',\n  animation: 'boolean',\n  boundary: '(string|element)',\n  container: '(string|element|boolean)',\n  customClass: '(string|function)',\n  delay: '(number|object)',\n  fallbackPlacements: 'array',\n  html: 'boolean',\n  offset: '(array|string|function)',\n  placement: '(string|function)',\n  popperConfig: '(null|object|function)',\n  sanitize: 'boolean',\n  sanitizeFn: '(null|function)',\n  selector: '(string|boolean)',\n  template: 'string',\n  title: '(string|element|function)',\n  trigger: 'string'\n}\n\n/**\n * Class definition\n */\n\nclass Tooltip extends BaseComponent {\n  constructor(element, config) {\n    if (typeof Popper === 'undefined') {\n      throw new TypeError('Bootstrap\\'s tooltips require Popper (https://popper.js.org)')\n    }\n\n    super(element, config)\n\n    // Private\n    this._isEnabled = true\n    this._timeout = 0\n    this._isHovered = null\n    this._activeTrigger = {}\n    this._popper = null\n    this._templateFactory = null\n    this._newContent = null\n\n    // Protected\n    this.tip = null\n\n    this._setListeners()\n\n    if (!this._config.selector) {\n      this._fixTitle()\n    }\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  enable() {\n    this._isEnabled = true\n  }\n\n  disable() {\n    this._isEnabled = false\n  }\n\n  toggleEnabled() {\n    this._isEnabled = !this._isEnabled\n  }\n\n  toggle() {\n    if (!this._isEnabled) {\n      return\n    }\n\n    this._activeTrigger.click = !this._activeTrigger.click\n    if (this._isShown()) {\n      this._leave()\n      return\n    }\n\n    this._enter()\n  }\n\n  dispose() {\n    clearTimeout(this._timeout)\n\n    EventHandler.off(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler)\n\n    if (this._element.getAttribute('data-bs-original-title')) {\n      this._element.setAttribute('title', this._element.getAttribute('data-bs-original-title'))\n    }\n\n    this._disposePopper()\n    super.dispose()\n  }\n\n  show() {\n    if (this._element.style.display === 'none') {\n      throw new Error('Please use show on visible elements')\n    }\n\n    if (!(this._isWithContent() && this._isEnabled)) {\n      return\n    }\n\n    const showEvent = EventHandler.trigger(this._element, this.constructor.eventName(EVENT_SHOW))\n    const shadowRoot = findShadowRoot(this._element)\n    const isInTheDom = (shadowRoot || this._element.ownerDocument.documentElement).contains(this._element)\n\n    if (showEvent.defaultPrevented || !isInTheDom) {\n      return\n    }\n\n    // TODO: v6 remove this or make it optional\n    this._disposePopper()\n\n    const tip = this._getTipElement()\n\n    this._element.setAttribute('aria-describedby', tip.getAttribute('id'))\n\n    const { container } = this._config\n\n    if (!this._element.ownerDocument.documentElement.contains(this.tip)) {\n      container.append(tip)\n      EventHandler.trigger(this._element, this.constructor.eventName(EVENT_INSERTED))\n    }\n\n    this._popper = this._createPopper(tip)\n\n    tip.classList.add(CLASS_NAME_SHOW)\n\n    // If this is a touch-enabled device we add extra\n    // empty mouseover listeners to the body's immediate children;\n    // only needed because of broken event delegation on iOS\n    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n    if ('ontouchstart' in document.documentElement) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.on(element, 'mouseover', noop)\n      }\n    }\n\n    const complete = () => {\n      EventHandler.trigger(this._element, this.constructor.eventName(EVENT_SHOWN))\n\n      if (this._isHovered === false) {\n        this._leave()\n      }\n\n      this._isHovered = false\n    }\n\n    this._queueCallback(complete, this.tip, this._isAnimated())\n  }\n\n  hide() {\n    if (!this._isShown()) {\n      return\n    }\n\n    const hideEvent = EventHandler.trigger(this._element, this.constructor.eventName(EVENT_HIDE))\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    const tip = this._getTipElement()\n    tip.classList.remove(CLASS_NAME_SHOW)\n\n    // If this is a touch-enabled device we remove the extra\n    // empty mouseover listeners we added for iOS support\n    if ('ontouchstart' in document.documentElement) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.off(element, 'mouseover', noop)\n      }\n    }\n\n    this._activeTrigger[TRIGGER_CLICK] = false\n    this._activeTrigger[TRIGGER_FOCUS] = false\n    this._activeTrigger[TRIGGER_HOVER] = false\n    this._isHovered = null // it is a trick to support manual triggering\n\n    const complete = () => {\n      if (this._isWithActiveTrigger()) {\n        return\n      }\n\n      if (!this._isHovered) {\n        this._disposePopper()\n      }\n\n      this._element.removeAttribute('aria-describedby')\n      EventHandler.trigger(this._element, this.constructor.eventName(EVENT_HIDDEN))\n    }\n\n    this._queueCallback(complete, this.tip, this._isAnimated())\n  }\n\n  update() {\n    if (this._popper) {\n      this._popper.update()\n    }\n  }\n\n  // Protected\n  _isWithContent() {\n    return Boolean(this._getTitle())\n  }\n\n  _getTipElement() {\n    if (!this.tip) {\n      this.tip = this._createTipElement(this._newContent || this._getContentForTemplate())\n    }\n\n    return this.tip\n  }\n\n  _createTipElement(content) {\n    const tip = this._getTemplateFactory(content).toHtml()\n\n    // TODO: remove this check in v6\n    if (!tip) {\n      return null\n    }\n\n    tip.classList.remove(CLASS_NAME_FADE, CLASS_NAME_SHOW)\n    // TODO: v6 the following can be achieved with CSS only\n    tip.classList.add(`bs-${this.constructor.NAME}-auto`)\n\n    const tipId = getUID(this.constructor.NAME).toString()\n\n    tip.setAttribute('id', tipId)\n\n    if (this._isAnimated()) {\n      tip.classList.add(CLASS_NAME_FADE)\n    }\n\n    return tip\n  }\n\n  setContent(content) {\n    this._newContent = content\n    if (this._isShown()) {\n      this._disposePopper()\n      this.show()\n    }\n  }\n\n  _getTemplateFactory(content) {\n    if (this._templateFactory) {\n      this._templateFactory.changeContent(content)\n    } else {\n      this._templateFactory = new TemplateFactory({\n        ...this._config,\n        // the `content` var has to be after `this._config`\n        // to override config.content in case of popover\n        content,\n        extraClass: this._resolvePossibleFunction(this._config.customClass)\n      })\n    }\n\n    return this._templateFactory\n  }\n\n  _getContentForTemplate() {\n    return {\n      [SELECTOR_TOOLTIP_INNER]: this._getTitle()\n    }\n  }\n\n  _getTitle() {\n    return this._resolvePossibleFunction(this._config.title) || this._element.getAttribute('data-bs-original-title')\n  }\n\n  // Private\n  _initializeOnDelegatedTarget(event) {\n    return this.constructor.getOrCreateInstance(event.delegateTarget, this._getDelegateConfig())\n  }\n\n  _isAnimated() {\n    return this._config.animation || (this.tip && this.tip.classList.contains(CLASS_NAME_FADE))\n  }\n\n  _isShown() {\n    return this.tip && this.tip.classList.contains(CLASS_NAME_SHOW)\n  }\n\n  _createPopper(tip) {\n    const placement = execute(this._config.placement, [this, tip, this._element])\n    const attachment = AttachmentMap[placement.toUpperCase()]\n    return Popper.createPopper(this._element, tip, this._getPopperConfig(attachment))\n  }\n\n  _getOffset() {\n    const { offset } = this._config\n\n    if (typeof offset === 'string') {\n      return offset.split(',').map(value => Number.parseInt(value, 10))\n    }\n\n    if (typeof offset === 'function') {\n      return popperData => offset(popperData, this._element)\n    }\n\n    return offset\n  }\n\n  _resolvePossibleFunction(arg) {\n    return execute(arg, [this._element])\n  }\n\n  _getPopperConfig(attachment) {\n    const defaultBsPopperConfig = {\n      placement: attachment,\n      modifiers: [\n        {\n          name: 'flip',\n          options: {\n            fallbackPlacements: this._config.fallbackPlacements\n          }\n        },\n        {\n          name: 'offset',\n          options: {\n            offset: this._getOffset()\n          }\n        },\n        {\n          name: 'preventOverflow',\n          options: {\n            boundary: this._config.boundary\n          }\n        },\n        {\n          name: 'arrow',\n          options: {\n            element: `.${this.constructor.NAME}-arrow`\n          }\n        },\n        {\n          name: 'preSetPlacement',\n          enabled: true,\n          phase: 'beforeMain',\n          fn: data => {\n            // Pre-set Popper's placement attribute in order to read the arrow sizes properly.\n            // Otherwise, Popper mixes up the width and height dimensions since the initial arrow style is for top placement\n            this._getTipElement().setAttribute('data-popper-placement', data.state.placement)\n          }\n        }\n      ]\n    }\n\n    return {\n      ...defaultBsPopperConfig,\n      ...execute(this._config.popperConfig, [defaultBsPopperConfig])\n    }\n  }\n\n  _setListeners() {\n    const triggers = this._config.trigger.split(' ')\n\n    for (const trigger of triggers) {\n      if (trigger === 'click') {\n        EventHandler.on(this._element, this.constructor.eventName(EVENT_CLICK), this._config.selector, event => {\n          const context = this._initializeOnDelegatedTarget(event)\n          context.toggle()\n        })\n      } else if (trigger !== TRIGGER_MANUAL) {\n        const eventIn = trigger === TRIGGER_HOVER ?\n          this.constructor.eventName(EVENT_MOUSEENTER) :\n          this.constructor.eventName(EVENT_FOCUSIN)\n        const eventOut = trigger === TRIGGER_HOVER ?\n          this.constructor.eventName(EVENT_MOUSELEAVE) :\n          this.constructor.eventName(EVENT_FOCUSOUT)\n\n        EventHandler.on(this._element, eventIn, this._config.selector, event => {\n          const context = this._initializeOnDelegatedTarget(event)\n          context._activeTrigger[event.type === 'focusin' ? TRIGGER_FOCUS : TRIGGER_HOVER] = true\n          context._enter()\n        })\n        EventHandler.on(this._element, eventOut, this._config.selector, event => {\n          const context = this._initializeOnDelegatedTarget(event)\n          context._activeTrigger[event.type === 'focusout' ? TRIGGER_FOCUS : TRIGGER_HOVER] =\n            context._element.contains(event.relatedTarget)\n\n          context._leave()\n        })\n      }\n    }\n\n    this._hideModalHandler = () => {\n      if (this._element) {\n        this.hide()\n      }\n    }\n\n    EventHandler.on(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler)\n  }\n\n  _fixTitle() {\n    const title = this._element.getAttribute('title')\n\n    if (!title) {\n      return\n    }\n\n    if (!this._element.getAttribute('aria-label') && !this._element.textContent.trim()) {\n      this._element.setAttribute('aria-label', title)\n    }\n\n    this._element.setAttribute('data-bs-original-title', title) // DO NOT USE IT. Is only for backwards compatibility\n    this._element.removeAttribute('title')\n  }\n\n  _enter() {\n    if (this._isShown() || this._isHovered) {\n      this._isHovered = true\n      return\n    }\n\n    this._isHovered = true\n\n    this._setTimeout(() => {\n      if (this._isHovered) {\n        this.show()\n      }\n    }, this._config.delay.show)\n  }\n\n  _leave() {\n    if (this._isWithActiveTrigger()) {\n      return\n    }\n\n    this._isHovered = false\n\n    this._setTimeout(() => {\n      if (!this._isHovered) {\n        this.hide()\n      }\n    }, this._config.delay.hide)\n  }\n\n  _setTimeout(handler, timeout) {\n    clearTimeout(this._timeout)\n    this._timeout = setTimeout(handler, timeout)\n  }\n\n  _isWithActiveTrigger() {\n    return Object.values(this._activeTrigger).includes(true)\n  }\n\n  _getConfig(config) {\n    const dataAttributes = Manipulator.getDataAttributes(this._element)\n\n    for (const dataAttribute of Object.keys(dataAttributes)) {\n      if (DISALLOWED_ATTRIBUTES.has(dataAttribute)) {\n        delete dataAttributes[dataAttribute]\n      }\n    }\n\n    config = {\n      ...dataAttributes,\n      ...(typeof config === 'object' && config ? config : {})\n    }\n    config = this._mergeConfigObj(config)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  _configAfterMerge(config) {\n    config.container = config.container === false ? document.body : getElement(config.container)\n\n    if (typeof config.delay === 'number') {\n      config.delay = {\n        show: config.delay,\n        hide: config.delay\n      }\n    }\n\n    if (typeof config.title === 'number') {\n      config.title = config.title.toString()\n    }\n\n    if (typeof config.content === 'number') {\n      config.content = config.content.toString()\n    }\n\n    return config\n  }\n\n  _getDelegateConfig() {\n    const config = {}\n\n    for (const [key, value] of Object.entries(this._config)) {\n      if (this.constructor.Default[key] !== value) {\n        config[key] = value\n      }\n    }\n\n    config.selector = false\n    config.trigger = 'manual'\n\n    // In the future can be replaced with:\n    // const keysWithDifferentValues = Object.entries(this._config).filter(entry => this.constructor.Default[entry[0]] !== this._config[entry[0]])\n    // `Object.fromEntries(keysWithDifferentValues)`\n    return config\n  }\n\n  _disposePopper() {\n    if (this._popper) {\n      this._popper.destroy()\n      this._popper = null\n    }\n\n    if (this.tip) {\n      this.tip.remove()\n      this.tip = null\n    }\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Tooltip.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    })\n  }\n}\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Tooltip)\n\nexport default Tooltip\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap popover.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Tooltip from './tooltip.js'\nimport { defineJQueryPlugin } from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'popover'\n\nconst SELECTOR_TITLE = '.popover-header'\nconst SELECTOR_CONTENT = '.popover-body'\n\nconst Default = {\n  ...Tooltip.Default,\n  content: '',\n  offset: [0, 8],\n  placement: 'right',\n  template: '<div class=\"popover\" role=\"tooltip\">' +\n    '<div class=\"popover-arrow\"></div>' +\n    '<h3 class=\"popover-header\"></h3>' +\n    '<div class=\"popover-body\"></div>' +\n    '</div>',\n  trigger: 'click'\n}\n\nconst DefaultType = {\n  ...Tooltip.DefaultType,\n  content: '(null|string|element|function)'\n}\n\n/**\n * Class definition\n */\n\nclass Popover extends Tooltip {\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Overrides\n  _isWithContent() {\n    return this._getTitle() || this._getContent()\n  }\n\n  // Private\n  _getContentForTemplate() {\n    return {\n      [SELECTOR_TITLE]: this._getTitle(),\n      [SELECTOR_CONTENT]: this._getContent()\n    }\n  }\n\n  _getContent() {\n    return this._resolvePossibleFunction(this._config.content)\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Popover.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    })\n  }\n}\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Popover)\n\nexport default Popover\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap scrollspy.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport SelectorEngine from './dom/selector-engine.js'\nimport {\n  defineJQueryPlugin, getElement, isDisabled, isVisible\n} from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'scrollspy'\nconst DATA_KEY = 'bs.scrollspy'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst EVENT_ACTIVATE = `activate${EVENT_KEY}`\nconst EVENT_CLICK = `click${EVENT_KEY}`\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item'\nconst CLASS_NAME_ACTIVE = 'active'\n\nconst SELECTOR_DATA_SPY = '[data-bs-spy=\"scroll\"]'\nconst SELECTOR_TARGET_LINKS = '[href]'\nconst SELECTOR_NAV_LIST_GROUP = '.nav, .list-group'\nconst SELECTOR_NAV_LINKS = '.nav-link'\nconst SELECTOR_NAV_ITEMS = '.nav-item'\nconst SELECTOR_LIST_ITEMS = '.list-group-item'\nconst SELECTOR_LINK_ITEMS = `${SELECTOR_NAV_LINKS}, ${SELECTOR_NAV_ITEMS} > ${SELECTOR_NAV_LINKS}, ${SELECTOR_LIST_ITEMS}`\nconst SELECTOR_DROPDOWN = '.dropdown'\nconst SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle'\n\nconst Default = {\n  offset: null, // TODO: v6 @deprecated, keep it for backwards compatibility reasons\n  rootMargin: '0px 0px -25%',\n  smoothScroll: false,\n  target: null,\n  threshold: [0.1, 0.5, 1]\n}\n\nconst DefaultType = {\n  offset: '(number|null)', // TODO v6 @deprecated, keep it for backwards compatibility reasons\n  rootMargin: 'string',\n  smoothScroll: 'boolean',\n  target: 'element',\n  threshold: 'array'\n}\n\n/**\n * Class definition\n */\n\nclass ScrollSpy extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    // this._element is the observablesContainer and config.target the menu links wrapper\n    this._targetLinks = new Map()\n    this._observableSections = new Map()\n    this._rootElement = getComputedStyle(this._element).overflowY === 'visible' ? null : this._element\n    this._activeTarget = null\n    this._observer = null\n    this._previousScrollData = {\n      visibleEntryTop: 0,\n      parentScrollTop: 0\n    }\n    this.refresh() // initialize\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  refresh() {\n    this._initializeTargetsAndObservables()\n    this._maybeEnableSmoothScroll()\n\n    if (this._observer) {\n      this._observer.disconnect()\n    } else {\n      this._observer = this._getNewObserver()\n    }\n\n    for (const section of this._observableSections.values()) {\n      this._observer.observe(section)\n    }\n  }\n\n  dispose() {\n    this._observer.disconnect()\n    super.dispose()\n  }\n\n  // Private\n  _configAfterMerge(config) {\n    // TODO: on v6 target should be given explicitly & remove the {target: 'ss-target'} case\n    config.target = getElement(config.target) || document.body\n\n    // TODO: v6 Only for backwards compatibility reasons. Use rootMargin only\n    config.rootMargin = config.offset ? `${config.offset}px 0px -30%` : config.rootMargin\n\n    if (typeof config.threshold === 'string') {\n      config.threshold = config.threshold.split(',').map(value => Number.parseFloat(value))\n    }\n\n    return config\n  }\n\n  _maybeEnableSmoothScroll() {\n    if (!this._config.smoothScroll) {\n      return\n    }\n\n    // unregister any previous listeners\n    EventHandler.off(this._config.target, EVENT_CLICK)\n\n    EventHandler.on(this._config.target, EVENT_CLICK, SELECTOR_TARGET_LINKS, event => {\n      const observableSection = this._observableSections.get(event.target.hash)\n      if (observableSection) {\n        event.preventDefault()\n        const root = this._rootElement || window\n        const height = observableSection.offsetTop - this._element.offsetTop\n        if (root.scrollTo) {\n          root.scrollTo({ top: height, behavior: 'smooth' })\n          return\n        }\n\n        // Chrome 60 doesn't support `scrollTo`\n        root.scrollTop = height\n      }\n    })\n  }\n\n  _getNewObserver() {\n    const options = {\n      root: this._rootElement,\n      threshold: this._config.threshold,\n      rootMargin: this._config.rootMargin\n    }\n\n    return new IntersectionObserver(entries => this._observerCallback(entries), options)\n  }\n\n  // The logic of selection\n  _observerCallback(entries) {\n    const targetElement = entry => this._targetLinks.get(`#${entry.target.id}`)\n    const activate = entry => {\n      this._previousScrollData.visibleEntryTop = entry.target.offsetTop\n      this._process(targetElement(entry))\n    }\n\n    const parentScrollTop = (this._rootElement || document.documentElement).scrollTop\n    const userScrollsDown = parentScrollTop >= this._previousScrollData.parentScrollTop\n    this._previousScrollData.parentScrollTop = parentScrollTop\n\n    for (const entry of entries) {\n      if (!entry.isIntersecting) {\n        this._activeTarget = null\n        this._clearActiveClass(targetElement(entry))\n\n        continue\n      }\n\n      const entryIsLowerThanPrevious = entry.target.offsetTop >= this._previousScrollData.visibleEntryTop\n      // if we are scrolling down, pick the bigger offsetTop\n      if (userScrollsDown && entryIsLowerThanPrevious) {\n        activate(entry)\n        // if parent isn't scrolled, let's keep the first visible item, breaking the iteration\n        if (!parentScrollTop) {\n          return\n        }\n\n        continue\n      }\n\n      // if we are scrolling up, pick the smallest offsetTop\n      if (!userScrollsDown && !entryIsLowerThanPrevious) {\n        activate(entry)\n      }\n    }\n  }\n\n  _initializeTargetsAndObservables() {\n    this._targetLinks = new Map()\n    this._observableSections = new Map()\n\n    const targetLinks = SelectorEngine.find(SELECTOR_TARGET_LINKS, this._config.target)\n\n    for (const anchor of targetLinks) {\n      // ensure that the anchor has an id and is not disabled\n      if (!anchor.hash || isDisabled(anchor)) {\n        continue\n      }\n\n      const observableSection = SelectorEngine.findOne(decodeURI(anchor.hash), this._element)\n\n      // ensure that the observableSection exists & is visible\n      if (isVisible(observableSection)) {\n        this._targetLinks.set(decodeURI(anchor.hash), anchor)\n        this._observableSections.set(anchor.hash, observableSection)\n      }\n    }\n  }\n\n  _process(target) {\n    if (this._activeTarget === target) {\n      return\n    }\n\n    this._clearActiveClass(this._config.target)\n    this._activeTarget = target\n    target.classList.add(CLASS_NAME_ACTIVE)\n    this._activateParents(target)\n\n    EventHandler.trigger(this._element, EVENT_ACTIVATE, { relatedTarget: target })\n  }\n\n  _activateParents(target) {\n    // Activate dropdown parents\n    if (target.classList.contains(CLASS_NAME_DROPDOWN_ITEM)) {\n      SelectorEngine.findOne(SELECTOR_DROPDOWN_TOGGLE, target.closest(SELECTOR_DROPDOWN))\n        .classList.add(CLASS_NAME_ACTIVE)\n      return\n    }\n\n    for (const listGroup of SelectorEngine.parents(target, SELECTOR_NAV_LIST_GROUP)) {\n      // Set triggered links parents as active\n      // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n      for (const item of SelectorEngine.prev(listGroup, SELECTOR_LINK_ITEMS)) {\n        item.classList.add(CLASS_NAME_ACTIVE)\n      }\n    }\n  }\n\n  _clearActiveClass(parent) {\n    parent.classList.remove(CLASS_NAME_ACTIVE)\n\n    const activeNodes = SelectorEngine.find(`${SELECTOR_TARGET_LINKS}.${CLASS_NAME_ACTIVE}`, parent)\n    for (const node of activeNodes) {\n      node.classList.remove(CLASS_NAME_ACTIVE)\n    }\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = ScrollSpy.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n  for (const spy of SelectorEngine.find(SELECTOR_DATA_SPY)) {\n    ScrollSpy.getOrCreateInstance(spy)\n  }\n})\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(ScrollSpy)\n\nexport default ScrollSpy\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap tab.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport SelectorEngine from './dom/selector-engine.js'\nimport { defineJQueryPlugin, getNextActiveElement, isDisabled } from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'tab'\nconst DATA_KEY = 'bs.tab'\nconst EVENT_KEY = `.${DATA_KEY}`\n\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}`\nconst EVENT_KEYDOWN = `keydown${EVENT_KEY}`\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}`\n\nconst ARROW_LEFT_KEY = 'ArrowLeft'\nconst ARROW_RIGHT_KEY = 'ArrowRight'\nconst ARROW_UP_KEY = 'ArrowUp'\nconst ARROW_DOWN_KEY = 'ArrowDown'\nconst HOME_KEY = 'Home'\nconst END_KEY = 'End'\n\nconst CLASS_NAME_ACTIVE = 'active'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_DROPDOWN = 'dropdown'\n\nconst SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle'\nconst SELECTOR_DROPDOWN_MENU = '.dropdown-menu'\nconst NOT_SELECTOR_DROPDOWN_TOGGLE = `:not(${SELECTOR_DROPDOWN_TOGGLE})`\n\nconst SELECTOR_TAB_PANEL = '.list-group, .nav, [role=\"tablist\"]'\nconst SELECTOR_OUTER = '.nav-item, .list-group-item'\nconst SELECTOR_INNER = `.nav-link${NOT_SELECTOR_DROPDOWN_TOGGLE}, .list-group-item${NOT_SELECTOR_DROPDOWN_TOGGLE}, [role=\"tab\"]${NOT_SELECTOR_DROPDOWN_TOGGLE}`\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"tab\"], [data-bs-toggle=\"pill\"], [data-bs-toggle=\"list\"]' // TODO: could only be `tab` in v6\nconst SELECTOR_INNER_ELEM = `${SELECTOR_INNER}, ${SELECTOR_DATA_TOGGLE}`\n\nconst SELECTOR_DATA_TOGGLE_ACTIVE = `.${CLASS_NAME_ACTIVE}[data-bs-toggle=\"tab\"], .${CLASS_NAME_ACTIVE}[data-bs-toggle=\"pill\"], .${CLASS_NAME_ACTIVE}[data-bs-toggle=\"list\"]`\n\n/**\n * Class definition\n */\n\nclass Tab extends BaseComponent {\n  constructor(element) {\n    super(element)\n    this._parent = this._element.closest(SELECTOR_TAB_PANEL)\n\n    if (!this._parent) {\n      return\n      // TODO: should throw exception in v6\n      // throw new TypeError(`${element.outerHTML} has not a valid parent ${SELECTOR_INNER_ELEM}`)\n    }\n\n    // Set up initial aria attributes\n    this._setInitialAttributes(this._parent, this._getChildren())\n\n    EventHandler.on(this._element, EVENT_KEYDOWN, event => this._keydown(event))\n  }\n\n  // Getters\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  show() { // Shows this elem and deactivate the active sibling if exists\n    const innerElem = this._element\n    if (this._elemIsActive(innerElem)) {\n      return\n    }\n\n    // Search for active tab on same parent to deactivate it\n    const active = this._getActiveElem()\n\n    const hideEvent = active ?\n      EventHandler.trigger(active, EVENT_HIDE, { relatedTarget: innerElem }) :\n      null\n\n    const showEvent = EventHandler.trigger(innerElem, EVENT_SHOW, { relatedTarget: active })\n\n    if (showEvent.defaultPrevented || (hideEvent && hideEvent.defaultPrevented)) {\n      return\n    }\n\n    this._deactivate(active, innerElem)\n    this._activate(innerElem, active)\n  }\n\n  // Private\n  _activate(element, relatedElem) {\n    if (!element) {\n      return\n    }\n\n    element.classList.add(CLASS_NAME_ACTIVE)\n\n    this._activate(SelectorEngine.getElementFromSelector(element)) // Search and activate/show the proper section\n\n    const complete = () => {\n      if (element.getAttribute('role') !== 'tab') {\n        element.classList.add(CLASS_NAME_SHOW)\n        return\n      }\n\n      element.removeAttribute('tabindex')\n      element.setAttribute('aria-selected', true)\n      this._toggleDropDown(element, true)\n      EventHandler.trigger(element, EVENT_SHOWN, {\n        relatedTarget: relatedElem\n      })\n    }\n\n    this._queueCallback(complete, element, element.classList.contains(CLASS_NAME_FADE))\n  }\n\n  _deactivate(element, relatedElem) {\n    if (!element) {\n      return\n    }\n\n    element.classList.remove(CLASS_NAME_ACTIVE)\n    element.blur()\n\n    this._deactivate(SelectorEngine.getElementFromSelector(element)) // Search and deactivate the shown section too\n\n    const complete = () => {\n      if (element.getAttribute('role') !== 'tab') {\n        element.classList.remove(CLASS_NAME_SHOW)\n        return\n      }\n\n      element.setAttribute('aria-selected', false)\n      element.setAttribute('tabindex', '-1')\n      this._toggleDropDown(element, false)\n      EventHandler.trigger(element, EVENT_HIDDEN, { relatedTarget: relatedElem })\n    }\n\n    this._queueCallback(complete, element, element.classList.contains(CLASS_NAME_FADE))\n  }\n\n  _keydown(event) {\n    if (!([ARROW_LEFT_KEY, ARROW_RIGHT_KEY, ARROW_UP_KEY, ARROW_DOWN_KEY, HOME_KEY, END_KEY].includes(event.key))) {\n      return\n    }\n\n    event.stopPropagation()// stopPropagation/preventDefault both added to support up/down keys without scrolling the page\n    event.preventDefault()\n\n    const children = this._getChildren().filter(element => !isDisabled(element))\n    let nextActiveElement\n\n    if ([HOME_KEY, END_KEY].includes(event.key)) {\n      nextActiveElement = children[event.key === HOME_KEY ? 0 : children.length - 1]\n    } else {\n      const isNext = [ARROW_RIGHT_KEY, ARROW_DOWN_KEY].includes(event.key)\n      nextActiveElement = getNextActiveElement(children, event.target, isNext, true)\n    }\n\n    if (nextActiveElement) {\n      nextActiveElement.focus({ preventScroll: true })\n      Tab.getOrCreateInstance(nextActiveElement).show()\n    }\n  }\n\n  _getChildren() { // collection of inner elements\n    return SelectorEngine.find(SELECTOR_INNER_ELEM, this._parent)\n  }\n\n  _getActiveElem() {\n    return this._getChildren().find(child => this._elemIsActive(child)) || null\n  }\n\n  _setInitialAttributes(parent, children) {\n    this._setAttributeIfNotExists(parent, 'role', 'tablist')\n\n    for (const child of children) {\n      this._setInitialAttributesOnChild(child)\n    }\n  }\n\n  _setInitialAttributesOnChild(child) {\n    child = this._getInnerElement(child)\n    const isActive = this._elemIsActive(child)\n    const outerElem = this._getOuterElement(child)\n    child.setAttribute('aria-selected', isActive)\n\n    if (outerElem !== child) {\n      this._setAttributeIfNotExists(outerElem, 'role', 'presentation')\n    }\n\n    if (!isActive) {\n      child.setAttribute('tabindex', '-1')\n    }\n\n    this._setAttributeIfNotExists(child, 'role', 'tab')\n\n    // set attributes to the related panel too\n    this._setInitialAttributesOnTargetPanel(child)\n  }\n\n  _setInitialAttributesOnTargetPanel(child) {\n    const target = SelectorEngine.getElementFromSelector(child)\n\n    if (!target) {\n      return\n    }\n\n    this._setAttributeIfNotExists(target, 'role', 'tabpanel')\n\n    if (child.id) {\n      this._setAttributeIfNotExists(target, 'aria-labelledby', `${child.id}`)\n    }\n  }\n\n  _toggleDropDown(element, open) {\n    const outerElem = this._getOuterElement(element)\n    if (!outerElem.classList.contains(CLASS_DROPDOWN)) {\n      return\n    }\n\n    const toggle = (selector, className) => {\n      const element = SelectorEngine.findOne(selector, outerElem)\n      if (element) {\n        element.classList.toggle(className, open)\n      }\n    }\n\n    toggle(SELECTOR_DROPDOWN_TOGGLE, CLASS_NAME_ACTIVE)\n    toggle(SELECTOR_DROPDOWN_MENU, CLASS_NAME_SHOW)\n    outerElem.setAttribute('aria-expanded', open)\n  }\n\n  _setAttributeIfNotExists(element, attribute, value) {\n    if (!element.hasAttribute(attribute)) {\n      element.setAttribute(attribute, value)\n    }\n  }\n\n  _elemIsActive(elem) {\n    return elem.classList.contains(CLASS_NAME_ACTIVE)\n  }\n\n  // Try to get the inner element (usually the .nav-link)\n  _getInnerElement(elem) {\n    return elem.matches(SELECTOR_INNER_ELEM) ? elem : SelectorEngine.findOne(SELECTOR_INNER_ELEM, elem)\n  }\n\n  // Try to get the outer element (usually the .nav-item)\n  _getOuterElement(elem) {\n    return elem.closest(SELECTOR_OUTER) || elem\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Tab.getOrCreateInstance(this)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (data[config] === undefined || config.startsWith('_') || config === 'constructor') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault()\n  }\n\n  if (isDisabled(this)) {\n    return\n  }\n\n  Tab.getOrCreateInstance(this).show()\n})\n\n/**\n * Initialize on focus\n */\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n  for (const element of SelectorEngine.find(SELECTOR_DATA_TOGGLE_ACTIVE)) {\n    Tab.getOrCreateInstance(element)\n  }\n})\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Tab)\n\nexport default Tab\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap toast.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport { enableDismissTrigger } from './util/component-functions.js'\nimport { defineJQueryPlugin, reflow } from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'toast'\nconst DATA_KEY = 'bs.toast'\nconst EVENT_KEY = `.${DATA_KEY}`\n\nconst EVENT_MOUSEOVER = `mouseover${EVENT_KEY}`\nconst EVENT_MOUSEOUT = `mouseout${EVENT_KEY}`\nconst EVENT_FOCUSIN = `focusin${EVENT_KEY}`\nconst EVENT_FOCUSOUT = `focusout${EVENT_KEY}`\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\n\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_HIDE = 'hide' // @deprecated - kept here only for backwards compatibility\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_SHOWING = 'showing'\n\nconst DefaultType = {\n  animation: 'boolean',\n  autohide: 'boolean',\n  delay: 'number'\n}\n\nconst Default = {\n  animation: true,\n  autohide: true,\n  delay: 5000\n}\n\n/**\n * Class definition\n */\n\nclass Toast extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    this._timeout = null\n    this._hasMouseInteraction = false\n    this._hasKeyboardInteraction = false\n    this._setListeners()\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  show() {\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW)\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    this._clearTimeout()\n\n    if (this._config.animation) {\n      this._element.classList.add(CLASS_NAME_FADE)\n    }\n\n    const complete = () => {\n      this._element.classList.remove(CLASS_NAME_SHOWING)\n      EventHandler.trigger(this._element, EVENT_SHOWN)\n\n      this._maybeScheduleHide()\n    }\n\n    this._element.classList.remove(CLASS_NAME_HIDE) // @deprecated\n    reflow(this._element)\n    this._element.classList.add(CLASS_NAME_SHOW, CLASS_NAME_SHOWING)\n\n    this._queueCallback(complete, this._element, this._config.animation)\n  }\n\n  hide() {\n    if (!this.isShown()) {\n      return\n    }\n\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    const complete = () => {\n      this._element.classList.add(CLASS_NAME_HIDE) // @deprecated\n      this._element.classList.remove(CLASS_NAME_SHOWING, CLASS_NAME_SHOW)\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    }\n\n    this._element.classList.add(CLASS_NAME_SHOWING)\n    this._queueCallback(complete, this._element, this._config.animation)\n  }\n\n  dispose() {\n    this._clearTimeout()\n\n    if (this.isShown()) {\n      this._element.classList.remove(CLASS_NAME_SHOW)\n    }\n\n    super.dispose()\n  }\n\n  isShown() {\n    return this._element.classList.contains(CLASS_NAME_SHOW)\n  }\n\n  // Private\n\n  _maybeScheduleHide() {\n    if (!this._config.autohide) {\n      return\n    }\n\n    if (this._hasMouseInteraction || this._hasKeyboardInteraction) {\n      return\n    }\n\n    this._timeout = setTimeout(() => {\n      this.hide()\n    }, this._config.delay)\n  }\n\n  _onInteraction(event, isInteracting) {\n    switch (event.type) {\n      case 'mouseover':\n      case 'mouseout': {\n        this._hasMouseInteraction = isInteracting\n        break\n      }\n\n      case 'focusin':\n      case 'focusout': {\n        this._hasKeyboardInteraction = isInteracting\n        break\n      }\n\n      default: {\n        break\n      }\n    }\n\n    if (isInteracting) {\n      this._clearTimeout()\n      return\n    }\n\n    const nextElement = event.relatedTarget\n    if (this._element === nextElement || this._element.contains(nextElement)) {\n      return\n    }\n\n    this._maybeScheduleHide()\n  }\n\n  _setListeners() {\n    EventHandler.on(this._element, EVENT_MOUSEOVER, event => this._onInteraction(event, true))\n    EventHandler.on(this._element, EVENT_MOUSEOUT, event => this._onInteraction(event, false))\n    EventHandler.on(this._element, EVENT_FOCUSIN, event => this._onInteraction(event, true))\n    EventHandler.on(this._element, EVENT_FOCUSOUT, event => this._onInteraction(event, false))\n  }\n\n  _clearTimeout() {\n    clearTimeout(this._timeout)\n    this._timeout = null\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Toast.getOrCreateInstance(this, config)\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config](this)\n      }\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nenableDismissTrigger(Toast)\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Toast)\n\nexport default Toast\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap index.umd.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Alert from './src/alert.js'\nimport Button from './src/button.js'\nimport Carousel from './src/carousel.js'\nimport Collapse from './src/collapse.js'\nimport Dropdown from './src/dropdown.js'\nimport Modal from './src/modal.js'\nimport Offcanvas from './src/offcanvas.js'\nimport Popover from './src/popover.js'\nimport ScrollSpy from './src/scrollspy.js'\nimport Tab from './src/tab.js'\nimport Toast from './src/toast.js'\nimport Tooltip from './src/tooltip.js'\n\nexport default {\n  Alert,\n  Button,\n  Carousel,\n  Collapse,\n  Dropdown,\n  Modal,\n  Offcanvas,\n  Popover,\n  ScrollSpy,\n  Tab,\n  Toast,\n  Tooltip\n}\n","/*! jQuery v3.7.1 | (c) OpenJS Foundation and other contributors | jquery.org/license */\n!function(e,t){\"use strict\";\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error(\"jQuery requires a window with a document\");return t(e)}:t(e)}(\"undefined\"!=typeof window?window:this,function(ie,e){\"use strict\";var oe=[],r=Object.getPrototypeOf,ae=oe.slice,g=oe.flat?function(e){return oe.flat.call(e)}:function(e){return oe.concat.apply([],e)},s=oe.push,se=oe.indexOf,n={},i=n.toString,ue=n.hasOwnProperty,o=ue.toString,a=o.call(Object),le={},v=function(e){return\"function\"==typeof e&&\"number\"!=typeof e.nodeType&&\"function\"!=typeof e.item},y=function(e){return null!=e&&e===e.window},C=ie.document,u={type:!0,src:!0,nonce:!0,noModule:!0};function m(e,t,n){var r,i,o=(n=n||C).createElement(\"script\");if(o.text=e,t)for(r in u)(i=t[r]||t.getAttribute&&t.getAttribute(r))&&o.setAttribute(r,i);n.head.appendChild(o).parentNode.removeChild(o)}function x(e){return null==e?e+\"\":\"object\"==typeof e||\"function\"==typeof e?n[i.call(e)]||\"object\":typeof e}var t=\"3.7.1\",l=/HTML$/i,ce=function(e,t){return new ce.fn.init(e,t)};function c(e){var t=!!e&&\"length\"in e&&e.length,n=x(e);return!v(e)&&!y(e)&&(\"array\"===n||0===t||\"number\"==typeof t&&0<t&&t-1 in e)}function fe(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}ce.fn=ce.prototype={jquery:t,constructor:ce,length:0,toArray:function(){return ae.call(this)},get:function(e){return null==e?ae.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=ce.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return ce.each(this,e)},map:function(n){return this.pushStack(ce.map(this,function(e,t){return n.call(e,t,e)}))},slice:function(){return this.pushStack(ae.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(ce.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(ce.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(0<=n&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:s,sort:oe.sort,splice:oe.splice},ce.extend=ce.fn.extend=function(){var e,t,n,r,i,o,a=arguments[0]||{},s=1,u=arguments.length,l=!1;for(\"boolean\"==typeof a&&(l=a,a=arguments[s]||{},s++),\"object\"==typeof a||v(a)||(a={}),s===u&&(a=this,s--);s<u;s++)if(null!=(e=arguments[s]))for(t in e)r=e[t],\"__proto__\"!==t&&a!==r&&(l&&r&&(ce.isPlainObject(r)||(i=Array.isArray(r)))?(n=a[t],o=i&&!Array.isArray(n)?[]:i||ce.isPlainObject(n)?n:{},i=!1,a[t]=ce.extend(l,o,r)):void 0!==r&&(a[t]=r));return a},ce.extend({expando:\"jQuery\"+(t+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,n;return!(!e||\"[object Object]\"!==i.call(e))&&(!(t=r(e))||\"function\"==typeof(n=ue.call(t,\"constructor\")&&t.constructor)&&o.call(n)===a)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t,n){m(e,{nonce:t&&t.nonce},n)},each:function(e,t){var n,r=0;if(c(e)){for(n=e.length;r<n;r++)if(!1===t.call(e[r],r,e[r]))break}else for(r in e)if(!1===t.call(e[r],r,e[r]))break;return e},text:function(e){var t,n=\"\",r=0,i=e.nodeType;if(!i)while(t=e[r++])n+=ce.text(t);return 1===i||11===i?e.textContent:9===i?e.documentElement.textContent:3===i||4===i?e.nodeValue:n},makeArray:function(e,t){var n=t||[];return null!=e&&(c(Object(e))?ce.merge(n,\"string\"==typeof e?[e]:e):s.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:se.call(t,e,n)},isXMLDoc:function(e){var t=e&&e.namespaceURI,n=e&&(e.ownerDocument||e).documentElement;return!l.test(t||n&&n.nodeName||\"HTML\")},merge:function(e,t){for(var n=+t.length,r=0,i=e.length;r<n;r++)e[i++]=t[r];return e.length=i,e},grep:function(e,t,n){for(var r=[],i=0,o=e.length,a=!n;i<o;i++)!t(e[i],i)!==a&&r.push(e[i]);return r},map:function(e,t,n){var r,i,o=0,a=[];if(c(e))for(r=e.length;o<r;o++)null!=(i=t(e[o],o,n))&&a.push(i);else for(o in e)null!=(i=t(e[o],o,n))&&a.push(i);return g(a)},guid:1,support:le}),\"function\"==typeof Symbol&&(ce.fn[Symbol.iterator]=oe[Symbol.iterator]),ce.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"),function(e,t){n[\"[object \"+t+\"]\"]=t.toLowerCase()});var pe=oe.pop,de=oe.sort,he=oe.splice,ge=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",ve=new RegExp(\"^\"+ge+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+ge+\"+$\",\"g\");ce.contains=function(e,t){var n=t&&t.parentNode;return e===n||!(!n||1!==n.nodeType||!(e.contains?e.contains(n):e.compareDocumentPosition&&16&e.compareDocumentPosition(n)))};var f=/([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\x80-\\uFFFF\\w-]/g;function p(e,t){return t?\"\\0\"===e?\"\\ufffd\":e.slice(0,-1)+\"\\\\\"+e.charCodeAt(e.length-1).toString(16)+\" \":\"\\\\\"+e}ce.escapeSelector=function(e){return(e+\"\").replace(f,p)};var ye=C,me=s;!function(){var e,b,w,o,a,T,r,C,d,i,k=me,S=ce.expando,E=0,n=0,s=W(),c=W(),u=W(),h=W(),l=function(e,t){return e===t&&(a=!0),0},f=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",t=\"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\"+ge+\"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",p=\"\\\\[\"+ge+\"*(\"+t+\")(?:\"+ge+\"*([*^$|!~]?=)\"+ge+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+t+\"))|)\"+ge+\"*\\\\]\",g=\":(\"+t+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+p+\")*)|.*)\\\\)|)\",v=new RegExp(ge+\"+\",\"g\"),y=new RegExp(\"^\"+ge+\"*,\"+ge+\"*\"),m=new RegExp(\"^\"+ge+\"*([>+~]|\"+ge+\")\"+ge+\"*\"),x=new RegExp(ge+\"|>\"),j=new RegExp(g),A=new RegExp(\"^\"+t+\"$\"),D={ID:new RegExp(\"^#(\"+t+\")\"),CLASS:new RegExp(\"^\\\\.(\"+t+\")\"),TAG:new RegExp(\"^(\"+t+\"|[*])\"),ATTR:new RegExp(\"^\"+p),PSEUDO:new RegExp(\"^\"+g),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+ge+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+ge+\"*(?:([+-]|)\"+ge+\"*(\\\\d+)|))\"+ge+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+f+\")$\",\"i\"),needsContext:new RegExp(\"^\"+ge+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+ge+\"*((?:-\\\\d)?\\\\d*)\"+ge+\"*\\\\)|)(?=[^-]|$)\",\"i\")},N=/^(?:input|select|textarea|button)$/i,q=/^h\\d$/i,L=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,H=/[+~]/,O=new RegExp(\"\\\\\\\\[\\\\da-fA-F]{1,6}\"+ge+\"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\",\"g\"),P=function(e,t){var n=\"0x\"+e.slice(1)-65536;return t||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},M=function(){V()},R=J(function(e){return!0===e.disabled&&fe(e,\"fieldset\")},{dir:\"parentNode\",next:\"legend\"});try{k.apply(oe=ae.call(ye.childNodes),ye.childNodes),oe[ye.childNodes.length].nodeType}catch(e){k={apply:function(e,t){me.apply(e,ae.call(t))},call:function(e){me.apply(e,ae.call(arguments,1))}}}function I(t,e,n,r){var i,o,a,s,u,l,c,f=e&&e.ownerDocument,p=e?e.nodeType:9;if(n=n||[],\"string\"!=typeof t||!t||1!==p&&9!==p&&11!==p)return n;if(!r&&(V(e),e=e||T,C)){if(11!==p&&(u=L.exec(t)))if(i=u[1]){if(9===p){if(!(a=e.getElementById(i)))return n;if(a.id===i)return k.call(n,a),n}else if(f&&(a=f.getElementById(i))&&I.contains(e,a)&&a.id===i)return k.call(n,a),n}else{if(u[2])return k.apply(n,e.getElementsByTagName(t)),n;if((i=u[3])&&e.getElementsByClassName)return k.apply(n,e.getElementsByClassName(i)),n}if(!(h[t+\" \"]||d&&d.test(t))){if(c=t,f=e,1===p&&(x.test(t)||m.test(t))){(f=H.test(t)&&U(e.parentNode)||e)==e&&le.scope||((s=e.getAttribute(\"id\"))?s=ce.escapeSelector(s):e.setAttribute(\"id\",s=S)),o=(l=Y(t)).length;while(o--)l[o]=(s?\"#\"+s:\":scope\")+\" \"+Q(l[o]);c=l.join(\",\")}try{return k.apply(n,f.querySelectorAll(c)),n}catch(e){h(t,!0)}finally{s===S&&e.removeAttribute(\"id\")}}}return re(t.replace(ve,\"$1\"),e,n,r)}function W(){var r=[];return function e(t,n){return r.push(t+\" \")>b.cacheLength&&delete e[r.shift()],e[t+\" \"]=n}}function F(e){return e[S]=!0,e}function $(e){var t=T.createElement(\"fieldset\");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function B(t){return function(e){return fe(e,\"input\")&&e.type===t}}function _(t){return function(e){return(fe(e,\"input\")||fe(e,\"button\"))&&e.type===t}}function z(t){return function(e){return\"form\"in e?e.parentNode&&!1===e.disabled?\"label\"in e?\"label\"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&R(e)===t:e.disabled===t:\"label\"in e&&e.disabled===t}}function X(a){return F(function(o){return o=+o,F(function(e,t){var n,r=a([],e.length,o),i=r.length;while(i--)e[n=r[i]]&&(e[n]=!(t[n]=e[n]))})})}function U(e){return e&&\"undefined\"!=typeof e.getElementsByTagName&&e}function V(e){var t,n=e?e.ownerDocument||e:ye;return n!=T&&9===n.nodeType&&n.documentElement&&(r=(T=n).documentElement,C=!ce.isXMLDoc(T),i=r.matches||r.webkitMatchesSelector||r.msMatchesSelector,r.msMatchesSelector&&ye!=T&&(t=T.defaultView)&&t.top!==t&&t.addEventListener(\"unload\",M),le.getById=$(function(e){return r.appendChild(e).id=ce.expando,!T.getElementsByName||!T.getElementsByName(ce.expando).length}),le.disconnectedMatch=$(function(e){return i.call(e,\"*\")}),le.scope=$(function(){return T.querySelectorAll(\":scope\")}),le.cssHas=$(function(){try{return T.querySelector(\":has(*,:jqfake)\"),!1}catch(e){return!0}}),le.getById?(b.filter.ID=function(e){var t=e.replace(O,P);return function(e){return e.getAttribute(\"id\")===t}},b.find.ID=function(e,t){if(\"undefined\"!=typeof t.getElementById&&C){var n=t.getElementById(e);return n?[n]:[]}}):(b.filter.ID=function(e){var n=e.replace(O,P);return function(e){var t=\"undefined\"!=typeof e.getAttributeNode&&e.getAttributeNode(\"id\");return t&&t.value===n}},b.find.ID=function(e,t){if(\"undefined\"!=typeof t.getElementById&&C){var n,r,i,o=t.getElementById(e);if(o){if((n=o.getAttributeNode(\"id\"))&&n.value===e)return[o];i=t.getElementsByName(e),r=0;while(o=i[r++])if((n=o.getAttributeNode(\"id\"))&&n.value===e)return[o]}return[]}}),b.find.TAG=function(e,t){return\"undefined\"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):t.querySelectorAll(e)},b.find.CLASS=function(e,t){if(\"undefined\"!=typeof t.getElementsByClassName&&C)return t.getElementsByClassName(e)},d=[],$(function(e){var t;r.appendChild(e).innerHTML=\"<a id='\"+S+\"' href='' disabled='disabled'></a><select id='\"+S+\"-\\r\\\\' disabled='disabled'><option selected=''></option></select>\",e.querySelectorAll(\"[selected]\").length||d.push(\"\\\\[\"+ge+\"*(?:value|\"+f+\")\"),e.querySelectorAll(\"[id~=\"+S+\"-]\").length||d.push(\"~=\"),e.querySelectorAll(\"a#\"+S+\"+*\").length||d.push(\".#.+[+~]\"),e.querySelectorAll(\":checked\").length||d.push(\":checked\"),(t=T.createElement(\"input\")).setAttribute(\"type\",\"hidden\"),e.appendChild(t).setAttribute(\"name\",\"D\"),r.appendChild(e).disabled=!0,2!==e.querySelectorAll(\":disabled\").length&&d.push(\":enabled\",\":disabled\"),(t=T.createElement(\"input\")).setAttribute(\"name\",\"\"),e.appendChild(t),e.querySelectorAll(\"[name='']\").length||d.push(\"\\\\[\"+ge+\"*name\"+ge+\"*=\"+ge+\"*(?:''|\\\"\\\")\")}),le.cssHas||d.push(\":has\"),d=d.length&&new RegExp(d.join(\"|\")),l=function(e,t){if(e===t)return a=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!le.sortDetached&&t.compareDocumentPosition(e)===n?e===T||e.ownerDocument==ye&&I.contains(ye,e)?-1:t===T||t.ownerDocument==ye&&I.contains(ye,t)?1:o?se.call(o,e)-se.call(o,t):0:4&n?-1:1)}),T}for(e in I.matches=function(e,t){return I(e,null,null,t)},I.matchesSelector=function(e,t){if(V(e),C&&!h[t+\" \"]&&(!d||!d.test(t)))try{var n=i.call(e,t);if(n||le.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){h(t,!0)}return 0<I(t,T,null,[e]).length},I.contains=function(e,t){return(e.ownerDocument||e)!=T&&V(e),ce.contains(e,t)},I.attr=function(e,t){(e.ownerDocument||e)!=T&&V(e);var n=b.attrHandle[t.toLowerCase()],r=n&&ue.call(b.attrHandle,t.toLowerCase())?n(e,t,!C):void 0;return void 0!==r?r:e.getAttribute(t)},I.error=function(e){throw new Error(\"Syntax error, unrecognized expression: \"+e)},ce.uniqueSort=function(e){var t,n=[],r=0,i=0;if(a=!le.sortStable,o=!le.sortStable&&ae.call(e,0),de.call(e,l),a){while(t=e[i++])t===e[i]&&(r=n.push(i));while(r--)he.call(e,n[r],1)}return o=null,e},ce.fn.uniqueSort=function(){return this.pushStack(ce.uniqueSort(ae.apply(this)))},(b=ce.expr={cacheLength:50,createPseudo:F,match:D,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(O,P),e[3]=(e[3]||e[4]||e[5]||\"\").replace(O,P),\"~=\"===e[2]&&(e[3]=\" \"+e[3]+\" \"),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),\"nth\"===e[1].slice(0,3)?(e[3]||I.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*(\"even\"===e[3]||\"odd\"===e[3])),e[5]=+(e[7]+e[8]||\"odd\"===e[3])):e[3]&&I.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return D.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||\"\":n&&j.test(n)&&(t=Y(n,!0))&&(t=n.indexOf(\")\",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(O,P).toLowerCase();return\"*\"===e?function(){return!0}:function(e){return fe(e,t)}},CLASS:function(e){var t=s[e+\" \"];return t||(t=new RegExp(\"(^|\"+ge+\")\"+e+\"(\"+ge+\"|$)\"))&&s(e,function(e){return t.test(\"string\"==typeof e.className&&e.className||\"undefined\"!=typeof e.getAttribute&&e.getAttribute(\"class\")||\"\")})},ATTR:function(n,r,i){return function(e){var t=I.attr(e,n);return null==t?\"!=\"===r:!r||(t+=\"\",\"=\"===r?t===i:\"!=\"===r?t!==i:\"^=\"===r?i&&0===t.indexOf(i):\"*=\"===r?i&&-1<t.indexOf(i):\"$=\"===r?i&&t.slice(-i.length)===i:\"~=\"===r?-1<(\" \"+t.replace(v,\" \")+\" \").indexOf(i):\"|=\"===r&&(t===i||t.slice(0,i.length+1)===i+\"-\"))}},CHILD:function(d,e,t,h,g){var v=\"nth\"!==d.slice(0,3),y=\"last\"!==d.slice(-4),m=\"of-type\"===e;return 1===h&&0===g?function(e){return!!e.parentNode}:function(e,t,n){var r,i,o,a,s,u=v!==y?\"nextSibling\":\"previousSibling\",l=e.parentNode,c=m&&e.nodeName.toLowerCase(),f=!n&&!m,p=!1;if(l){if(v){while(u){o=e;while(o=o[u])if(m?fe(o,c):1===o.nodeType)return!1;s=u=\"only\"===d&&!s&&\"nextSibling\"}return!0}if(s=[y?l.firstChild:l.lastChild],y&&f){p=(a=(r=(i=l[S]||(l[S]={}))[d]||[])[0]===E&&r[1])&&r[2],o=a&&l.childNodes[a];while(o=++a&&o&&o[u]||(p=a=0)||s.pop())if(1===o.nodeType&&++p&&o===e){i[d]=[E,a,p];break}}else if(f&&(p=a=(r=(i=e[S]||(e[S]={}))[d]||[])[0]===E&&r[1]),!1===p)while(o=++a&&o&&o[u]||(p=a=0)||s.pop())if((m?fe(o,c):1===o.nodeType)&&++p&&(f&&((i=o[S]||(o[S]={}))[d]=[E,p]),o===e))break;return(p-=g)===h||p%h==0&&0<=p/h}}},PSEUDO:function(e,o){var t,a=b.pseudos[e]||b.setFilters[e.toLowerCase()]||I.error(\"unsupported pseudo: \"+e);return a[S]?a(o):1<a.length?(t=[e,e,\"\",o],b.setFilters.hasOwnProperty(e.toLowerCase())?F(function(e,t){var n,r=a(e,o),i=r.length;while(i--)e[n=se.call(e,r[i])]=!(t[n]=r[i])}):function(e){return a(e,0,t)}):a}},pseudos:{not:F(function(e){var r=[],i=[],s=ne(e.replace(ve,\"$1\"));return s[S]?F(function(e,t,n,r){var i,o=s(e,null,r,[]),a=e.length;while(a--)(i=o[a])&&(e[a]=!(t[a]=i))}):function(e,t,n){return r[0]=e,s(r,null,n,i),r[0]=null,!i.pop()}}),has:F(function(t){return function(e){return 0<I(t,e).length}}),contains:F(function(t){return t=t.replace(O,P),function(e){return-1<(e.textContent||ce.text(e)).indexOf(t)}}),lang:F(function(n){return A.test(n||\"\")||I.error(\"unsupported lang: \"+n),n=n.replace(O,P).toLowerCase(),function(e){var t;do{if(t=C?e.lang:e.getAttribute(\"xml:lang\")||e.getAttribute(\"lang\"))return(t=t.toLowerCase())===n||0===t.indexOf(n+\"-\")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=ie.location&&ie.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===r},focus:function(e){return e===function(){try{return T.activeElement}catch(e){}}()&&T.hasFocus()&&!!(e.type||e.href||~e.tabIndex)},enabled:z(!1),disabled:z(!0),checked:function(e){return fe(e,\"input\")&&!!e.checked||fe(e,\"option\")&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!b.pseudos.empty(e)},header:function(e){return q.test(e.nodeName)},input:function(e){return N.test(e.nodeName)},button:function(e){return fe(e,\"input\")&&\"button\"===e.type||fe(e,\"button\")},text:function(e){var t;return fe(e,\"input\")&&\"text\"===e.type&&(null==(t=e.getAttribute(\"type\"))||\"text\"===t.toLowerCase())},first:X(function(){return[0]}),last:X(function(e,t){return[t-1]}),eq:X(function(e,t,n){return[n<0?n+t:n]}),even:X(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:X(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:X(function(e,t,n){var r;for(r=n<0?n+t:t<n?t:n;0<=--r;)e.push(r);return e}),gt:X(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=B(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=_(e);function G(){}function Y(e,t){var n,r,i,o,a,s,u,l=c[e+\" \"];if(l)return t?0:l.slice(0);a=e,s=[],u=b.preFilter;while(a){for(o in n&&!(r=y.exec(a))||(r&&(a=a.slice(r[0].length)||a),s.push(i=[])),n=!1,(r=m.exec(a))&&(n=r.shift(),i.push({value:n,type:r[0].replace(ve,\" \")}),a=a.slice(n.length)),b.filter)!(r=D[o].exec(a))||u[o]&&!(r=u[o](r))||(n=r.shift(),i.push({value:n,type:o,matches:r}),a=a.slice(n.length));if(!n)break}return t?a.length:a?I.error(e):c(e,s).slice(0)}function Q(e){for(var t=0,n=e.length,r=\"\";t<n;t++)r+=e[t].value;return r}function J(a,e,t){var s=e.dir,u=e.next,l=u||s,c=t&&\"parentNode\"===l,f=n++;return e.first?function(e,t,n){while(e=e[s])if(1===e.nodeType||c)return a(e,t,n);return!1}:function(e,t,n){var r,i,o=[E,f];if(n){while(e=e[s])if((1===e.nodeType||c)&&a(e,t,n))return!0}else while(e=e[s])if(1===e.nodeType||c)if(i=e[S]||(e[S]={}),u&&fe(e,u))e=e[s]||e;else{if((r=i[l])&&r[0]===E&&r[1]===f)return o[2]=r[2];if((i[l]=o)[2]=a(e,t,n))return!0}return!1}}function K(i){return 1<i.length?function(e,t,n){var r=i.length;while(r--)if(!i[r](e,t,n))return!1;return!0}:i[0]}function Z(e,t,n,r,i){for(var o,a=[],s=0,u=e.length,l=null!=t;s<u;s++)(o=e[s])&&(n&&!n(o,r,i)||(a.push(o),l&&t.push(s)));return a}function ee(d,h,g,v,y,e){return v&&!v[S]&&(v=ee(v)),y&&!y[S]&&(y=ee(y,e)),F(function(e,t,n,r){var i,o,a,s,u=[],l=[],c=t.length,f=e||function(e,t,n){for(var r=0,i=t.length;r<i;r++)I(e,t[r],n);return n}(h||\"*\",n.nodeType?[n]:n,[]),p=!d||!e&&h?f:Z(f,u,d,n,r);if(g?g(p,s=y||(e?d:c||v)?[]:t,n,r):s=p,v){i=Z(s,l),v(i,[],n,r),o=i.length;while(o--)(a=i[o])&&(s[l[o]]=!(p[l[o]]=a))}if(e){if(y||d){if(y){i=[],o=s.length;while(o--)(a=s[o])&&i.push(p[o]=a);y(null,s=[],i,r)}o=s.length;while(o--)(a=s[o])&&-1<(i=y?se.call(e,a):u[o])&&(e[i]=!(t[i]=a))}}else s=Z(s===t?s.splice(c,s.length):s),y?y(null,t,s,r):k.apply(t,s)})}function te(e){for(var i,t,n,r=e.length,o=b.relative[e[0].type],a=o||b.relative[\" \"],s=o?1:0,u=J(function(e){return e===i},a,!0),l=J(function(e){return-1<se.call(i,e)},a,!0),c=[function(e,t,n){var r=!o&&(n||t!=w)||((i=t).nodeType?u(e,t,n):l(e,t,n));return i=null,r}];s<r;s++)if(t=b.relative[e[s].type])c=[J(K(c),t)];else{if((t=b.filter[e[s].type].apply(null,e[s].matches))[S]){for(n=++s;n<r;n++)if(b.relative[e[n].type])break;return ee(1<s&&K(c),1<s&&Q(e.slice(0,s-1).concat({value:\" \"===e[s-2].type?\"*\":\"\"})).replace(ve,\"$1\"),t,s<n&&te(e.slice(s,n)),n<r&&te(e=e.slice(n)),n<r&&Q(e))}c.push(t)}return K(c)}function ne(e,t){var n,v,y,m,x,r,i=[],o=[],a=u[e+\" \"];if(!a){t||(t=Y(e)),n=t.length;while(n--)(a=te(t[n]))[S]?i.push(a):o.push(a);(a=u(e,(v=o,m=0<(y=i).length,x=0<v.length,r=function(e,t,n,r,i){var o,a,s,u=0,l=\"0\",c=e&&[],f=[],p=w,d=e||x&&b.find.TAG(\"*\",i),h=E+=null==p?1:Math.random()||.1,g=d.length;for(i&&(w=t==T||t||i);l!==g&&null!=(o=d[l]);l++){if(x&&o){a=0,t||o.ownerDocument==T||(V(o),n=!C);while(s=v[a++])if(s(o,t||T,n)){k.call(r,o);break}i&&(E=h)}m&&((o=!s&&o)&&u--,e&&c.push(o))}if(u+=l,m&&l!==u){a=0;while(s=y[a++])s(c,f,t,n);if(e){if(0<u)while(l--)c[l]||f[l]||(f[l]=pe.call(r));f=Z(f)}k.apply(r,f),i&&!e&&0<f.length&&1<u+y.length&&ce.uniqueSort(r)}return i&&(E=h,w=p),c},m?F(r):r))).selector=e}return a}function re(e,t,n,r){var i,o,a,s,u,l=\"function\"==typeof e&&e,c=!r&&Y(e=l.selector||e);if(n=n||[],1===c.length){if(2<(o=c[0]=c[0].slice(0)).length&&\"ID\"===(a=o[0]).type&&9===t.nodeType&&C&&b.relative[o[1].type]){if(!(t=(b.find.ID(a.matches[0].replace(O,P),t)||[])[0]))return n;l&&(t=t.parentNode),e=e.slice(o.shift().value.length)}i=D.needsContext.test(e)?0:o.length;while(i--){if(a=o[i],b.relative[s=a.type])break;if((u=b.find[s])&&(r=u(a.matches[0].replace(O,P),H.test(o[0].type)&&U(t.parentNode)||t))){if(o.splice(i,1),!(e=r.length&&Q(o)))return k.apply(n,r),n;break}}}return(l||ne(e,c))(r,t,!C,n,!t||H.test(e)&&U(t.parentNode)||t),n}G.prototype=b.filters=b.pseudos,b.setFilters=new G,le.sortStable=S.split(\"\").sort(l).join(\"\")===S,V(),le.sortDetached=$(function(e){return 1&e.compareDocumentPosition(T.createElement(\"fieldset\"))}),ce.find=I,ce.expr[\":\"]=ce.expr.pseudos,ce.unique=ce.uniqueSort,I.compile=ne,I.select=re,I.setDocument=V,I.tokenize=Y,I.escape=ce.escapeSelector,I.getText=ce.text,I.isXML=ce.isXMLDoc,I.selectors=ce.expr,I.support=ce.support,I.uniqueSort=ce.uniqueSort}();var d=function(e,t,n){var r=[],i=void 0!==n;while((e=e[t])&&9!==e.nodeType)if(1===e.nodeType){if(i&&ce(e).is(n))break;r.push(e)}return r},h=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},b=ce.expr.match.needsContext,w=/^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i;function T(e,n,r){return v(n)?ce.grep(e,function(e,t){return!!n.call(e,t,e)!==r}):n.nodeType?ce.grep(e,function(e){return e===n!==r}):\"string\"!=typeof n?ce.grep(e,function(e){return-1<se.call(n,e)!==r}):ce.filter(n,e,r)}ce.filter=function(e,t,n){var r=t[0];return n&&(e=\":not(\"+e+\")\"),1===t.length&&1===r.nodeType?ce.find.matchesSelector(r,e)?[r]:[]:ce.find.matches(e,ce.grep(t,function(e){return 1===e.nodeType}))},ce.fn.extend({find:function(e){var t,n,r=this.length,i=this;if(\"string\"!=typeof e)return this.pushStack(ce(e).filter(function(){for(t=0;t<r;t++)if(ce.contains(i[t],this))return!0}));for(n=this.pushStack([]),t=0;t<r;t++)ce.find(e,i[t],n);return 1<r?ce.uniqueSort(n):n},filter:function(e){return this.pushStack(T(this,e||[],!1))},not:function(e){return this.pushStack(T(this,e||[],!0))},is:function(e){return!!T(this,\"string\"==typeof e&&b.test(e)?ce(e):e||[],!1).length}});var k,S=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/;(ce.fn.init=function(e,t,n){var r,i;if(!e)return this;if(n=n||k,\"string\"==typeof e){if(!(r=\"<\"===e[0]&&\">\"===e[e.length-1]&&3<=e.length?[null,e,null]:S.exec(e))||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof ce?t[0]:t,ce.merge(this,ce.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:C,!0)),w.test(r[1])&&ce.isPlainObject(t))for(r in t)v(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}return(i=C.getElementById(r[2]))&&(this[0]=i,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):v(e)?void 0!==n.ready?n.ready(e):e(ce):ce.makeArray(e,this)}).prototype=ce.fn,k=ce(C);var E=/^(?:parents|prev(?:Until|All))/,j={children:!0,contents:!0,next:!0,prev:!0};function A(e,t){while((e=e[t])&&1!==e.nodeType);return e}ce.fn.extend({has:function(e){var t=ce(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(ce.contains(this,t[e]))return!0})},closest:function(e,t){var n,r=0,i=this.length,o=[],a=\"string\"!=typeof e&&ce(e);if(!b.test(e))for(;r<i;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?-1<a.index(n):1===n.nodeType&&ce.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(1<o.length?ce.uniqueSort(o):o)},index:function(e){return e?\"string\"==typeof e?se.call(ce(e),this[0]):se.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(ce.uniqueSort(ce.merge(this.get(),ce(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),ce.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return d(e,\"parentNode\")},parentsUntil:function(e,t,n){return d(e,\"parentNode\",n)},next:function(e){return A(e,\"nextSibling\")},prev:function(e){return A(e,\"previousSibling\")},nextAll:function(e){return d(e,\"nextSibling\")},prevAll:function(e){return d(e,\"previousSibling\")},nextUntil:function(e,t,n){return d(e,\"nextSibling\",n)},prevUntil:function(e,t,n){return d(e,\"previousSibling\",n)},siblings:function(e){return h((e.parentNode||{}).firstChild,e)},children:function(e){return h(e.firstChild)},contents:function(e){return null!=e.contentDocument&&r(e.contentDocument)?e.contentDocument:(fe(e,\"template\")&&(e=e.content||e),ce.merge([],e.childNodes))}},function(r,i){ce.fn[r]=function(e,t){var n=ce.map(this,i,e);return\"Until\"!==r.slice(-5)&&(t=e),t&&\"string\"==typeof t&&(n=ce.filter(t,n)),1<this.length&&(j[r]||ce.uniqueSort(n),E.test(r)&&n.reverse()),this.pushStack(n)}});var D=/[^\\x20\\t\\r\\n\\f]+/g;function N(e){return e}function q(e){throw e}function L(e,t,n,r){var i;try{e&&v(i=e.promise)?i.call(e).done(t).fail(n):e&&v(i=e.then)?i.call(e,t,n):t.apply(void 0,[e].slice(r))}catch(e){n.apply(void 0,[e])}}ce.Callbacks=function(r){var e,n;r=\"string\"==typeof r?(e=r,n={},ce.each(e.match(D)||[],function(e,t){n[t]=!0}),n):ce.extend({},r);var i,t,o,a,s=[],u=[],l=-1,c=function(){for(a=a||r.once,o=i=!0;u.length;l=-1){t=u.shift();while(++l<s.length)!1===s[l].apply(t[0],t[1])&&r.stopOnFalse&&(l=s.length,t=!1)}r.memory||(t=!1),i=!1,a&&(s=t?[]:\"\")},f={add:function(){return s&&(t&&!i&&(l=s.length-1,u.push(t)),function n(e){ce.each(e,function(e,t){v(t)?r.unique&&f.has(t)||s.push(t):t&&t.length&&\"string\"!==x(t)&&n(t)})}(arguments),t&&!i&&c()),this},remove:function(){return ce.each(arguments,function(e,t){var n;while(-1<(n=ce.inArray(t,s,n)))s.splice(n,1),n<=l&&l--}),this},has:function(e){return e?-1<ce.inArray(e,s):0<s.length},empty:function(){return s&&(s=[]),this},disable:function(){return a=u=[],s=t=\"\",this},disabled:function(){return!s},lock:function(){return a=u=[],t||i||(s=t=\"\"),this},locked:function(){return!!a},fireWith:function(e,t){return a||(t=[e,(t=t||[]).slice?t.slice():t],u.push(t),i||c()),this},fire:function(){return f.fireWith(this,arguments),this},fired:function(){return!!o}};return f},ce.extend({Deferred:function(e){var o=[[\"notify\",\"progress\",ce.Callbacks(\"memory\"),ce.Callbacks(\"memory\"),2],[\"resolve\",\"done\",ce.Callbacks(\"once memory\"),ce.Callbacks(\"once memory\"),0,\"resolved\"],[\"reject\",\"fail\",ce.Callbacks(\"once memory\"),ce.Callbacks(\"once memory\"),1,\"rejected\"]],i=\"pending\",a={state:function(){return i},always:function(){return s.done(arguments).fail(arguments),this},\"catch\":function(e){return a.then(null,e)},pipe:function(){var i=arguments;return ce.Deferred(function(r){ce.each(o,function(e,t){var n=v(i[t[4]])&&i[t[4]];s[t[1]](function(){var e=n&&n.apply(this,arguments);e&&v(e.promise)?e.promise().progress(r.notify).done(r.resolve).fail(r.reject):r[t[0]+\"With\"](this,n?[e]:arguments)})}),i=null}).promise()},then:function(t,n,r){var u=0;function l(i,o,a,s){return function(){var n=this,r=arguments,e=function(){var e,t;if(!(i<u)){if((e=a.apply(n,r))===o.promise())throw new TypeError(\"Thenable self-resolution\");t=e&&(\"object\"==typeof e||\"function\"==typeof e)&&e.then,v(t)?s?t.call(e,l(u,o,N,s),l(u,o,q,s)):(u++,t.call(e,l(u,o,N,s),l(u,o,q,s),l(u,o,N,o.notifyWith))):(a!==N&&(n=void 0,r=[e]),(s||o.resolveWith)(n,r))}},t=s?e:function(){try{e()}catch(e){ce.Deferred.exceptionHook&&ce.Deferred.exceptionHook(e,t.error),u<=i+1&&(a!==q&&(n=void 0,r=[e]),o.rejectWith(n,r))}};i?t():(ce.Deferred.getErrorHook?t.error=ce.Deferred.getErrorHook():ce.Deferred.getStackHook&&(t.error=ce.Deferred.getStackHook()),ie.setTimeout(t))}}return ce.Deferred(function(e){o[0][3].add(l(0,e,v(r)?r:N,e.notifyWith)),o[1][3].add(l(0,e,v(t)?t:N)),o[2][3].add(l(0,e,v(n)?n:q))}).promise()},promise:function(e){return null!=e?ce.extend(e,a):a}},s={};return ce.each(o,function(e,t){var n=t[2],r=t[5];a[t[1]]=n.add,r&&n.add(function(){i=r},o[3-e][2].disable,o[3-e][3].disable,o[0][2].lock,o[0][3].lock),n.add(t[3].fire),s[t[0]]=function(){return s[t[0]+\"With\"](this===s?void 0:this,arguments),this},s[t[0]+\"With\"]=n.fireWith}),a.promise(s),e&&e.call(s,s),s},when:function(e){var n=arguments.length,t=n,r=Array(t),i=ae.call(arguments),o=ce.Deferred(),a=function(t){return function(e){r[t]=this,i[t]=1<arguments.length?ae.call(arguments):e,--n||o.resolveWith(r,i)}};if(n<=1&&(L(e,o.done(a(t)).resolve,o.reject,!n),\"pending\"===o.state()||v(i[t]&&i[t].then)))return o.then();while(t--)L(i[t],a(t),o.reject);return o.promise()}});var H=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;ce.Deferred.exceptionHook=function(e,t){ie.console&&ie.console.warn&&e&&H.test(e.name)&&ie.console.warn(\"jQuery.Deferred exception: \"+e.message,e.stack,t)},ce.readyException=function(e){ie.setTimeout(function(){throw e})};var O=ce.Deferred();function P(){C.removeEventListener(\"DOMContentLoaded\",P),ie.removeEventListener(\"load\",P),ce.ready()}ce.fn.ready=function(e){return O.then(e)[\"catch\"](function(e){ce.readyException(e)}),this},ce.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--ce.readyWait:ce.isReady)||(ce.isReady=!0)!==e&&0<--ce.readyWait||O.resolveWith(C,[ce])}}),ce.ready.then=O.then,\"complete\"===C.readyState||\"loading\"!==C.readyState&&!C.documentElement.doScroll?ie.setTimeout(ce.ready):(C.addEventListener(\"DOMContentLoaded\",P),ie.addEventListener(\"load\",P));var M=function(e,t,n,r,i,o,a){var s=0,u=e.length,l=null==n;if(\"object\"===x(n))for(s in i=!0,n)M(e,t,s,n[s],!0,o,a);else if(void 0!==r&&(i=!0,v(r)||(a=!0),l&&(a?(t.call(e,r),t=null):(l=t,t=function(e,t,n){return l.call(ce(e),n)})),t))for(;s<u;s++)t(e[s],n,a?r:r.call(e[s],s,t(e[s],n)));return i?e:l?t.call(e):u?t(e[0],n):o},R=/^-ms-/,I=/-([a-z])/g;function W(e,t){return t.toUpperCase()}function F(e){return e.replace(R,\"ms-\").replace(I,W)}var $=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function B(){this.expando=ce.expando+B.uid++}B.uid=1,B.prototype={cache:function(e){var t=e[this.expando];return t||(t={},$(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var r,i=this.cache(e);if(\"string\"==typeof t)i[F(t)]=n;else for(r in t)i[F(r)]=t[r];return i},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][F(t)]},access:function(e,t,n){return void 0===t||t&&\"string\"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r=e[this.expando];if(void 0!==r){if(void 0!==t){n=(t=Array.isArray(t)?t.map(F):(t=F(t))in r?[t]:t.match(D)||[]).length;while(n--)delete r[t[n]]}(void 0===t||ce.isEmptyObject(r))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!ce.isEmptyObject(t)}};var _=new B,z=new B,X=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,U=/[A-Z]/g;function V(e,t,n){var r,i;if(void 0===n&&1===e.nodeType)if(r=\"data-\"+t.replace(U,\"-$&\").toLowerCase(),\"string\"==typeof(n=e.getAttribute(r))){try{n=\"true\"===(i=n)||\"false\"!==i&&(\"null\"===i?null:i===+i+\"\"?+i:X.test(i)?JSON.parse(i):i)}catch(e){}z.set(e,t,n)}else n=void 0;return n}ce.extend({hasData:function(e){return z.hasData(e)||_.hasData(e)},data:function(e,t,n){return z.access(e,t,n)},removeData:function(e,t){z.remove(e,t)},_data:function(e,t,n){return _.access(e,t,n)},_removeData:function(e,t){_.remove(e,t)}}),ce.fn.extend({data:function(n,e){var t,r,i,o=this[0],a=o&&o.attributes;if(void 0===n){if(this.length&&(i=z.get(o),1===o.nodeType&&!_.get(o,\"hasDataAttrs\"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf(\"data-\")&&(r=F(r.slice(5)),V(o,r,i[r]));_.set(o,\"hasDataAttrs\",!0)}return i}return\"object\"==typeof n?this.each(function(){z.set(this,n)}):M(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=z.get(o,n))?t:void 0!==(t=V(o,n))?t:void 0;this.each(function(){z.set(this,n,e)})},null,e,1<arguments.length,null,!0)},removeData:function(e){return this.each(function(){z.remove(this,e)})}}),ce.extend({queue:function(e,t,n){var r;if(e)return t=(t||\"fx\")+\"queue\",r=_.get(e,t),n&&(!r||Array.isArray(n)?r=_.access(e,t,ce.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||\"fx\";var n=ce.queue(e,t),r=n.length,i=n.shift(),o=ce._queueHooks(e,t);\"inprogress\"===i&&(i=n.shift(),r--),i&&(\"fx\"===t&&n.unshift(\"inprogress\"),delete o.stop,i.call(e,function(){ce.dequeue(e,t)},o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+\"queueHooks\";return _.get(e,n)||_.access(e,n,{empty:ce.Callbacks(\"once memory\").add(function(){_.remove(e,[t+\"queue\",n])})})}}),ce.fn.extend({queue:function(t,n){var e=2;return\"string\"!=typeof t&&(n=t,t=\"fx\",e--),arguments.length<e?ce.queue(this[0],t):void 0===n?this:this.each(function(){var e=ce.queue(this,t,n);ce._queueHooks(this,t),\"fx\"===t&&\"inprogress\"!==e[0]&&ce.dequeue(this,t)})},dequeue:function(e){return this.each(function(){ce.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||\"fx\",[])},promise:function(e,t){var n,r=1,i=ce.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};\"string\"!=typeof e&&(t=e,e=void 0),e=e||\"fx\";while(a--)(n=_.get(o[a],e+\"queueHooks\"))&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(t)}});var G=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,Y=new RegExp(\"^(?:([+-])=|)(\"+G+\")([a-z%]*)$\",\"i\"),Q=[\"Top\",\"Right\",\"Bottom\",\"Left\"],J=C.documentElement,K=function(e){return ce.contains(e.ownerDocument,e)},Z={composed:!0};J.getRootNode&&(K=function(e){return ce.contains(e.ownerDocument,e)||e.getRootNode(Z)===e.ownerDocument});var ee=function(e,t){return\"none\"===(e=t||e).style.display||\"\"===e.style.display&&K(e)&&\"none\"===ce.css(e,\"display\")};function te(e,t,n,r){var i,o,a=20,s=r?function(){return r.cur()}:function(){return ce.css(e,t,\"\")},u=s(),l=n&&n[3]||(ce.cssNumber[t]?\"\":\"px\"),c=e.nodeType&&(ce.cssNumber[t]||\"px\"!==l&&+u)&&Y.exec(ce.css(e,t));if(c&&c[3]!==l){u/=2,l=l||c[3],c=+u||1;while(a--)ce.style(e,t,c+l),(1-o)*(1-(o=s()/u||.5))<=0&&(a=0),c/=o;c*=2,ce.style(e,t,c+l),n=n||[]}return n&&(c=+c||+u||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],r&&(r.unit=l,r.start=c,r.end=i)),i}var ne={};function re(e,t){for(var n,r,i,o,a,s,u,l=[],c=0,f=e.length;c<f;c++)(r=e[c]).style&&(n=r.style.display,t?(\"none\"===n&&(l[c]=_.get(r,\"display\")||null,l[c]||(r.style.display=\"\")),\"\"===r.style.display&&ee(r)&&(l[c]=(u=a=o=void 0,a=(i=r).ownerDocument,s=i.nodeName,(u=ne[s])||(o=a.body.appendChild(a.createElement(s)),u=ce.css(o,\"display\"),o.parentNode.removeChild(o),\"none\"===u&&(u=\"block\"),ne[s]=u)))):\"none\"!==n&&(l[c]=\"none\",_.set(r,\"display\",n)));for(c=0;c<f;c++)null!=l[c]&&(e[c].style.display=l[c]);return e}ce.fn.extend({show:function(){return re(this,!0)},hide:function(){return re(this)},toggle:function(e){return\"boolean\"==typeof e?e?this.show():this.hide():this.each(function(){ee(this)?ce(this).show():ce(this).hide()})}});var xe,be,we=/^(?:checkbox|radio)$/i,Te=/<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i,Ce=/^$|^module$|\\/(?:java|ecma)script/i;xe=C.createDocumentFragment().appendChild(C.createElement(\"div\")),(be=C.createElement(\"input\")).setAttribute(\"type\",\"radio\"),be.setAttribute(\"checked\",\"checked\"),be.setAttribute(\"name\",\"t\"),xe.appendChild(be),le.checkClone=xe.cloneNode(!0).cloneNode(!0).lastChild.checked,xe.innerHTML=\"<textarea>x</textarea>\",le.noCloneChecked=!!xe.cloneNode(!0).lastChild.defaultValue,xe.innerHTML=\"<option></option>\",le.option=!!xe.lastChild;var ke={thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};function Se(e,t){var n;return n=\"undefined\"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||\"*\"):\"undefined\"!=typeof e.querySelectorAll?e.querySelectorAll(t||\"*\"):[],void 0===t||t&&fe(e,t)?ce.merge([e],n):n}function Ee(e,t){for(var n=0,r=e.length;n<r;n++)_.set(e[n],\"globalEval\",!t||_.get(t[n],\"globalEval\"))}ke.tbody=ke.tfoot=ke.colgroup=ke.caption=ke.thead,ke.th=ke.td,le.option||(ke.optgroup=ke.option=[1,\"<select multiple='multiple'>\",\"</select>\"]);var je=/<|&#?\\w+;/;function Ae(e,t,n,r,i){for(var o,a,s,u,l,c,f=t.createDocumentFragment(),p=[],d=0,h=e.length;d<h;d++)if((o=e[d])||0===o)if(\"object\"===x(o))ce.merge(p,o.nodeType?[o]:o);else if(je.test(o)){a=a||f.appendChild(t.createElement(\"div\")),s=(Te.exec(o)||[\"\",\"\"])[1].toLowerCase(),u=ke[s]||ke._default,a.innerHTML=u[1]+ce.htmlPrefilter(o)+u[2],c=u[0];while(c--)a=a.lastChild;ce.merge(p,a.childNodes),(a=f.firstChild).textContent=\"\"}else p.push(t.createTextNode(o));f.textContent=\"\",d=0;while(o=p[d++])if(r&&-1<ce.inArray(o,r))i&&i.push(o);else if(l=K(o),a=Se(f.appendChild(o),\"script\"),l&&Ee(a),n){c=0;while(o=a[c++])Ce.test(o.type||\"\")&&n.push(o)}return f}var De=/^([^.]*)(?:\\.(.+)|)/;function Ne(){return!0}function qe(){return!1}function Le(e,t,n,r,i,o){var a,s;if(\"object\"==typeof t){for(s in\"string\"!=typeof n&&(r=r||n,n=void 0),t)Le(e,s,n,r,t[s],o);return e}if(null==r&&null==i?(i=n,r=n=void 0):null==i&&(\"string\"==typeof n?(i=r,r=void 0):(i=r,r=n,n=void 0)),!1===i)i=qe;else if(!i)return e;return 1===o&&(a=i,(i=function(e){return ce().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=ce.guid++)),e.each(function(){ce.event.add(this,t,i,r,n)})}function He(e,r,t){t?(_.set(e,r,!1),ce.event.add(e,r,{namespace:!1,handler:function(e){var t,n=_.get(this,r);if(1&e.isTrigger&&this[r]){if(n)(ce.event.special[r]||{}).delegateType&&e.stopPropagation();else if(n=ae.call(arguments),_.set(this,r,n),this[r](),t=_.get(this,r),_.set(this,r,!1),n!==t)return e.stopImmediatePropagation(),e.preventDefault(),t}else n&&(_.set(this,r,ce.event.trigger(n[0],n.slice(1),this)),e.stopPropagation(),e.isImmediatePropagationStopped=Ne)}})):void 0===_.get(e,r)&&ce.event.add(e,r,Ne)}ce.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=_.get(t);if($(t)){n.handler&&(n=(o=n).handler,i=o.selector),i&&ce.find.matchesSelector(J,i),n.guid||(n.guid=ce.guid++),(u=v.events)||(u=v.events=Object.create(null)),(a=v.handle)||(a=v.handle=function(e){return\"undefined\"!=typeof ce&&ce.event.triggered!==e.type?ce.event.dispatch.apply(t,arguments):void 0}),l=(e=(e||\"\").match(D)||[\"\"]).length;while(l--)d=g=(s=De.exec(e[l])||[])[1],h=(s[2]||\"\").split(\".\").sort(),d&&(f=ce.event.special[d]||{},d=(i?f.delegateType:f.bindType)||d,f=ce.event.special[d]||{},c=ce.extend({type:d,origType:g,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&ce.expr.match.needsContext.test(i),namespace:h.join(\".\")},o),(p=u[d])||((p=u[d]=[]).delegateCount=0,f.setup&&!1!==f.setup.call(t,r,h,a)||t.addEventListener&&t.addEventListener(d,a)),f.add&&(f.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,c):p.push(c),ce.event.global[d]=!0)}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=_.hasData(e)&&_.get(e);if(v&&(u=v.events)){l=(t=(t||\"\").match(D)||[\"\"]).length;while(l--)if(d=g=(s=De.exec(t[l])||[])[1],h=(s[2]||\"\").split(\".\").sort(),d){f=ce.event.special[d]||{},p=u[d=(r?f.delegateType:f.bindType)||d]||[],s=s[2]&&new RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),a=o=p.length;while(o--)c=p[o],!i&&g!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||r&&r!==c.selector&&(\"**\"!==r||!c.selector)||(p.splice(o,1),c.selector&&p.delegateCount--,f.remove&&f.remove.call(e,c));a&&!p.length&&(f.teardown&&!1!==f.teardown.call(e,h,v.handle)||ce.removeEvent(e,d,v.handle),delete u[d])}else for(d in u)ce.event.remove(e,d+t[l],n,r,!0);ce.isEmptyObject(u)&&_.remove(e,\"handle events\")}},dispatch:function(e){var t,n,r,i,o,a,s=new Array(arguments.length),u=ce.event.fix(e),l=(_.get(this,\"events\")||Object.create(null))[u.type]||[],c=ce.event.special[u.type]||{};for(s[0]=u,t=1;t<arguments.length;t++)s[t]=arguments[t];if(u.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,u)){a=ce.event.handlers.call(this,u,l),t=0;while((i=a[t++])&&!u.isPropagationStopped()){u.currentTarget=i.elem,n=0;while((o=i.handlers[n++])&&!u.isImmediatePropagationStopped())u.rnamespace&&!1!==o.namespace&&!u.rnamespace.test(o.namespace)||(u.handleObj=o,u.data=o.data,void 0!==(r=((ce.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,s))&&!1===(u.result=r)&&(u.preventDefault(),u.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,u),u.result}},handlers:function(e,t){var n,r,i,o,a,s=[],u=t.delegateCount,l=e.target;if(u&&l.nodeType&&!(\"click\"===e.type&&1<=e.button))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&(\"click\"!==e.type||!0!==l.disabled)){for(o=[],a={},n=0;n<u;n++)void 0===a[i=(r=t[n]).selector+\" \"]&&(a[i]=r.needsContext?-1<ce(i,this).index(l):ce.find(i,this,null,[l]).length),a[i]&&o.push(r);o.length&&s.push({elem:l,handlers:o})}return l=this,u<t.length&&s.push({elem:l,handlers:t.slice(u)}),s},addProp:function(t,e){Object.defineProperty(ce.Event.prototype,t,{enumerable:!0,configurable:!0,get:v(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[ce.expando]?e:new ce.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return we.test(t.type)&&t.click&&fe(t,\"input\")&&He(t,\"click\",!0),!1},trigger:function(e){var t=this||e;return we.test(t.type)&&t.click&&fe(t,\"input\")&&He(t,\"click\"),!0},_default:function(e){var t=e.target;return we.test(t.type)&&t.click&&fe(t,\"input\")&&_.get(t,\"click\")||fe(t,\"a\")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},ce.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},ce.Event=function(e,t){if(!(this instanceof ce.Event))return new ce.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Ne:qe,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&ce.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[ce.expando]=!0},ce.Event.prototype={constructor:ce.Event,isDefaultPrevented:qe,isPropagationStopped:qe,isImmediatePropagationStopped:qe,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Ne,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Ne,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Ne,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},ce.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,\"char\":!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},ce.event.addProp),ce.each({focus:\"focusin\",blur:\"focusout\"},function(r,i){function o(e){if(C.documentMode){var t=_.get(this,\"handle\"),n=ce.event.fix(e);n.type=\"focusin\"===e.type?\"focus\":\"blur\",n.isSimulated=!0,t(e),n.target===n.currentTarget&&t(n)}else ce.event.simulate(i,e.target,ce.event.fix(e))}ce.event.special[r]={setup:function(){var e;if(He(this,r,!0),!C.documentMode)return!1;(e=_.get(this,i))||this.addEventListener(i,o),_.set(this,i,(e||0)+1)},trigger:function(){return He(this,r),!0},teardown:function(){var e;if(!C.documentMode)return!1;(e=_.get(this,i)-1)?_.set(this,i,e):(this.removeEventListener(i,o),_.remove(this,i))},_default:function(e){return _.get(e.target,r)},delegateType:i},ce.event.special[i]={setup:function(){var e=this.ownerDocument||this.document||this,t=C.documentMode?this:e,n=_.get(t,i);n||(C.documentMode?this.addEventListener(i,o):e.addEventListener(r,o,!0)),_.set(t,i,(n||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=C.documentMode?this:e,n=_.get(t,i)-1;n?_.set(t,i,n):(C.documentMode?this.removeEventListener(i,o):e.removeEventListener(r,o,!0),_.remove(t,i))}}}),ce.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(e,i){ce.event.special[e]={delegateType:i,bindType:i,handle:function(e){var t,n=e.relatedTarget,r=e.handleObj;return n&&(n===this||ce.contains(this,n))||(e.type=r.origType,t=r.handler.apply(this,arguments),e.type=i),t}}}),ce.fn.extend({on:function(e,t,n,r){return Le(this,e,t,n,r)},one:function(e,t,n,r){return Le(this,e,t,n,r,1)},off:function(e,t,n){var r,i;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,ce(e.delegateTarget).off(r.namespace?r.origType+\".\"+r.namespace:r.origType,r.selector,r.handler),this;if(\"object\"==typeof e){for(i in e)this.off(i,t,e[i]);return this}return!1!==t&&\"function\"!=typeof t||(n=t,t=void 0),!1===n&&(n=qe),this.each(function(){ce.event.remove(this,e,n,t)})}});var Oe=/<script|<style|<link/i,Pe=/checked\\s*(?:[^=]|=\\s*.checked.)/i,Me=/^\\s*<!\\[CDATA\\[|\\]\\]>\\s*$/g;function Re(e,t){return fe(e,\"table\")&&fe(11!==t.nodeType?t:t.firstChild,\"tr\")&&ce(e).children(\"tbody\")[0]||e}function Ie(e){return e.type=(null!==e.getAttribute(\"type\"))+\"/\"+e.type,e}function We(e){return\"true/\"===(e.type||\"\").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute(\"type\"),e}function Fe(e,t){var n,r,i,o,a,s;if(1===t.nodeType){if(_.hasData(e)&&(s=_.get(e).events))for(i in _.remove(t,\"handle events\"),s)for(n=0,r=s[i].length;n<r;n++)ce.event.add(t,i,s[i][n]);z.hasData(e)&&(o=z.access(e),a=ce.extend({},o),z.set(t,a))}}function $e(n,r,i,o){r=g(r);var e,t,a,s,u,l,c=0,f=n.length,p=f-1,d=r[0],h=v(d);if(h||1<f&&\"string\"==typeof d&&!le.checkClone&&Pe.test(d))return n.each(function(e){var t=n.eq(e);h&&(r[0]=d.call(this,e,t.html())),$e(t,r,i,o)});if(f&&(t=(e=Ae(r,n[0].ownerDocument,!1,n,o)).firstChild,1===e.childNodes.length&&(e=t),t||o)){for(s=(a=ce.map(Se(e,\"script\"),Ie)).length;c<f;c++)u=e,c!==p&&(u=ce.clone(u,!0,!0),s&&ce.merge(a,Se(u,\"script\"))),i.call(n[c],u,c);if(s)for(l=a[a.length-1].ownerDocument,ce.map(a,We),c=0;c<s;c++)u=a[c],Ce.test(u.type||\"\")&&!_.access(u,\"globalEval\")&&ce.contains(l,u)&&(u.src&&\"module\"!==(u.type||\"\").toLowerCase()?ce._evalUrl&&!u.noModule&&ce._evalUrl(u.src,{nonce:u.nonce||u.getAttribute(\"nonce\")},l):m(u.textContent.replace(Me,\"\"),u,l))}return n}function Be(e,t,n){for(var r,i=t?ce.filter(t,e):e,o=0;null!=(r=i[o]);o++)n||1!==r.nodeType||ce.cleanData(Se(r)),r.parentNode&&(n&&K(r)&&Ee(Se(r,\"script\")),r.parentNode.removeChild(r));return e}ce.extend({htmlPrefilter:function(e){return e},clone:function(e,t,n){var r,i,o,a,s,u,l,c=e.cloneNode(!0),f=K(e);if(!(le.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||ce.isXMLDoc(e)))for(a=Se(c),r=0,i=(o=Se(e)).length;r<i;r++)s=o[r],u=a[r],void 0,\"input\"===(l=u.nodeName.toLowerCase())&&we.test(s.type)?u.checked=s.checked:\"input\"!==l&&\"textarea\"!==l||(u.defaultValue=s.defaultValue);if(t)if(n)for(o=o||Se(e),a=a||Se(c),r=0,i=o.length;r<i;r++)Fe(o[r],a[r]);else Fe(e,c);return 0<(a=Se(c,\"script\")).length&&Ee(a,!f&&Se(e,\"script\")),c},cleanData:function(e){for(var t,n,r,i=ce.event.special,o=0;void 0!==(n=e[o]);o++)if($(n)){if(t=n[_.expando]){if(t.events)for(r in t.events)i[r]?ce.event.remove(n,r):ce.removeEvent(n,r,t.handle);n[_.expando]=void 0}n[z.expando]&&(n[z.expando]=void 0)}}}),ce.fn.extend({detach:function(e){return Be(this,e,!0)},remove:function(e){return Be(this,e)},text:function(e){return M(this,function(e){return void 0===e?ce.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return $e(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Re(this,e).appendChild(e)})},prepend:function(){return $e(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Re(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return $e(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return $e(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(ce.cleanData(Se(e,!1)),e.textContent=\"\");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return ce.clone(this,e,t)})},html:function(e){return M(this,function(e){var t=this[0]||{},n=0,r=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if(\"string\"==typeof e&&!Oe.test(e)&&!ke[(Te.exec(e)||[\"\",\"\"])[1].toLowerCase()]){e=ce.htmlPrefilter(e);try{for(;n<r;n++)1===(t=this[n]||{}).nodeType&&(ce.cleanData(Se(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var n=[];return $e(this,arguments,function(e){var t=this.parentNode;ce.inArray(this,n)<0&&(ce.cleanData(Se(this)),t&&t.replaceChild(e,this))},n)}}),ce.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(e,a){ce.fn[e]=function(e){for(var t,n=[],r=ce(e),i=r.length-1,o=0;o<=i;o++)t=o===i?this:this.clone(!0),ce(r[o])[a](t),s.apply(n,t.get());return this.pushStack(n)}});var _e=new RegExp(\"^(\"+G+\")(?!px)[a-z%]+$\",\"i\"),ze=/^--/,Xe=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=ie),t.getComputedStyle(e)},Ue=function(e,t,n){var r,i,o={};for(i in t)o[i]=e.style[i],e.style[i]=t[i];for(i in r=n.call(e),t)e.style[i]=o[i];return r},Ve=new RegExp(Q.join(\"|\"),\"i\");function Ge(e,t,n){var r,i,o,a,s=ze.test(t),u=e.style;return(n=n||Xe(e))&&(a=n.getPropertyValue(t)||n[t],s&&a&&(a=a.replace(ve,\"$1\")||void 0),\"\"!==a||K(e)||(a=ce.style(e,t)),!le.pixelBoxStyles()&&_e.test(a)&&Ve.test(t)&&(r=u.width,i=u.minWidth,o=u.maxWidth,u.minWidth=u.maxWidth=u.width=a,a=n.width,u.width=r,u.minWidth=i,u.maxWidth=o)),void 0!==a?a+\"\":a}function Ye(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function e(){if(l){u.style.cssText=\"position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0\",l.style.cssText=\"position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%\",J.appendChild(u).appendChild(l);var e=ie.getComputedStyle(l);n=\"1%\"!==e.top,s=12===t(e.marginLeft),l.style.right=\"60%\",o=36===t(e.right),r=36===t(e.width),l.style.position=\"absolute\",i=12===t(l.offsetWidth/3),J.removeChild(u),l=null}}function t(e){return Math.round(parseFloat(e))}var n,r,i,o,a,s,u=C.createElement(\"div\"),l=C.createElement(\"div\");l.style&&(l.style.backgroundClip=\"content-box\",l.cloneNode(!0).style.backgroundClip=\"\",le.clearCloneStyle=\"content-box\"===l.style.backgroundClip,ce.extend(le,{boxSizingReliable:function(){return e(),r},pixelBoxStyles:function(){return e(),o},pixelPosition:function(){return e(),n},reliableMarginLeft:function(){return e(),s},scrollboxSize:function(){return e(),i},reliableTrDimensions:function(){var e,t,n,r;return null==a&&(e=C.createElement(\"table\"),t=C.createElement(\"tr\"),n=C.createElement(\"div\"),e.style.cssText=\"position:absolute;left:-11111px;border-collapse:separate\",t.style.cssText=\"box-sizing:content-box;border:1px solid\",t.style.height=\"1px\",n.style.height=\"9px\",n.style.display=\"block\",J.appendChild(e).appendChild(t).appendChild(n),r=ie.getComputedStyle(t),a=parseInt(r.height,10)+parseInt(r.borderTopWidth,10)+parseInt(r.borderBottomWidth,10)===t.offsetHeight,J.removeChild(e)),a}}))}();var Qe=[\"Webkit\",\"Moz\",\"ms\"],Je=C.createElement(\"div\").style,Ke={};function Ze(e){var t=ce.cssProps[e]||Ke[e];return t||(e in Je?e:Ke[e]=function(e){var t=e[0].toUpperCase()+e.slice(1),n=Qe.length;while(n--)if((e=Qe[n]+t)in Je)return e}(e)||e)}var et=/^(none|table(?!-c[ea]).+)/,tt={position:\"absolute\",visibility:\"hidden\",display:\"block\"},nt={letterSpacing:\"0\",fontWeight:\"400\"};function rt(e,t,n){var r=Y.exec(t);return r?Math.max(0,r[2]-(n||0))+(r[3]||\"px\"):t}function it(e,t,n,r,i,o){var a=\"width\"===t?1:0,s=0,u=0,l=0;if(n===(r?\"border\":\"content\"))return 0;for(;a<4;a+=2)\"margin\"===n&&(l+=ce.css(e,n+Q[a],!0,i)),r?(\"content\"===n&&(u-=ce.css(e,\"padding\"+Q[a],!0,i)),\"margin\"!==n&&(u-=ce.css(e,\"border\"+Q[a]+\"Width\",!0,i))):(u+=ce.css(e,\"padding\"+Q[a],!0,i),\"padding\"!==n?u+=ce.css(e,\"border\"+Q[a]+\"Width\",!0,i):s+=ce.css(e,\"border\"+Q[a]+\"Width\",!0,i));return!r&&0<=o&&(u+=Math.max(0,Math.ceil(e[\"offset\"+t[0].toUpperCase()+t.slice(1)]-o-u-s-.5))||0),u+l}function ot(e,t,n){var r=Xe(e),i=(!le.boxSizingReliable()||n)&&\"border-box\"===ce.css(e,\"boxSizing\",!1,r),o=i,a=Ge(e,t,r),s=\"offset\"+t[0].toUpperCase()+t.slice(1);if(_e.test(a)){if(!n)return a;a=\"auto\"}return(!le.boxSizingReliable()&&i||!le.reliableTrDimensions()&&fe(e,\"tr\")||\"auto\"===a||!parseFloat(a)&&\"inline\"===ce.css(e,\"display\",!1,r))&&e.getClientRects().length&&(i=\"border-box\"===ce.css(e,\"boxSizing\",!1,r),(o=s in e)&&(a=e[s])),(a=parseFloat(a)||0)+it(e,t,n||(i?\"border\":\"content\"),o,r,a)+\"px\"}function at(e,t,n,r,i){return new at.prototype.init(e,t,n,r,i)}ce.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Ge(e,\"opacity\");return\"\"===n?\"1\":n}}}},cssNumber:{animationIterationCount:!0,aspectRatio:!0,borderImageSlice:!0,columnCount:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,scale:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeMiterlimit:!0,strokeOpacity:!0},cssProps:{},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=F(t),u=ze.test(t),l=e.style;if(u||(t=Ze(s)),a=ce.cssHooks[t]||ce.cssHooks[s],void 0===n)return a&&\"get\"in a&&void 0!==(i=a.get(e,!1,r))?i:l[t];\"string\"===(o=typeof n)&&(i=Y.exec(n))&&i[1]&&(n=te(e,t,i),o=\"number\"),null!=n&&n==n&&(\"number\"!==o||u||(n+=i&&i[3]||(ce.cssNumber[s]?\"\":\"px\")),le.clearCloneStyle||\"\"!==n||0!==t.indexOf(\"background\")||(l[t]=\"inherit\"),a&&\"set\"in a&&void 0===(n=a.set(e,n,r))||(u?l.setProperty(t,n):l[t]=n))}},css:function(e,t,n,r){var i,o,a,s=F(t);return ze.test(t)||(t=Ze(s)),(a=ce.cssHooks[t]||ce.cssHooks[s])&&\"get\"in a&&(i=a.get(e,!0,n)),void 0===i&&(i=Ge(e,t,r)),\"normal\"===i&&t in nt&&(i=nt[t]),\"\"===n||n?(o=parseFloat(i),!0===n||isFinite(o)?o||0:i):i}}),ce.each([\"height\",\"width\"],function(e,u){ce.cssHooks[u]={get:function(e,t,n){if(t)return!et.test(ce.css(e,\"display\"))||e.getClientRects().length&&e.getBoundingClientRect().width?ot(e,u,n):Ue(e,tt,function(){return ot(e,u,n)})},set:function(e,t,n){var r,i=Xe(e),o=!le.scrollboxSize()&&\"absolute\"===i.position,a=(o||n)&&\"border-box\"===ce.css(e,\"boxSizing\",!1,i),s=n?it(e,u,n,a,i):0;return a&&o&&(s-=Math.ceil(e[\"offset\"+u[0].toUpperCase()+u.slice(1)]-parseFloat(i[u])-it(e,u,\"border\",!1,i)-.5)),s&&(r=Y.exec(t))&&\"px\"!==(r[3]||\"px\")&&(e.style[u]=t,t=ce.css(e,u)),rt(0,t,s)}}}),ce.cssHooks.marginLeft=Ye(le.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Ge(e,\"marginLeft\"))||e.getBoundingClientRect().left-Ue(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+\"px\"}),ce.each({margin:\"\",padding:\"\",border:\"Width\"},function(i,o){ce.cssHooks[i+o]={expand:function(e){for(var t=0,n={},r=\"string\"==typeof e?e.split(\" \"):[e];t<4;t++)n[i+Q[t]+o]=r[t]||r[t-2]||r[0];return n}},\"margin\"!==i&&(ce.cssHooks[i+o].set=rt)}),ce.fn.extend({css:function(e,t){return M(this,function(e,t,n){var r,i,o={},a=0;if(Array.isArray(t)){for(r=Xe(e),i=t.length;a<i;a++)o[t[a]]=ce.css(e,t[a],!1,r);return o}return void 0!==n?ce.style(e,t,n):ce.css(e,t)},e,t,1<arguments.length)}}),((ce.Tween=at).prototype={constructor:at,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||ce.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(ce.cssNumber[n]?\"\":\"px\")},cur:function(){var e=at.propHooks[this.prop];return e&&e.get?e.get(this):at.propHooks._default.get(this)},run:function(e){var t,n=at.propHooks[this.prop];return this.options.duration?this.pos=t=ce.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):at.propHooks._default.set(this),this}}).init.prototype=at.prototype,(at.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=ce.css(e.elem,e.prop,\"\"))&&\"auto\"!==t?t:0},set:function(e){ce.fx.step[e.prop]?ce.fx.step[e.prop](e):1!==e.elem.nodeType||!ce.cssHooks[e.prop]&&null==e.elem.style[Ze(e.prop)]?e.elem[e.prop]=e.now:ce.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=at.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},ce.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:\"swing\"},ce.fx=at.prototype.init,ce.fx.step={};var st,ut,lt,ct,ft=/^(?:toggle|show|hide)$/,pt=/queueHooks$/;function dt(){ut&&(!1===C.hidden&&ie.requestAnimationFrame?ie.requestAnimationFrame(dt):ie.setTimeout(dt,ce.fx.interval),ce.fx.tick())}function ht(){return ie.setTimeout(function(){st=void 0}),st=Date.now()}function gt(e,t){var n,r=0,i={height:e};for(t=t?1:0;r<4;r+=2-t)i[\"margin\"+(n=Q[r])]=i[\"padding\"+n]=e;return t&&(i.opacity=i.width=e),i}function vt(e,t,n){for(var r,i=(yt.tweeners[t]||[]).concat(yt.tweeners[\"*\"]),o=0,a=i.length;o<a;o++)if(r=i[o].call(n,t,e))return r}function yt(o,e,t){var n,a,r=0,i=yt.prefilters.length,s=ce.Deferred().always(function(){delete u.elem}),u=function(){if(a)return!1;for(var e=st||ht(),t=Math.max(0,l.startTime+l.duration-e),n=1-(t/l.duration||0),r=0,i=l.tweens.length;r<i;r++)l.tweens[r].run(n);return s.notifyWith(o,[l,n,t]),n<1&&i?t:(i||s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l]),!1)},l=s.promise({elem:o,props:ce.extend({},e),opts:ce.extend(!0,{specialEasing:{},easing:ce.easing._default},t),originalProperties:e,originalOptions:t,startTime:st||ht(),duration:t.duration,tweens:[],createTween:function(e,t){var n=ce.Tween(o,l.opts,e,t,l.opts.specialEasing[e]||l.opts.easing);return l.tweens.push(n),n},stop:function(e){var t=0,n=e?l.tweens.length:0;if(a)return this;for(a=!0;t<n;t++)l.tweens[t].run(1);return e?(s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l,e])):s.rejectWith(o,[l,e]),this}}),c=l.props;for(!function(e,t){var n,r,i,o,a;for(n in e)if(i=t[r=F(n)],o=e[n],Array.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),(a=ce.cssHooks[r])&&\"expand\"in a)for(n in o=a.expand(o),delete e[r],o)n in e||(e[n]=o[n],t[n]=i);else t[r]=i}(c,l.opts.specialEasing);r<i;r++)if(n=yt.prefilters[r].call(l,o,c,l.opts))return v(n.stop)&&(ce._queueHooks(l.elem,l.opts.queue).stop=n.stop.bind(n)),n;return ce.map(c,vt,l),v(l.opts.start)&&l.opts.start.call(o,l),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always),ce.fx.timer(ce.extend(u,{elem:o,anim:l,queue:l.opts.queue})),l}ce.Animation=ce.extend(yt,{tweeners:{\"*\":[function(e,t){var n=this.createTween(e,t);return te(n.elem,e,Y.exec(t),n),n}]},tweener:function(e,t){v(e)?(t=e,e=[\"*\"]):e=e.match(D);for(var n,r=0,i=e.length;r<i;r++)n=e[r],yt.tweeners[n]=yt.tweeners[n]||[],yt.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var r,i,o,a,s,u,l,c,f=\"width\"in t||\"height\"in t,p=this,d={},h=e.style,g=e.nodeType&&ee(e),v=_.get(e,\"fxshow\");for(r in n.queue||(null==(a=ce._queueHooks(e,\"fx\")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,p.always(function(){p.always(function(){a.unqueued--,ce.queue(e,\"fx\").length||a.empty.fire()})})),t)if(i=t[r],ft.test(i)){if(delete t[r],o=o||\"toggle\"===i,i===(g?\"hide\":\"show\")){if(\"show\"!==i||!v||void 0===v[r])continue;g=!0}d[r]=v&&v[r]||ce.style(e,r)}if((u=!ce.isEmptyObject(t))||!ce.isEmptyObject(d))for(r in f&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],null==(l=v&&v.display)&&(l=_.get(e,\"display\")),\"none\"===(c=ce.css(e,\"display\"))&&(l?c=l:(re([e],!0),l=e.style.display||l,c=ce.css(e,\"display\"),re([e]))),(\"inline\"===c||\"inline-block\"===c&&null!=l)&&\"none\"===ce.css(e,\"float\")&&(u||(p.done(function(){h.display=l}),null==l&&(c=h.display,l=\"none\"===c?\"\":c)),h.display=\"inline-block\")),n.overflow&&(h.overflow=\"hidden\",p.always(function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]})),u=!1,d)u||(v?\"hidden\"in v&&(g=v.hidden):v=_.access(e,\"fxshow\",{display:l}),o&&(v.hidden=!g),g&&re([e],!0),p.done(function(){for(r in g||re([e]),_.remove(e,\"fxshow\"),d)ce.style(e,r,d[r])})),u=vt(g?v[r]:0,r,p),r in v||(v[r]=u.start,g&&(u.end=u.start,u.start=0))}],prefilter:function(e,t){t?yt.prefilters.unshift(e):yt.prefilters.push(e)}}),ce.speed=function(e,t,n){var r=e&&\"object\"==typeof e?ce.extend({},e):{complete:n||!n&&t||v(e)&&e,duration:e,easing:n&&t||t&&!v(t)&&t};return ce.fx.off?r.duration=0:\"number\"!=typeof r.duration&&(r.duration in ce.fx.speeds?r.duration=ce.fx.speeds[r.duration]:r.duration=ce.fx.speeds._default),null!=r.queue&&!0!==r.queue||(r.queue=\"fx\"),r.old=r.complete,r.complete=function(){v(r.old)&&r.old.call(this),r.queue&&ce.dequeue(this,r.queue)},r},ce.fn.extend({fadeTo:function(e,t,n,r){return this.filter(ee).css(\"opacity\",0).show().end().animate({opacity:t},e,n,r)},animate:function(t,e,n,r){var i=ce.isEmptyObject(t),o=ce.speed(e,n,r),a=function(){var e=yt(this,ce.extend({},t),o);(i||_.get(this,\"finish\"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(i,e,o){var a=function(e){var t=e.stop;delete e.stop,t(o)};return\"string\"!=typeof i&&(o=e,e=i,i=void 0),e&&this.queue(i||\"fx\",[]),this.each(function(){var e=!0,t=null!=i&&i+\"queueHooks\",n=ce.timers,r=_.get(this);if(t)r[t]&&r[t].stop&&a(r[t]);else for(t in r)r[t]&&r[t].stop&&pt.test(t)&&a(r[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(o),e=!1,n.splice(t,1));!e&&o||ce.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||\"fx\"),this.each(function(){var e,t=_.get(this),n=t[a+\"queue\"],r=t[a+\"queueHooks\"],i=ce.timers,o=n?n.length:0;for(t.finish=!0,ce.queue(this,a,[]),r&&r.stop&&r.stop.call(this,!0),e=i.length;e--;)i[e].elem===this&&i[e].queue===a&&(i[e].anim.stop(!0),i.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),ce.each([\"toggle\",\"show\",\"hide\"],function(e,r){var i=ce.fn[r];ce.fn[r]=function(e,t,n){return null==e||\"boolean\"==typeof e?i.apply(this,arguments):this.animate(gt(r,!0),e,t,n)}}),ce.each({slideDown:gt(\"show\"),slideUp:gt(\"hide\"),slideToggle:gt(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(e,r){ce.fn[e]=function(e,t,n){return this.animate(r,e,t,n)}}),ce.timers=[],ce.fx.tick=function(){var e,t=0,n=ce.timers;for(st=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||ce.fx.stop(),st=void 0},ce.fx.timer=function(e){ce.timers.push(e),ce.fx.start()},ce.fx.interval=13,ce.fx.start=function(){ut||(ut=!0,dt())},ce.fx.stop=function(){ut=null},ce.fx.speeds={slow:600,fast:200,_default:400},ce.fn.delay=function(r,e){return r=ce.fx&&ce.fx.speeds[r]||r,e=e||\"fx\",this.queue(e,function(e,t){var n=ie.setTimeout(e,r);t.stop=function(){ie.clearTimeout(n)}})},lt=C.createElement(\"input\"),ct=C.createElement(\"select\").appendChild(C.createElement(\"option\")),lt.type=\"checkbox\",le.checkOn=\"\"!==lt.value,le.optSelected=ct.selected,(lt=C.createElement(\"input\")).value=\"t\",lt.type=\"radio\",le.radioValue=\"t\"===lt.value;var mt,xt=ce.expr.attrHandle;ce.fn.extend({attr:function(e,t){return M(this,ce.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){ce.removeAttr(this,e)})}}),ce.extend({attr:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return\"undefined\"==typeof e.getAttribute?ce.prop(e,t,n):(1===o&&ce.isXMLDoc(e)||(i=ce.attrHooks[t.toLowerCase()]||(ce.expr.match.bool.test(t)?mt:void 0)),void 0!==n?null===n?void ce.removeAttr(e,t):i&&\"set\"in i&&void 0!==(r=i.set(e,n,t))?r:(e.setAttribute(t,n+\"\"),n):i&&\"get\"in i&&null!==(r=i.get(e,t))?r:null==(r=ce.find.attr(e,t))?void 0:r)},attrHooks:{type:{set:function(e,t){if(!le.radioValue&&\"radio\"===t&&fe(e,\"input\")){var n=e.value;return e.setAttribute(\"type\",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,r=0,i=t&&t.match(D);if(i&&1===e.nodeType)while(n=i[r++])e.removeAttribute(n)}}),mt={set:function(e,t,n){return!1===t?ce.removeAttr(e,n):e.setAttribute(n,n),n}},ce.each(ce.expr.match.bool.source.match(/\\w+/g),function(e,t){var a=xt[t]||ce.find.attr;xt[t]=function(e,t,n){var r,i,o=t.toLowerCase();return n||(i=xt[o],xt[o]=r,r=null!=a(e,t,n)?o:null,xt[o]=i),r}});var bt=/^(?:input|select|textarea|button)$/i,wt=/^(?:a|area)$/i;function Tt(e){return(e.match(D)||[]).join(\" \")}function Ct(e){return e.getAttribute&&e.getAttribute(\"class\")||\"\"}function kt(e){return Array.isArray(e)?e:\"string\"==typeof e&&e.match(D)||[]}ce.fn.extend({prop:function(e,t){return M(this,ce.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[ce.propFix[e]||e]})}}),ce.extend({prop:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&ce.isXMLDoc(e)||(t=ce.propFix[t]||t,i=ce.propHooks[t]),void 0!==n?i&&\"set\"in i&&void 0!==(r=i.set(e,n,t))?r:e[t]=n:i&&\"get\"in i&&null!==(r=i.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){var t=ce.find.attr(e,\"tabindex\");return t?parseInt(t,10):bt.test(e.nodeName)||wt.test(e.nodeName)&&e.href?0:-1}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"}}),le.optSelected||(ce.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),ce.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){ce.propFix[this.toLowerCase()]=this}),ce.fn.extend({addClass:function(t){var e,n,r,i,o,a;return v(t)?this.each(function(e){ce(this).addClass(t.call(this,e,Ct(this)))}):(e=kt(t)).length?this.each(function(){if(r=Ct(this),n=1===this.nodeType&&\" \"+Tt(r)+\" \"){for(o=0;o<e.length;o++)i=e[o],n.indexOf(\" \"+i+\" \")<0&&(n+=i+\" \");a=Tt(n),r!==a&&this.setAttribute(\"class\",a)}}):this},removeClass:function(t){var e,n,r,i,o,a;return v(t)?this.each(function(e){ce(this).removeClass(t.call(this,e,Ct(this)))}):arguments.length?(e=kt(t)).length?this.each(function(){if(r=Ct(this),n=1===this.nodeType&&\" \"+Tt(r)+\" \"){for(o=0;o<e.length;o++){i=e[o];while(-1<n.indexOf(\" \"+i+\" \"))n=n.replace(\" \"+i+\" \",\" \")}a=Tt(n),r!==a&&this.setAttribute(\"class\",a)}}):this:this.attr(\"class\",\"\")},toggleClass:function(t,n){var e,r,i,o,a=typeof t,s=\"string\"===a||Array.isArray(t);return v(t)?this.each(function(e){ce(this).toggleClass(t.call(this,e,Ct(this),n),n)}):\"boolean\"==typeof n&&s?n?this.addClass(t):this.removeClass(t):(e=kt(t),this.each(function(){if(s)for(o=ce(this),i=0;i<e.length;i++)r=e[i],o.hasClass(r)?o.removeClass(r):o.addClass(r);else void 0!==t&&\"boolean\"!==a||((r=Ct(this))&&_.set(this,\"__className__\",r),this.setAttribute&&this.setAttribute(\"class\",r||!1===t?\"\":_.get(this,\"__className__\")||\"\"))}))},hasClass:function(e){var t,n,r=0;t=\" \"+e+\" \";while(n=this[r++])if(1===n.nodeType&&-1<(\" \"+Tt(Ct(n))+\" \").indexOf(t))return!0;return!1}});var St=/\\r/g;ce.fn.extend({val:function(n){var r,e,i,t=this[0];return arguments.length?(i=v(n),this.each(function(e){var t;1===this.nodeType&&(null==(t=i?n.call(this,e,ce(this).val()):n)?t=\"\":\"number\"==typeof t?t+=\"\":Array.isArray(t)&&(t=ce.map(t,function(e){return null==e?\"\":e+\"\"})),(r=ce.valHooks[this.type]||ce.valHooks[this.nodeName.toLowerCase()])&&\"set\"in r&&void 0!==r.set(this,t,\"value\")||(this.value=t))})):t?(r=ce.valHooks[t.type]||ce.valHooks[t.nodeName.toLowerCase()])&&\"get\"in r&&void 0!==(e=r.get(t,\"value\"))?e:\"string\"==typeof(e=t.value)?e.replace(St,\"\"):null==e?\"\":e:void 0}}),ce.extend({valHooks:{option:{get:function(e){var t=ce.find.attr(e,\"value\");return null!=t?t:Tt(ce.text(e))}},select:{get:function(e){var t,n,r,i=e.options,o=e.selectedIndex,a=\"select-one\"===e.type,s=a?null:[],u=a?o+1:i.length;for(r=o<0?u:a?o:0;r<u;r++)if(((n=i[r]).selected||r===o)&&!n.disabled&&(!n.parentNode.disabled||!fe(n.parentNode,\"optgroup\"))){if(t=ce(n).val(),a)return t;s.push(t)}return s},set:function(e,t){var n,r,i=e.options,o=ce.makeArray(t),a=i.length;while(a--)((r=i[a]).selected=-1<ce.inArray(ce.valHooks.option.get(r),o))&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),ce.each([\"radio\",\"checkbox\"],function(){ce.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<ce.inArray(ce(e).val(),t)}},le.checkOn||(ce.valHooks[this].get=function(e){return null===e.getAttribute(\"value\")?\"on\":e.value})});var Et=ie.location,jt={guid:Date.now()},At=/\\?/;ce.parseXML=function(e){var t,n;if(!e||\"string\"!=typeof e)return null;try{t=(new ie.DOMParser).parseFromString(e,\"text/xml\")}catch(e){}return n=t&&t.getElementsByTagName(\"parsererror\")[0],t&&!n||ce.error(\"Invalid XML: \"+(n?ce.map(n.childNodes,function(e){return e.textContent}).join(\"\\n\"):e)),t};var Dt=/^(?:focusinfocus|focusoutblur)$/,Nt=function(e){e.stopPropagation()};ce.extend(ce.event,{trigger:function(e,t,n,r){var i,o,a,s,u,l,c,f,p=[n||C],d=ue.call(e,\"type\")?e.type:e,h=ue.call(e,\"namespace\")?e.namespace.split(\".\"):[];if(o=f=a=n=n||C,3!==n.nodeType&&8!==n.nodeType&&!Dt.test(d+ce.event.triggered)&&(-1<d.indexOf(\".\")&&(d=(h=d.split(\".\")).shift(),h.sort()),u=d.indexOf(\":\")<0&&\"on\"+d,(e=e[ce.expando]?e:new ce.Event(d,\"object\"==typeof e&&e)).isTrigger=r?2:3,e.namespace=h.join(\".\"),e.rnamespace=e.namespace?new RegExp(\"(^|\\\\.)\"+h.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:ce.makeArray(t,[e]),c=ce.event.special[d]||{},r||!c.trigger||!1!==c.trigger.apply(n,t))){if(!r&&!c.noBubble&&!y(n)){for(s=c.delegateType||d,Dt.test(s+d)||(o=o.parentNode);o;o=o.parentNode)p.push(o),a=o;a===(n.ownerDocument||C)&&p.push(a.defaultView||a.parentWindow||ie)}i=0;while((o=p[i++])&&!e.isPropagationStopped())f=o,e.type=1<i?s:c.bindType||d,(l=(_.get(o,\"events\")||Object.create(null))[e.type]&&_.get(o,\"handle\"))&&l.apply(o,t),(l=u&&o[u])&&l.apply&&$(o)&&(e.result=l.apply(o,t),!1===e.result&&e.preventDefault());return e.type=d,r||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(p.pop(),t)||!$(n)||u&&v(n[d])&&!y(n)&&((a=n[u])&&(n[u]=null),ce.event.triggered=d,e.isPropagationStopped()&&f.addEventListener(d,Nt),n[d](),e.isPropagationStopped()&&f.removeEventListener(d,Nt),ce.event.triggered=void 0,a&&(n[u]=a)),e.result}},simulate:function(e,t,n){var r=ce.extend(new ce.Event,n,{type:e,isSimulated:!0});ce.event.trigger(r,null,t)}}),ce.fn.extend({trigger:function(e,t){return this.each(function(){ce.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return ce.event.trigger(e,t,n,!0)}});var qt=/\\[\\]$/,Lt=/\\r?\\n/g,Ht=/^(?:submit|button|image|reset|file)$/i,Ot=/^(?:input|select|textarea|keygen)/i;function Pt(n,e,r,i){var t;if(Array.isArray(e))ce.each(e,function(e,t){r||qt.test(n)?i(n,t):Pt(n+\"[\"+(\"object\"==typeof t&&null!=t?e:\"\")+\"]\",t,r,i)});else if(r||\"object\"!==x(e))i(n,e);else for(t in e)Pt(n+\"[\"+t+\"]\",e[t],r,i)}ce.param=function(e,t){var n,r=[],i=function(e,t){var n=v(t)?t():t;r[r.length]=encodeURIComponent(e)+\"=\"+encodeURIComponent(null==n?\"\":n)};if(null==e)return\"\";if(Array.isArray(e)||e.jquery&&!ce.isPlainObject(e))ce.each(e,function(){i(this.name,this.value)});else for(n in e)Pt(n,e[n],t,i);return r.join(\"&\")},ce.fn.extend({serialize:function(){return ce.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=ce.prop(this,\"elements\");return e?ce.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!ce(this).is(\":disabled\")&&Ot.test(this.nodeName)&&!Ht.test(e)&&(this.checked||!we.test(e))}).map(function(e,t){var n=ce(this).val();return null==n?null:Array.isArray(n)?ce.map(n,function(e){return{name:t.name,value:e.replace(Lt,\"\\r\\n\")}}):{name:t.name,value:n.replace(Lt,\"\\r\\n\")}}).get()}});var Mt=/%20/g,Rt=/#.*$/,It=/([?&])_=[^&]*/,Wt=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,Ft=/^(?:GET|HEAD)$/,$t=/^\\/\\//,Bt={},_t={},zt=\"*/\".concat(\"*\"),Xt=C.createElement(\"a\");function Ut(o){return function(e,t){\"string\"!=typeof e&&(t=e,e=\"*\");var n,r=0,i=e.toLowerCase().match(D)||[];if(v(t))while(n=i[r++])\"+\"===n[0]?(n=n.slice(1)||\"*\",(o[n]=o[n]||[]).unshift(t)):(o[n]=o[n]||[]).push(t)}}function Vt(t,i,o,a){var s={},u=t===_t;function l(e){var r;return s[e]=!0,ce.each(t[e]||[],function(e,t){var n=t(i,o,a);return\"string\"!=typeof n||u||s[n]?u?!(r=n):void 0:(i.dataTypes.unshift(n),l(n),!1)}),r}return l(i.dataTypes[0])||!s[\"*\"]&&l(\"*\")}function Gt(e,t){var n,r,i=ce.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((i[n]?e:r||(r={}))[n]=t[n]);return r&&ce.extend(!0,e,r),e}Xt.href=Et.href,ce.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Et.href,type:\"GET\",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Et.protocol),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":zt,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/\\bxml\\b/,html:/\\bhtml/,json:/\\bjson\\b/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":JSON.parse,\"text xml\":ce.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Gt(Gt(e,ce.ajaxSettings),t):Gt(ce.ajaxSettings,e)},ajaxPrefilter:Ut(Bt),ajaxTransport:Ut(_t),ajax:function(e,t){\"object\"==typeof e&&(t=e,e=void 0),t=t||{};var c,f,p,n,d,r,h,g,i,o,v=ce.ajaxSetup({},t),y=v.context||v,m=v.context&&(y.nodeType||y.jquery)?ce(y):ce.event,x=ce.Deferred(),b=ce.Callbacks(\"once memory\"),w=v.statusCode||{},a={},s={},u=\"canceled\",T={readyState:0,getResponseHeader:function(e){var t;if(h){if(!n){n={};while(t=Wt.exec(p))n[t[1].toLowerCase()+\" \"]=(n[t[1].toLowerCase()+\" \"]||[]).concat(t[2])}t=n[e.toLowerCase()+\" \"]}return null==t?null:t.join(\", \")},getAllResponseHeaders:function(){return h?p:null},setRequestHeader:function(e,t){return null==h&&(e=s[e.toLowerCase()]=s[e.toLowerCase()]||e,a[e]=t),this},overrideMimeType:function(e){return null==h&&(v.mimeType=e),this},statusCode:function(e){var t;if(e)if(h)T.always(e[T.status]);else for(t in e)w[t]=[w[t],e[t]];return this},abort:function(e){var t=e||u;return c&&c.abort(t),l(0,t),this}};if(x.promise(T),v.url=((e||v.url||Et.href)+\"\").replace($t,Et.protocol+\"//\"),v.type=t.method||t.type||v.method||v.type,v.dataTypes=(v.dataType||\"*\").toLowerCase().match(D)||[\"\"],null==v.crossDomain){r=C.createElement(\"a\");try{r.href=v.url,r.href=r.href,v.crossDomain=Xt.protocol+\"//\"+Xt.host!=r.protocol+\"//\"+r.host}catch(e){v.crossDomain=!0}}if(v.data&&v.processData&&\"string\"!=typeof v.data&&(v.data=ce.param(v.data,v.traditional)),Vt(Bt,v,t,T),h)return T;for(i in(g=ce.event&&v.global)&&0==ce.active++&&ce.event.trigger(\"ajaxStart\"),v.type=v.type.toUpperCase(),v.hasContent=!Ft.test(v.type),f=v.url.replace(Rt,\"\"),v.hasContent?v.data&&v.processData&&0===(v.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&(v.data=v.data.replace(Mt,\"+\")):(o=v.url.slice(f.length),v.data&&(v.processData||\"string\"==typeof v.data)&&(f+=(At.test(f)?\"&\":\"?\")+v.data,delete v.data),!1===v.cache&&(f=f.replace(It,\"$1\"),o=(At.test(f)?\"&\":\"?\")+\"_=\"+jt.guid+++o),v.url=f+o),v.ifModified&&(ce.lastModified[f]&&T.setRequestHeader(\"If-Modified-Since\",ce.lastModified[f]),ce.etag[f]&&T.setRequestHeader(\"If-None-Match\",ce.etag[f])),(v.data&&v.hasContent&&!1!==v.contentType||t.contentType)&&T.setRequestHeader(\"Content-Type\",v.contentType),T.setRequestHeader(\"Accept\",v.dataTypes[0]&&v.accepts[v.dataTypes[0]]?v.accepts[v.dataTypes[0]]+(\"*\"!==v.dataTypes[0]?\", \"+zt+\"; q=0.01\":\"\"):v.accepts[\"*\"]),v.headers)T.setRequestHeader(i,v.headers[i]);if(v.beforeSend&&(!1===v.beforeSend.call(y,T,v)||h))return T.abort();if(u=\"abort\",b.add(v.complete),T.done(v.success),T.fail(v.error),c=Vt(_t,v,t,T)){if(T.readyState=1,g&&m.trigger(\"ajaxSend\",[T,v]),h)return T;v.async&&0<v.timeout&&(d=ie.setTimeout(function(){T.abort(\"timeout\")},v.timeout));try{h=!1,c.send(a,l)}catch(e){if(h)throw e;l(-1,e)}}else l(-1,\"No Transport\");function l(e,t,n,r){var i,o,a,s,u,l=t;h||(h=!0,d&&ie.clearTimeout(d),c=void 0,p=r||\"\",T.readyState=0<e?4:0,i=200<=e&&e<300||304===e,n&&(s=function(e,t,n){var r,i,o,a,s=e.contents,u=e.dataTypes;while(\"*\"===u[0])u.shift(),void 0===r&&(r=e.mimeType||t.getResponseHeader(\"Content-Type\"));if(r)for(i in s)if(s[i]&&s[i].test(r)){u.unshift(i);break}if(u[0]in n)o=u[0];else{for(i in n){if(!u[0]||e.converters[i+\" \"+u[0]]){o=i;break}a||(a=i)}o=o||a}if(o)return o!==u[0]&&u.unshift(o),n[o]}(v,T,n)),!i&&-1<ce.inArray(\"script\",v.dataTypes)&&ce.inArray(\"json\",v.dataTypes)<0&&(v.converters[\"text script\"]=function(){}),s=function(e,t,n,r){var i,o,a,s,u,l={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)l[a.toLowerCase()]=e.converters[a];o=c.shift();while(o)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!u&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u=o,o=c.shift())if(\"*\"===o)o=u;else if(\"*\"!==u&&u!==o){if(!(a=l[u+\" \"+o]||l[\"* \"+o]))for(i in l)if((s=i.split(\" \"))[1]===o&&(a=l[u+\" \"+s[0]]||l[\"* \"+s[0]])){!0===a?a=l[i]:!0!==l[i]&&(o=s[0],c.unshift(s[1]));break}if(!0!==a)if(a&&e[\"throws\"])t=a(t);else try{t=a(t)}catch(e){return{state:\"parsererror\",error:a?e:\"No conversion from \"+u+\" to \"+o}}}return{state:\"success\",data:t}}(v,s,T,i),i?(v.ifModified&&((u=T.getResponseHeader(\"Last-Modified\"))&&(ce.lastModified[f]=u),(u=T.getResponseHeader(\"etag\"))&&(ce.etag[f]=u)),204===e||\"HEAD\"===v.type?l=\"nocontent\":304===e?l=\"notmodified\":(l=s.state,o=s.data,i=!(a=s.error))):(a=l,!e&&l||(l=\"error\",e<0&&(e=0))),T.status=e,T.statusText=(t||l)+\"\",i?x.resolveWith(y,[o,l,T]):x.rejectWith(y,[T,l,a]),T.statusCode(w),w=void 0,g&&m.trigger(i?\"ajaxSuccess\":\"ajaxError\",[T,v,i?o:a]),b.fireWith(y,[T,l]),g&&(m.trigger(\"ajaxComplete\",[T,v]),--ce.active||ce.event.trigger(\"ajaxStop\")))}return T},getJSON:function(e,t,n){return ce.get(e,t,n,\"json\")},getScript:function(e,t){return ce.get(e,void 0,t,\"script\")}}),ce.each([\"get\",\"post\"],function(e,i){ce[i]=function(e,t,n,r){return v(t)&&(r=r||n,n=t,t=void 0),ce.ajax(ce.extend({url:e,type:i,dataType:r,data:t,success:n},ce.isPlainObject(e)&&e))}}),ce.ajaxPrefilter(function(e){var t;for(t in e.headers)\"content-type\"===t.toLowerCase()&&(e.contentType=e.headers[t]||\"\")}),ce._evalUrl=function(e,t,n){return ce.ajax({url:e,type:\"GET\",dataType:\"script\",cache:!0,async:!1,global:!1,converters:{\"text script\":function(){}},dataFilter:function(e){ce.globalEval(e,t,n)}})},ce.fn.extend({wrapAll:function(e){var t;return this[0]&&(v(e)&&(e=e.call(this[0])),t=ce(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstElementChild)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(n){return v(n)?this.each(function(e){ce(this).wrapInner(n.call(this,e))}):this.each(function(){var e=ce(this),t=e.contents();t.length?t.wrapAll(n):e.append(n)})},wrap:function(t){var n=v(t);return this.each(function(e){ce(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not(\"body\").each(function(){ce(this).replaceWith(this.childNodes)}),this}}),ce.expr.pseudos.hidden=function(e){return!ce.expr.pseudos.visible(e)},ce.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},ce.ajaxSettings.xhr=function(){try{return new ie.XMLHttpRequest}catch(e){}};var Yt={0:200,1223:204},Qt=ce.ajaxSettings.xhr();le.cors=!!Qt&&\"withCredentials\"in Qt,le.ajax=Qt=!!Qt,ce.ajaxTransport(function(i){var o,a;if(le.cors||Qt&&!i.crossDomain)return{send:function(e,t){var n,r=i.xhr();if(r.open(i.type,i.url,i.async,i.username,i.password),i.xhrFields)for(n in i.xhrFields)r[n]=i.xhrFields[n];for(n in i.mimeType&&r.overrideMimeType&&r.overrideMimeType(i.mimeType),i.crossDomain||e[\"X-Requested-With\"]||(e[\"X-Requested-With\"]=\"XMLHttpRequest\"),e)r.setRequestHeader(n,e[n]);o=function(e){return function(){o&&(o=a=r.onload=r.onerror=r.onabort=r.ontimeout=r.onreadystatechange=null,\"abort\"===e?r.abort():\"error\"===e?\"number\"!=typeof r.status?t(0,\"error\"):t(r.status,r.statusText):t(Yt[r.status]||r.status,r.statusText,\"text\"!==(r.responseType||\"text\")||\"string\"!=typeof r.responseText?{binary:r.response}:{text:r.responseText},r.getAllResponseHeaders()))}},r.onload=o(),a=r.onerror=r.ontimeout=o(\"error\"),void 0!==r.onabort?r.onabort=a:r.onreadystatechange=function(){4===r.readyState&&ie.setTimeout(function(){o&&a()})},o=o(\"abort\");try{r.send(i.hasContent&&i.data||null)}catch(e){if(o)throw e}},abort:function(){o&&o()}}}),ce.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),ce.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/\\b(?:java|ecma)script\\b/},converters:{\"text script\":function(e){return ce.globalEval(e),e}}}),ce.ajaxPrefilter(\"script\",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type=\"GET\")}),ce.ajaxTransport(\"script\",function(n){var r,i;if(n.crossDomain||n.scriptAttrs)return{send:function(e,t){r=ce(\"<script>\").attr(n.scriptAttrs||{}).prop({charset:n.scriptCharset,src:n.url}).on(\"load error\",i=function(e){r.remove(),i=null,e&&t(\"error\"===e.type?404:200,e.type)}),C.head.appendChild(r[0])},abort:function(){i&&i()}}});var Jt,Kt=[],Zt=/(=)\\?(?=&|$)|\\?\\?/;ce.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var e=Kt.pop()||ce.expando+\"_\"+jt.guid++;return this[e]=!0,e}}),ce.ajaxPrefilter(\"json jsonp\",function(e,t,n){var r,i,o,a=!1!==e.jsonp&&(Zt.test(e.url)?\"url\":\"string\"==typeof e.data&&0===(e.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Zt.test(e.data)&&\"data\");if(a||\"jsonp\"===e.dataTypes[0])return r=e.jsonpCallback=v(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(Zt,\"$1\"+r):!1!==e.jsonp&&(e.url+=(At.test(e.url)?\"&\":\"?\")+e.jsonp+\"=\"+r),e.converters[\"script json\"]=function(){return o||ce.error(r+\" was not called\"),o[0]},e.dataTypes[0]=\"json\",i=ie[r],ie[r]=function(){o=arguments},n.always(function(){void 0===i?ce(ie).removeProp(r):ie[r]=i,e[r]&&(e.jsonpCallback=t.jsonpCallback,Kt.push(r)),o&&v(i)&&i(o[0]),o=i=void 0}),\"script\"}),le.createHTMLDocument=((Jt=C.implementation.createHTMLDocument(\"\").body).innerHTML=\"<form></form><form></form>\",2===Jt.childNodes.length),ce.parseHTML=function(e,t,n){return\"string\"!=typeof e?[]:(\"boolean\"==typeof t&&(n=t,t=!1),t||(le.createHTMLDocument?((r=(t=C.implementation.createHTMLDocument(\"\")).createElement(\"base\")).href=C.location.href,t.head.appendChild(r)):t=C),o=!n&&[],(i=w.exec(e))?[t.createElement(i[1])]:(i=Ae([e],t,o),o&&o.length&&ce(o).remove(),ce.merge([],i.childNodes)));var r,i,o},ce.fn.load=function(e,t,n){var r,i,o,a=this,s=e.indexOf(\" \");return-1<s&&(r=Tt(e.slice(s)),e=e.slice(0,s)),v(t)?(n=t,t=void 0):t&&\"object\"==typeof t&&(i=\"POST\"),0<a.length&&ce.ajax({url:e,type:i||\"GET\",dataType:\"html\",data:t}).done(function(e){o=arguments,a.html(r?ce(\"<div>\").append(ce.parseHTML(e)).find(r):e)}).always(n&&function(e,t){a.each(function(){n.apply(this,o||[e.responseText,t,e])})}),this},ce.expr.pseudos.animated=function(t){return ce.grep(ce.timers,function(e){return t===e.elem}).length},ce.offset={setOffset:function(e,t,n){var r,i,o,a,s,u,l=ce.css(e,\"position\"),c=ce(e),f={};\"static\"===l&&(e.style.position=\"relative\"),s=c.offset(),o=ce.css(e,\"top\"),u=ce.css(e,\"left\"),(\"absolute\"===l||\"fixed\"===l)&&-1<(o+u).indexOf(\"auto\")?(a=(r=c.position()).top,i=r.left):(a=parseFloat(o)||0,i=parseFloat(u)||0),v(t)&&(t=t.call(e,n,ce.extend({},s))),null!=t.top&&(f.top=t.top-s.top+a),null!=t.left&&(f.left=t.left-s.left+i),\"using\"in t?t.using.call(e,f):c.css(f)}},ce.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){ce.offset.setOffset(this,t,e)});var e,n,r=this[0];return r?r.getClientRects().length?(e=r.getBoundingClientRect(),n=r.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n,r=this[0],i={top:0,left:0};if(\"fixed\"===ce.css(r,\"position\"))t=r.getBoundingClientRect();else{t=this.offset(),n=r.ownerDocument,e=r.offsetParent||n.documentElement;while(e&&(e===n.body||e===n.documentElement)&&\"static\"===ce.css(e,\"position\"))e=e.parentNode;e&&e!==r&&1===e.nodeType&&((i=ce(e).offset()).top+=ce.css(e,\"borderTopWidth\",!0),i.left+=ce.css(e,\"borderLeftWidth\",!0))}return{top:t.top-i.top-ce.css(r,\"marginTop\",!0),left:t.left-i.left-ce.css(r,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent;while(e&&\"static\"===ce.css(e,\"position\"))e=e.offsetParent;return e||J})}}),ce.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(t,i){var o=\"pageYOffset\"===i;ce.fn[t]=function(e){return M(this,function(e,t,n){var r;if(y(e)?r=e:9===e.nodeType&&(r=e.defaultView),void 0===n)return r?r[i]:e[t];r?r.scrollTo(o?r.pageXOffset:n,o?n:r.pageYOffset):e[t]=n},t,e,arguments.length)}}),ce.each([\"top\",\"left\"],function(e,n){ce.cssHooks[n]=Ye(le.pixelPosition,function(e,t){if(t)return t=Ge(e,n),_e.test(t)?ce(e).position()[n]+\"px\":t})}),ce.each({Height:\"height\",Width:\"width\"},function(a,s){ce.each({padding:\"inner\"+a,content:s,\"\":\"outer\"+a},function(r,o){ce.fn[o]=function(e,t){var n=arguments.length&&(r||\"boolean\"!=typeof e),i=r||(!0===e||!0===t?\"margin\":\"border\");return M(this,function(e,t,n){var r;return y(e)?0===o.indexOf(\"outer\")?e[\"inner\"+a]:e.document.documentElement[\"client\"+a]:9===e.nodeType?(r=e.documentElement,Math.max(e.body[\"scroll\"+a],r[\"scroll\"+a],e.body[\"offset\"+a],r[\"offset\"+a],r[\"client\"+a])):void 0===n?ce.css(e,t,i):ce.style(e,t,n,i)},s,n?e:void 0,n)}})}),ce.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(e,t){ce.fn[t]=function(e){return this.on(t,e)}}),ce.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,\"**\"):this.off(t,e||\"**\",n)},hover:function(e,t){return this.on(\"mouseenter\",e).on(\"mouseleave\",t||e)}}),ce.each(\"blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu\".split(\" \"),function(e,n){ce.fn[n]=function(e,t){return 0<arguments.length?this.on(n,null,e,t):this.trigger(n)}});var en=/^[\\s\\uFEFF\\xA0]+|([^\\s\\uFEFF\\xA0])[\\s\\uFEFF\\xA0]+$/g;ce.proxy=function(e,t){var n,r,i;if(\"string\"==typeof t&&(n=e[t],t=e,e=n),v(e))return r=ae.call(arguments,2),(i=function(){return e.apply(t||this,r.concat(ae.call(arguments)))}).guid=e.guid=e.guid||ce.guid++,i},ce.holdReady=function(e){e?ce.readyWait++:ce.ready(!0)},ce.isArray=Array.isArray,ce.parseJSON=JSON.parse,ce.nodeName=fe,ce.isFunction=v,ce.isWindow=y,ce.camelCase=F,ce.type=x,ce.now=Date.now,ce.isNumeric=function(e){var t=ce.type(e);return(\"number\"===t||\"string\"===t)&&!isNaN(e-parseFloat(e))},ce.trim=function(e){return null==e?\"\":(e+\"\").replace(en,\"$1\")},\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return ce});var tn=ie.jQuery,nn=ie.$;return ce.noConflict=function(e){return ie.$===ce&&(ie.$=nn),e&&ie.jQuery===ce&&(ie.jQuery=tn),ce},\"undefined\"==typeof e&&(ie.jQuery=ie.$=ce),ce});\n","/**\n * simplebar - v6.3.0\n * Scrollbars, simpler.\n * https://grsmto.github.io/simplebar/\n *\n * Made by Adrien Denat from a fork by Jonathan Nicol\n * Under MIT License\n */\n\nvar SimpleBar=function(){\"use strict\";var e=function(t,i){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])},e(t,i)};var t=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{};var i=function(e){var t=typeof e;return null!=e&&(\"object\"==t||\"function\"==t)},s=\"object\"==typeof t&&t&&t.Object===Object&&t,r=\"object\"==typeof self&&self&&self.Object===Object&&self,l=s||r||Function(\"return this\")(),o=l,n=function(){return o.Date.now()},a=/\\s/;var c=function(e){for(var t=e.length;t--&&a.test(e.charAt(t)););return t},h=/^\\s+/;var u=function(e){return e?e.slice(0,c(e)+1).replace(h,\"\"):e},d=l.Symbol,p=d,v=Object.prototype,f=v.hasOwnProperty,m=v.toString,b=p?p.toStringTag:void 0;var g=function(e){var t=f.call(e,b),i=e[b];try{e[b]=void 0;var s=!0}catch(e){}var r=m.call(e);return s&&(t?e[b]=i:delete e[b]),r},x=Object.prototype.toString;var y=g,E=function(e){return x.call(e)},w=d?d.toStringTag:void 0;var O=function(e){return null==e?void 0===e?\"[object Undefined]\":\"[object Null]\":w&&w in Object(e)?y(e):E(e)},S=function(e){return null!=e&&\"object\"==typeof e};var A=u,k=i,W=function(e){return\"symbol\"==typeof e||S(e)&&\"[object Symbol]\"==O(e)},M=/^[-+]0x[0-9a-f]+$/i,N=/^0b[01]+$/i,L=/^0o[0-7]+$/i,z=parseInt;var C=i,T=n,D=function(e){if(\"number\"==typeof e)return e;if(W(e))return NaN;if(k(e)){var t=\"function\"==typeof e.valueOf?e.valueOf():e;e=k(t)?t+\"\":t}if(\"string\"!=typeof e)return 0===e?e:+e;e=A(e);var i=N.test(e);return i||L.test(e)?z(e.slice(2),i?2:8):M.test(e)?NaN:+e},R=Math.max,V=Math.min;var H=function(e,t,i){var s,r,l,o,n,a,c=0,h=!1,u=!1,d=!0;if(\"function\"!=typeof e)throw new TypeError(\"Expected a function\");function p(t){var i=s,l=r;return s=r=void 0,c=t,o=e.apply(l,i)}function v(e){return c=e,n=setTimeout(m,t),h?p(e):o}function f(e){var i=e-a;return void 0===a||i>=t||i<0||u&&e-c>=l}function m(){var e=T();if(f(e))return b(e);n=setTimeout(m,function(e){var i=t-(e-a);return u?V(i,l-(e-c)):i}(e))}function b(e){return n=void 0,d&&s?p(e):(s=r=void 0,o)}function g(){var e=T(),i=f(e);if(s=arguments,r=this,a=e,i){if(void 0===n)return v(a);if(u)return clearTimeout(n),n=setTimeout(m,t),p(a)}return void 0===n&&(n=setTimeout(m,t)),o}return t=D(t)||0,C(i)&&(h=!!i.leading,l=(u=\"maxWait\"in i)?R(D(i.maxWait)||0,t):l,d=\"trailing\"in i?!!i.trailing:d),g.cancel=function(){void 0!==n&&clearTimeout(n),c=0,s=a=r=n=void 0},g.flush=function(){return void 0===n?o:b(T())},g},j=H,B=i;var _=function(e,t,i){var s=!0,r=!0;if(\"function\"!=typeof e)throw new TypeError(\"Expected a function\");return B(i)&&(s=\"leading\"in i?!!i.leading:s,r=\"trailing\"in i?!!i.trailing:r),j(e,t,{leading:s,maxWait:t,trailing:r})},q=function(){return q=Object.assign||function(e){for(var t,i=1,s=arguments.length;i<s;i++)for(var r in t=arguments[i])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e},q.apply(this,arguments)};function P(e){return e&&e.ownerDocument&&e.ownerDocument.defaultView?e.ownerDocument.defaultView:window}function X(e){return e&&e.ownerDocument?e.ownerDocument:document}var Y=function(e){return Array.prototype.reduce.call(e,(function(e,t){var i=t.name.match(/data-simplebar-(.+)/);if(i){var s=i[1].replace(/\\W+(.)/g,(function(e,t){return t.toUpperCase()}));switch(t.value){case\"true\":e[s]=!0;break;case\"false\":e[s]=!1;break;case void 0:e[s]=!0;break;default:e[s]=t.value}}return e}),{})};function F(e,t){var i;e&&(i=e.classList).add.apply(i,t.split(\" \"))}function I(e,t){e&&t.split(\" \").forEach((function(t){e.classList.remove(t)}))}function U(e){return\".\".concat(e.split(\" \").join(\".\"))}var $=!(\"undefined\"==typeof window||!window.document||!window.document.createElement),Z=Object.freeze({__proto__:null,addClasses:F,canUseDOM:$,classNamesToQuery:U,getElementDocument:X,getElementWindow:P,getOptions:Y,removeClasses:I}),Q=null,G=null;function J(){if(null===Q){if(\"undefined\"==typeof document)return Q=0;var e=document.body,t=document.createElement(\"div\");t.classList.add(\"simplebar-hide-scrollbar\"),e.appendChild(t);var i=t.getBoundingClientRect().right;e.removeChild(t),Q=i}return Q}$&&window.addEventListener(\"resize\",(function(){G!==window.devicePixelRatio&&(G=window.devicePixelRatio,Q=null)}));var K=P,ee=X,te=Y,ie=F,se=I,re=U,le=function(){function e(t,i){void 0===i&&(i={});var s=this;if(this.removePreventClickId=null,this.minScrollbarWidth=20,this.stopScrollDelay=175,this.isScrolling=!1,this.isMouseEntering=!1,this.isDragging=!1,this.scrollXTicking=!1,this.scrollYTicking=!1,this.wrapperEl=null,this.contentWrapperEl=null,this.contentEl=null,this.offsetEl=null,this.maskEl=null,this.placeholderEl=null,this.heightAutoObserverWrapperEl=null,this.heightAutoObserverEl=null,this.rtlHelpers=null,this.scrollbarWidth=0,this.resizeObserver=null,this.mutationObserver=null,this.elStyles=null,this.isRtl=null,this.mouseX=0,this.mouseY=0,this.onMouseMove=function(){},this.onWindowResize=function(){},this.onStopScrolling=function(){},this.onMouseEntered=function(){},this.onScroll=function(){var e=K(s.el);s.scrollXTicking||(e.requestAnimationFrame(s.scrollX),s.scrollXTicking=!0),s.scrollYTicking||(e.requestAnimationFrame(s.scrollY),s.scrollYTicking=!0),s.isScrolling||(s.isScrolling=!0,ie(s.el,s.classNames.scrolling)),s.showScrollbar(\"x\"),s.showScrollbar(\"y\"),s.onStopScrolling()},this.scrollX=function(){s.axis.x.isOverflowing&&s.positionScrollbar(\"x\"),s.scrollXTicking=!1},this.scrollY=function(){s.axis.y.isOverflowing&&s.positionScrollbar(\"y\"),s.scrollYTicking=!1},this._onStopScrolling=function(){se(s.el,s.classNames.scrolling),s.options.autoHide&&(s.hideScrollbar(\"x\"),s.hideScrollbar(\"y\")),s.isScrolling=!1},this.onMouseEnter=function(){s.isMouseEntering||(ie(s.el,s.classNames.mouseEntered),s.showScrollbar(\"x\"),s.showScrollbar(\"y\"),s.isMouseEntering=!0),s.onMouseEntered()},this._onMouseEntered=function(){se(s.el,s.classNames.mouseEntered),s.options.autoHide&&(s.hideScrollbar(\"x\"),s.hideScrollbar(\"y\")),s.isMouseEntering=!1},this._onMouseMove=function(e){s.mouseX=e.clientX,s.mouseY=e.clientY,(s.axis.x.isOverflowing||s.axis.x.forceVisible)&&s.onMouseMoveForAxis(\"x\"),(s.axis.y.isOverflowing||s.axis.y.forceVisible)&&s.onMouseMoveForAxis(\"y\")},this.onMouseLeave=function(){s.onMouseMove.cancel(),(s.axis.x.isOverflowing||s.axis.x.forceVisible)&&s.onMouseLeaveForAxis(\"x\"),(s.axis.y.isOverflowing||s.axis.y.forceVisible)&&s.onMouseLeaveForAxis(\"y\"),s.mouseX=-1,s.mouseY=-1},this._onWindowResize=function(){s.scrollbarWidth=s.getScrollbarWidth(),s.hideNativeScrollbar()},this.onPointerEvent=function(e){var t,i;s.axis.x.track.el&&s.axis.y.track.el&&s.axis.x.scrollbar.el&&s.axis.y.scrollbar.el&&(s.axis.x.track.rect=s.axis.x.track.el.getBoundingClientRect(),s.axis.y.track.rect=s.axis.y.track.el.getBoundingClientRect(),(s.axis.x.isOverflowing||s.axis.x.forceVisible)&&(t=s.isWithinBounds(s.axis.x.track.rect)),(s.axis.y.isOverflowing||s.axis.y.forceVisible)&&(i=s.isWithinBounds(s.axis.y.track.rect)),(t||i)&&(e.stopPropagation(),\"pointerdown\"===e.type&&\"touch\"!==e.pointerType&&(t&&(s.axis.x.scrollbar.rect=s.axis.x.scrollbar.el.getBoundingClientRect(),s.isWithinBounds(s.axis.x.scrollbar.rect)?s.onDragStart(e,\"x\"):s.onTrackClick(e,\"x\")),i&&(s.axis.y.scrollbar.rect=s.axis.y.scrollbar.el.getBoundingClientRect(),s.isWithinBounds(s.axis.y.scrollbar.rect)?s.onDragStart(e,\"y\"):s.onTrackClick(e,\"y\")))))},this.drag=function(t){var i,r,l,o,n,a,c,h,u,d,p;if(s.draggedAxis&&s.contentWrapperEl){var v=s.axis[s.draggedAxis].track,f=null!==(r=null===(i=v.rect)||void 0===i?void 0:i[s.axis[s.draggedAxis].sizeAttr])&&void 0!==r?r:0,m=s.axis[s.draggedAxis].scrollbar,b=null!==(o=null===(l=s.contentWrapperEl)||void 0===l?void 0:l[s.axis[s.draggedAxis].scrollSizeAttr])&&void 0!==o?o:0,g=parseInt(null!==(a=null===(n=s.elStyles)||void 0===n?void 0:n[s.axis[s.draggedAxis].sizeAttr])&&void 0!==a?a:\"0px\",10);t.preventDefault(),t.stopPropagation();var x=(\"y\"===s.draggedAxis?t.pageY:t.pageX)-(null!==(h=null===(c=v.rect)||void 0===c?void 0:c[s.axis[s.draggedAxis].offsetAttr])&&void 0!==h?h:0)-s.axis[s.draggedAxis].dragOffset,y=(x=\"x\"===s.draggedAxis&&s.isRtl?(null!==(d=null===(u=v.rect)||void 0===u?void 0:u[s.axis[s.draggedAxis].sizeAttr])&&void 0!==d?d:0)-m.size-x:x)/(f-m.size)*(b-g);\"x\"===s.draggedAxis&&s.isRtl&&(y=(null===(p=e.getRtlHelpers())||void 0===p?void 0:p.isScrollingToNegative)?-y:y),s.contentWrapperEl[s.axis[s.draggedAxis].scrollOffsetAttr]=y}},this.onEndDrag=function(e){s.isDragging=!1;var t=ee(s.el),i=K(s.el);e.preventDefault(),e.stopPropagation(),se(s.el,s.classNames.dragging),s.onStopScrolling(),t.removeEventListener(\"mousemove\",s.drag,!0),t.removeEventListener(\"mouseup\",s.onEndDrag,!0),s.removePreventClickId=i.setTimeout((function(){t.removeEventListener(\"click\",s.preventClick,!0),t.removeEventListener(\"dblclick\",s.preventClick,!0),s.removePreventClickId=null}))},this.preventClick=function(e){e.preventDefault(),e.stopPropagation()},this.el=t,this.options=q(q({},e.defaultOptions),i),this.classNames=q(q({},e.defaultOptions.classNames),i.classNames),this.axis={x:{scrollOffsetAttr:\"scrollLeft\",sizeAttr:\"width\",scrollSizeAttr:\"scrollWidth\",offsetSizeAttr:\"offsetWidth\",offsetAttr:\"left\",overflowAttr:\"overflowX\",dragOffset:0,isOverflowing:!0,forceVisible:!1,track:{size:null,el:null,rect:null,isVisible:!1},scrollbar:{size:null,el:null,rect:null,isVisible:!1}},y:{scrollOffsetAttr:\"scrollTop\",sizeAttr:\"height\",scrollSizeAttr:\"scrollHeight\",offsetSizeAttr:\"offsetHeight\",offsetAttr:\"top\",overflowAttr:\"overflowY\",dragOffset:0,isOverflowing:!0,forceVisible:!1,track:{size:null,el:null,rect:null,isVisible:!1},scrollbar:{size:null,el:null,rect:null,isVisible:!1}}},\"object\"!=typeof this.el||!this.el.nodeName)throw new Error(\"Argument passed to SimpleBar must be an HTML element instead of \".concat(this.el));this.onMouseMove=_(this._onMouseMove,64),this.onWindowResize=H(this._onWindowResize,64,{leading:!0}),this.onStopScrolling=H(this._onStopScrolling,this.stopScrollDelay),this.onMouseEntered=H(this._onMouseEntered,this.stopScrollDelay),this.init()}return e.getRtlHelpers=function(){if(e.rtlHelpers)return e.rtlHelpers;var t=document.createElement(\"div\");t.innerHTML='<div class=\"simplebar-dummy-scrollbar-size\"><div></div></div>';var i=t.firstElementChild,s=null==i?void 0:i.firstElementChild;if(!s)return null;document.body.appendChild(i),i.scrollLeft=0;var r=e.getOffset(i),l=e.getOffset(s);i.scrollLeft=-999;var o=e.getOffset(s);return document.body.removeChild(i),e.rtlHelpers={isScrollOriginAtZero:r.left!==l.left,isScrollingToNegative:l.left!==o.left},e.rtlHelpers},e.prototype.getScrollbarWidth=function(){try{return this.contentWrapperEl&&\"none\"===getComputedStyle(this.contentWrapperEl,\"::-webkit-scrollbar\").display||\"scrollbarWidth\"in document.documentElement.style||\"-ms-overflow-style\"in document.documentElement.style?0:J()}catch(e){return J()}},e.getOffset=function(e){var t=e.getBoundingClientRect(),i=ee(e),s=K(e);return{top:t.top+(s.pageYOffset||i.documentElement.scrollTop),left:t.left+(s.pageXOffset||i.documentElement.scrollLeft)}},e.prototype.init=function(){$&&(this.initDOM(),this.rtlHelpers=e.getRtlHelpers(),this.scrollbarWidth=this.getScrollbarWidth(),this.recalculate(),this.initListeners())},e.prototype.initDOM=function(){var e,t;this.wrapperEl=this.el.querySelector(re(this.classNames.wrapper)),this.contentWrapperEl=this.options.scrollableNode||this.el.querySelector(re(this.classNames.contentWrapper)),this.contentEl=this.options.contentNode||this.el.querySelector(re(this.classNames.contentEl)),this.offsetEl=this.el.querySelector(re(this.classNames.offset)),this.maskEl=this.el.querySelector(re(this.classNames.mask)),this.placeholderEl=this.findChild(this.wrapperEl,re(this.classNames.placeholder)),this.heightAutoObserverWrapperEl=this.el.querySelector(re(this.classNames.heightAutoObserverWrapperEl)),this.heightAutoObserverEl=this.el.querySelector(re(this.classNames.heightAutoObserverEl)),this.axis.x.track.el=this.findChild(this.el,\"\".concat(re(this.classNames.track)).concat(re(this.classNames.horizontal))),this.axis.y.track.el=this.findChild(this.el,\"\".concat(re(this.classNames.track)).concat(re(this.classNames.vertical))),this.axis.x.scrollbar.el=(null===(e=this.axis.x.track.el)||void 0===e?void 0:e.querySelector(re(this.classNames.scrollbar)))||null,this.axis.y.scrollbar.el=(null===(t=this.axis.y.track.el)||void 0===t?void 0:t.querySelector(re(this.classNames.scrollbar)))||null,this.options.autoHide||(ie(this.axis.x.scrollbar.el,this.classNames.visible),ie(this.axis.y.scrollbar.el,this.classNames.visible))},e.prototype.initListeners=function(){var e,t=this,i=K(this.el);if(this.el.addEventListener(\"mouseenter\",this.onMouseEnter),this.el.addEventListener(\"pointerdown\",this.onPointerEvent,!0),this.el.addEventListener(\"mousemove\",this.onMouseMove),this.el.addEventListener(\"mouseleave\",this.onMouseLeave),null===(e=this.contentWrapperEl)||void 0===e||e.addEventListener(\"scroll\",this.onScroll),i.addEventListener(\"resize\",this.onWindowResize),this.contentEl){if(window.ResizeObserver){var s=!1,r=i.ResizeObserver||ResizeObserver;this.resizeObserver=new r((function(){s&&i.requestAnimationFrame((function(){t.recalculate()}))})),this.resizeObserver.observe(this.el),this.resizeObserver.observe(this.contentEl),i.requestAnimationFrame((function(){s=!0}))}this.mutationObserver=new i.MutationObserver((function(){i.requestAnimationFrame((function(){t.recalculate()}))})),this.mutationObserver.observe(this.contentEl,{childList:!0,subtree:!0,characterData:!0})}},e.prototype.recalculate=function(){if(this.heightAutoObserverEl&&this.contentEl&&this.contentWrapperEl&&this.wrapperEl&&this.placeholderEl){var e=K(this.el);this.elStyles=e.getComputedStyle(this.el),this.isRtl=\"rtl\"===this.elStyles.direction;var t=this.contentEl.offsetWidth,i=this.heightAutoObserverEl.offsetHeight<=1,s=this.heightAutoObserverEl.offsetWidth<=1||t>0,r=this.contentWrapperEl.offsetWidth,l=this.elStyles.overflowX,o=this.elStyles.overflowY;this.contentEl.style.padding=\"\".concat(this.elStyles.paddingTop,\" \").concat(this.elStyles.paddingRight,\" \").concat(this.elStyles.paddingBottom,\" \").concat(this.elStyles.paddingLeft),this.wrapperEl.style.margin=\"-\".concat(this.elStyles.paddingTop,\" -\").concat(this.elStyles.paddingRight,\" -\").concat(this.elStyles.paddingBottom,\" -\").concat(this.elStyles.paddingLeft);var n=this.contentEl.scrollHeight,a=this.contentEl.scrollWidth;this.contentWrapperEl.style.height=i?\"auto\":\"100%\",this.placeholderEl.style.width=s?\"\".concat(t||a,\"px\"):\"auto\",this.placeholderEl.style.height=\"\".concat(n,\"px\");var c=this.contentWrapperEl.offsetHeight;this.axis.x.isOverflowing=0!==t&&a>t,this.axis.y.isOverflowing=n>c,this.axis.x.isOverflowing=\"hidden\"!==l&&this.axis.x.isOverflowing,this.axis.y.isOverflowing=\"hidden\"!==o&&this.axis.y.isOverflowing,this.axis.x.forceVisible=\"x\"===this.options.forceVisible||!0===this.options.forceVisible,this.axis.y.forceVisible=\"y\"===this.options.forceVisible||!0===this.options.forceVisible,this.hideNativeScrollbar();var h=this.axis.x.isOverflowing?this.scrollbarWidth:0,u=this.axis.y.isOverflowing?this.scrollbarWidth:0;this.axis.x.isOverflowing=this.axis.x.isOverflowing&&a>r-u,this.axis.y.isOverflowing=this.axis.y.isOverflowing&&n>c-h,this.axis.x.scrollbar.size=this.getScrollbarSize(\"x\"),this.axis.y.scrollbar.size=this.getScrollbarSize(\"y\"),this.axis.x.scrollbar.el&&(this.axis.x.scrollbar.el.style.width=\"\".concat(this.axis.x.scrollbar.size,\"px\")),this.axis.y.scrollbar.el&&(this.axis.y.scrollbar.el.style.height=\"\".concat(this.axis.y.scrollbar.size,\"px\")),this.positionScrollbar(\"x\"),this.positionScrollbar(\"y\"),this.toggleTrackVisibility(\"x\"),this.toggleTrackVisibility(\"y\")}},e.prototype.getScrollbarSize=function(e){var t,i;if(void 0===e&&(e=\"y\"),!this.axis[e].isOverflowing||!this.contentEl)return 0;var s,r=this.contentEl[this.axis[e].scrollSizeAttr],l=null!==(i=null===(t=this.axis[e].track.el)||void 0===t?void 0:t[this.axis[e].offsetSizeAttr])&&void 0!==i?i:0,o=l/r;return s=Math.max(~~(o*l),this.options.scrollbarMinSize),this.options.scrollbarMaxSize&&(s=Math.min(s,this.options.scrollbarMaxSize)),s},e.prototype.positionScrollbar=function(t){var i,s,r;void 0===t&&(t=\"y\");var l=this.axis[t].scrollbar;if(this.axis[t].isOverflowing&&this.contentWrapperEl&&l.el&&this.elStyles){var o=this.contentWrapperEl[this.axis[t].scrollSizeAttr],n=(null===(i=this.axis[t].track.el)||void 0===i?void 0:i[this.axis[t].offsetSizeAttr])||0,a=parseInt(this.elStyles[this.axis[t].sizeAttr],10),c=this.contentWrapperEl[this.axis[t].scrollOffsetAttr];c=\"x\"===t&&this.isRtl&&(null===(s=e.getRtlHelpers())||void 0===s?void 0:s.isScrollOriginAtZero)?-c:c,\"x\"===t&&this.isRtl&&(c=(null===(r=e.getRtlHelpers())||void 0===r?void 0:r.isScrollingToNegative)?c:-c);var h=c/(o-a),u=~~((n-l.size)*h);u=\"x\"===t&&this.isRtl?-u+(n-l.size):u,l.el.style.transform=\"x\"===t?\"translate3d(\".concat(u,\"px, 0, 0)\"):\"translate3d(0, \".concat(u,\"px, 0)\")}},e.prototype.toggleTrackVisibility=function(e){void 0===e&&(e=\"y\");var t=this.axis[e].track.el,i=this.axis[e].scrollbar.el;t&&i&&this.contentWrapperEl&&(this.axis[e].isOverflowing||this.axis[e].forceVisible?(t.style.visibility=\"visible\",this.contentWrapperEl.style[this.axis[e].overflowAttr]=\"scroll\",this.el.classList.add(\"\".concat(this.classNames.scrollable,\"-\").concat(e))):(t.style.visibility=\"hidden\",this.contentWrapperEl.style[this.axis[e].overflowAttr]=\"hidden\",this.el.classList.remove(\"\".concat(this.classNames.scrollable,\"-\").concat(e))),this.axis[e].isOverflowing?i.style.display=\"block\":i.style.display=\"none\")},e.prototype.showScrollbar=function(e){void 0===e&&(e=\"y\"),this.axis[e].isOverflowing&&!this.axis[e].scrollbar.isVisible&&(ie(this.axis[e].scrollbar.el,this.classNames.visible),this.axis[e].scrollbar.isVisible=!0)},e.prototype.hideScrollbar=function(e){void 0===e&&(e=\"y\"),this.isDragging||this.axis[e].isOverflowing&&this.axis[e].scrollbar.isVisible&&(se(this.axis[e].scrollbar.el,this.classNames.visible),this.axis[e].scrollbar.isVisible=!1)},e.prototype.hideNativeScrollbar=function(){this.offsetEl&&(this.offsetEl.style[this.isRtl?\"left\":\"right\"]=this.axis.y.isOverflowing||this.axis.y.forceVisible?\"-\".concat(this.scrollbarWidth,\"px\"):\"0px\",this.offsetEl.style.bottom=this.axis.x.isOverflowing||this.axis.x.forceVisible?\"-\".concat(this.scrollbarWidth,\"px\"):\"0px\")},e.prototype.onMouseMoveForAxis=function(e){void 0===e&&(e=\"y\");var t=this.axis[e];t.track.el&&t.scrollbar.el&&(t.track.rect=t.track.el.getBoundingClientRect(),t.scrollbar.rect=t.scrollbar.el.getBoundingClientRect(),this.isWithinBounds(t.track.rect)?(this.showScrollbar(e),ie(t.track.el,this.classNames.hover),this.isWithinBounds(t.scrollbar.rect)?ie(t.scrollbar.el,this.classNames.hover):se(t.scrollbar.el,this.classNames.hover)):(se(t.track.el,this.classNames.hover),this.options.autoHide&&this.hideScrollbar(e)))},e.prototype.onMouseLeaveForAxis=function(e){void 0===e&&(e=\"y\"),se(this.axis[e].track.el,this.classNames.hover),se(this.axis[e].scrollbar.el,this.classNames.hover),this.options.autoHide&&this.hideScrollbar(e)},e.prototype.onDragStart=function(e,t){var i;void 0===t&&(t=\"y\"),this.isDragging=!0;var s=ee(this.el),r=K(this.el),l=this.axis[t].scrollbar,o=\"y\"===t?e.pageY:e.pageX;this.axis[t].dragOffset=o-((null===(i=l.rect)||void 0===i?void 0:i[this.axis[t].offsetAttr])||0),this.draggedAxis=t,ie(this.el,this.classNames.dragging),s.addEventListener(\"mousemove\",this.drag,!0),s.addEventListener(\"mouseup\",this.onEndDrag,!0),null===this.removePreventClickId?(s.addEventListener(\"click\",this.preventClick,!0),s.addEventListener(\"dblclick\",this.preventClick,!0)):(r.clearTimeout(this.removePreventClickId),this.removePreventClickId=null)},e.prototype.onTrackClick=function(e,t){var i,s,r,l,o=this;void 0===t&&(t=\"y\");var n=this.axis[t];if(this.options.clickOnTrack&&n.scrollbar.el&&this.contentWrapperEl){e.preventDefault();var a=K(this.el);this.axis[t].scrollbar.rect=n.scrollbar.el.getBoundingClientRect();var c=null!==(s=null===(i=this.axis[t].scrollbar.rect)||void 0===i?void 0:i[this.axis[t].offsetAttr])&&void 0!==s?s:0,h=parseInt(null!==(l=null===(r=this.elStyles)||void 0===r?void 0:r[this.axis[t].sizeAttr])&&void 0!==l?l:\"0px\",10),u=this.contentWrapperEl[this.axis[t].scrollOffsetAttr],d=(\"y\"===t?this.mouseY-c:this.mouseX-c)<0?-1:1,p=-1===d?u-h:u+h,v=function(){o.contentWrapperEl&&(-1===d?u>p&&(u-=40,o.contentWrapperEl[o.axis[t].scrollOffsetAttr]=u,a.requestAnimationFrame(v)):u<p&&(u+=40,o.contentWrapperEl[o.axis[t].scrollOffsetAttr]=u,a.requestAnimationFrame(v)))};v()}},e.prototype.getContentElement=function(){return this.contentEl},e.prototype.getScrollElement=function(){return this.contentWrapperEl},e.prototype.removeListeners=function(){var e=K(this.el);this.el.removeEventListener(\"mouseenter\",this.onMouseEnter),this.el.removeEventListener(\"pointerdown\",this.onPointerEvent,!0),this.el.removeEventListener(\"mousemove\",this.onMouseMove),this.el.removeEventListener(\"mouseleave\",this.onMouseLeave),this.contentWrapperEl&&this.contentWrapperEl.removeEventListener(\"scroll\",this.onScroll),e.removeEventListener(\"resize\",this.onWindowResize),this.mutationObserver&&this.mutationObserver.disconnect(),this.resizeObserver&&this.resizeObserver.disconnect(),this.onMouseMove.cancel(),this.onWindowResize.cancel(),this.onStopScrolling.cancel(),this.onMouseEntered.cancel()},e.prototype.unMount=function(){this.removeListeners()},e.prototype.isWithinBounds=function(e){return this.mouseX>=e.left&&this.mouseX<=e.left+e.width&&this.mouseY>=e.top&&this.mouseY<=e.top+e.height},e.prototype.findChild=function(e,t){var i=e.matches||e.webkitMatchesSelector||e.mozMatchesSelector||e.msMatchesSelector;return Array.prototype.filter.call(e.children,(function(e){return i.call(e,t)}))[0]},e.rtlHelpers=null,e.defaultOptions={forceVisible:!1,clickOnTrack:!0,scrollbarMinSize:25,scrollbarMaxSize:0,ariaLabel:\"scrollable content\",tabIndex:0,classNames:{contentEl:\"simplebar-content\",contentWrapper:\"simplebar-content-wrapper\",offset:\"simplebar-offset\",mask:\"simplebar-mask\",wrapper:\"simplebar-wrapper\",placeholder:\"simplebar-placeholder\",scrollbar:\"simplebar-scrollbar\",track:\"simplebar-track\",heightAutoObserverWrapperEl:\"simplebar-height-auto-observer-wrapper\",heightAutoObserverEl:\"simplebar-height-auto-observer\",visible:\"simplebar-visible\",horizontal:\"simplebar-horizontal\",vertical:\"simplebar-vertical\",hover:\"simplebar-hover\",dragging:\"simplebar-dragging\",scrolling:\"simplebar-scrolling\",scrollable:\"simplebar-scrollable\",mouseEntered:\"simplebar-mouse-entered\"},scrollableNode:null,contentNode:null,autoHide:!0},e.getOptions=te,e.helpers=Z,e}(),oe=le.helpers,ne=oe.getOptions,ae=oe.addClasses,ce=oe.canUseDOM,he=function(t){function i(){for(var e=[],s=0;s<arguments.length;s++)e[s]=arguments[s];var r=t.apply(this,e)||this;return i.instances.set(e[0],r),r}return function(t,i){if(\"function\"!=typeof i&&null!==i)throw new TypeError(\"Class extends value \"+String(i)+\" is not a constructor or null\");function s(){this.constructor=t}e(t,i),t.prototype=null===i?Object.create(i):(s.prototype=i.prototype,new s)}(i,t),i.initDOMLoadedElements=function(){document.removeEventListener(\"DOMContentLoaded\",this.initDOMLoadedElements),window.removeEventListener(\"load\",this.initDOMLoadedElements),Array.prototype.forEach.call(document.querySelectorAll(\"[data-simplebar]\"),(function(e){\"init\"===e.getAttribute(\"data-simplebar\")||i.instances.has(e)||new i(e,ne(e.attributes))}))},i.removeObserver=function(){var e;null===(e=i.globalObserver)||void 0===e||e.disconnect()},i.prototype.initDOM=function(){var e,t,i,s=this;if(!Array.prototype.filter.call(this.el.children,(function(e){return e.classList.contains(s.classNames.wrapper)})).length){for(this.wrapperEl=document.createElement(\"div\"),this.contentWrapperEl=document.createElement(\"div\"),this.offsetEl=document.createElement(\"div\"),this.maskEl=document.createElement(\"div\"),this.contentEl=document.createElement(\"div\"),this.placeholderEl=document.createElement(\"div\"),this.heightAutoObserverWrapperEl=document.createElement(\"div\"),this.heightAutoObserverEl=document.createElement(\"div\"),ae(this.wrapperEl,this.classNames.wrapper),ae(this.contentWrapperEl,this.classNames.contentWrapper),ae(this.offsetEl,this.classNames.offset),ae(this.maskEl,this.classNames.mask),ae(this.contentEl,this.classNames.contentEl),ae(this.placeholderEl,this.classNames.placeholder),ae(this.heightAutoObserverWrapperEl,this.classNames.heightAutoObserverWrapperEl),ae(this.heightAutoObserverEl,this.classNames.heightAutoObserverEl);this.el.firstChild;)this.contentEl.appendChild(this.el.firstChild);this.contentWrapperEl.appendChild(this.contentEl),this.offsetEl.appendChild(this.contentWrapperEl),this.maskEl.appendChild(this.offsetEl),this.heightAutoObserverWrapperEl.appendChild(this.heightAutoObserverEl),this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl),this.wrapperEl.appendChild(this.maskEl),this.wrapperEl.appendChild(this.placeholderEl),this.el.appendChild(this.wrapperEl),null===(e=this.contentWrapperEl)||void 0===e||e.setAttribute(\"tabindex\",this.options.tabIndex.toString()),null===(t=this.contentWrapperEl)||void 0===t||t.setAttribute(\"role\",\"region\"),null===(i=this.contentWrapperEl)||void 0===i||i.setAttribute(\"aria-label\",this.options.ariaLabel)}if(!this.axis.x.track.el||!this.axis.y.track.el){var r=document.createElement(\"div\"),l=document.createElement(\"div\");ae(r,this.classNames.track),ae(l,this.classNames.scrollbar),r.appendChild(l),this.axis.x.track.el=r.cloneNode(!0),ae(this.axis.x.track.el,this.classNames.horizontal),this.axis.y.track.el=r.cloneNode(!0),ae(this.axis.y.track.el,this.classNames.vertical),this.el.appendChild(this.axis.x.track.el),this.el.appendChild(this.axis.y.track.el)}le.prototype.initDOM.call(this),this.el.setAttribute(\"data-simplebar\",\"init\")},i.prototype.unMount=function(){le.prototype.unMount.call(this),i.instances.delete(this.el)},i.initHtmlApi=function(){this.initDOMLoadedElements=this.initDOMLoadedElements.bind(this),\"undefined\"!=typeof MutationObserver&&(this.globalObserver=new MutationObserver(i.handleMutations),this.globalObserver.observe(document,{childList:!0,subtree:!0})),\"complete\"===document.readyState||\"loading\"!==document.readyState&&!document.documentElement.doScroll?window.setTimeout(this.initDOMLoadedElements):(document.addEventListener(\"DOMContentLoaded\",this.initDOMLoadedElements),window.addEventListener(\"load\",this.initDOMLoadedElements))},i.handleMutations=function(e){e.forEach((function(e){e.addedNodes.forEach((function(e){1===e.nodeType&&(e.hasAttribute(\"data-simplebar\")?!i.instances.has(e)&&document.documentElement.contains(e)&&new i(e,ne(e.attributes)):e.querySelectorAll(\"[data-simplebar]\").forEach((function(e){\"init\"!==e.getAttribute(\"data-simplebar\")&&!i.instances.has(e)&&document.documentElement.contains(e)&&new i(e,ne(e.attributes))})))})),e.removedNodes.forEach((function(e){var t;1===e.nodeType&&(\"init\"===e.getAttribute(\"data-simplebar\")?!document.documentElement.contains(e)&&(null===(t=i.instances.get(e))||void 0===t||t.unMount()):Array.prototype.forEach.call(e.querySelectorAll('[data-simplebar=\"init\"]'),(function(e){var t;!document.documentElement.contains(e)&&(null===(t=i.instances.get(e))||void 0===t||t.unMount())})))}))}))},i.instances=new WeakMap,i}(le);return ce&&he.initHtmlApi(),he}();\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AutoNumeric\"] = factory();\n\telse\n\t\troot[\"AutoNumeric\"] = factory();\n})(this, () => {\nreturn ","/*!\n * Waves v0.7.6\n * http://fian.my.id/Waves\n *\n * Copyright 2014-2018 Alfiana E. Sibuea and other contributors\n * Released under the MIT license\n * https://github.com/fians/Waves/blob/master/LICENSE\n */\n\n;(function(window, factory) {\n    'use strict';\n\n    // AMD. Register as an anonymous module.  Wrap in function so we have access\n    // to root via `this`.\n    if (typeof define === 'function' && define.amd) {\n        define([], function() {\n            window.Waves = factory.call(window);\n            return window.Waves;\n        });\n    }\n\n    // Node. Does not work with strict CommonJS, but only CommonJS-like\n    // environments that support module.exports, like Node.\n    else if (typeof exports === 'object') {\n        module.exports = factory.call(window);\n    }\n\n    // Browser globals.\n    else {\n        window.Waves = factory.call(window);\n    }\n})(typeof global === 'object' ? global : this, function() {\n    'use strict';\n\n    var Waves            = Waves || {};\n    var $$               = document.querySelectorAll.bind(document);\n    var toString         = Object.prototype.toString;\n    var isTouchAvailable = 'ontouchstart' in window;\n\n\n    // Find exact position of element\n    function isWindow(obj) {\n        return obj !== null && obj === obj.window;\n    }\n\n    function getWindow(elem) {\n        return isWindow(elem) ? elem : elem.nodeType === 9 && elem.defaultView;\n    }\n\n    function isObject(value) {\n        var type = typeof value;\n        return type === 'function' || type === 'object' && !!value;\n    }\n\n    function isDOMNode(obj) {\n        return isObject(obj) && obj.nodeType > 0;\n    }\n\n    function getWavesElements(nodes) {\n        var stringRepr = toString.call(nodes);\n\n        if (stringRepr === '[object String]') {\n            return $$(nodes);\n        } else if (isObject(nodes) && /^\\[object (Array|HTMLCollection|NodeList|Object)\\]$/.test(stringRepr) && nodes.hasOwnProperty('length')) {\n            return nodes;\n        } else if (isDOMNode(nodes)) {\n            return [nodes];\n        }\n\n        return [];\n    }\n\n    function offset(elem) {\n        var docElem, win,\n            box = { top: 0, left: 0 },\n            doc = elem && elem.ownerDocument;\n\n        docElem = doc.documentElement;\n\n        if (typeof elem.getBoundingClientRect !== typeof undefined) {\n            box = elem.getBoundingClientRect();\n        }\n        win = getWindow(doc);\n        return {\n            top: box.top + win.pageYOffset - docElem.clientTop,\n            left: box.left + win.pageXOffset - docElem.clientLeft\n        };\n    }\n\n    function convertStyle(styleObj) {\n        var style = '';\n\n        for (var prop in styleObj) {\n            if (styleObj.hasOwnProperty(prop)) {\n                style += (prop + ':' + styleObj[prop] + ';');\n            }\n        }\n\n        return style;\n    }\n\n    var Effect = {\n\n        // Effect duration\n        duration: 750,\n\n        // Effect delay (check for scroll before showing effect)\n        delay: 200,\n\n        show: function(e, element, velocity) {\n\n            // Disable right click\n            if (e.button === 2) {\n                return false;\n            }\n\n            element = element || this;\n\n            // Create ripple\n            var ripple = document.createElement('div');\n            ripple.className = 'waves-ripple waves-rippling';\n            element.appendChild(ripple);\n\n            // Get click coordinate and element width\n            var pos       = offset(element);\n            var relativeY = 0;\n            var relativeX = 0;\n            // Support for touch devices\n            if('touches' in e && e.touches.length) {\n                relativeY   = (e.touches[0].pageY - pos.top);\n                relativeX   = (e.touches[0].pageX - pos.left);\n            }\n            //Normal case\n            else {\n                relativeY   = (e.pageY - pos.top);\n                relativeX   = (e.pageX - pos.left);\n            }\n            // Support for synthetic events\n            relativeX = relativeX >= 0 ? relativeX : 0;\n            relativeY = relativeY >= 0 ? relativeY : 0;\n\n            var scale     = 'scale(' + ((element.clientWidth / 100) * 3) + ')';\n            var translate = 'translate(0,0)';\n\n            if (velocity) {\n                translate = 'translate(' + (velocity.x) + 'px, ' + (velocity.y) + 'px)';\n            }\n\n            // Attach data to element\n            ripple.setAttribute('data-hold', Date.now());\n            ripple.setAttribute('data-x', relativeX);\n            ripple.setAttribute('data-y', relativeY);\n            ripple.setAttribute('data-scale', scale);\n            ripple.setAttribute('data-translate', translate);\n\n            // Set ripple position\n            var rippleStyle = {\n                top: relativeY + 'px',\n                left: relativeX + 'px'\n            };\n\n            ripple.classList.add('waves-notransition');\n            ripple.setAttribute('style', convertStyle(rippleStyle));\n            ripple.classList.remove('waves-notransition');\n\n            // Scale the ripple\n            rippleStyle['-webkit-transform'] = scale + ' ' + translate;\n            rippleStyle['-moz-transform'] = scale + ' ' + translate;\n            rippleStyle['-ms-transform'] = scale + ' ' + translate;\n            rippleStyle['-o-transform'] = scale + ' ' + translate;\n            rippleStyle.transform = scale + ' ' + translate;\n            rippleStyle.opacity = '1';\n\n            var duration = e.type === 'mousemove' ? 2500 : Effect.duration;\n            rippleStyle['-webkit-transition-duration'] = duration + 'ms';\n            rippleStyle['-moz-transition-duration']    = duration + 'ms';\n            rippleStyle['-o-transition-duration']      = duration + 'ms';\n            rippleStyle['transition-duration']         = duration + 'ms';\n\n            ripple.setAttribute('style', convertStyle(rippleStyle));\n        },\n\n        hide: function(e, element) {\n            element = element || this;\n\n            var ripples = element.getElementsByClassName('waves-rippling');\n\n            for (var i = 0, len = ripples.length; i < len; i++) {\n                removeRipple(e, element, ripples[i]);\n            }\n\n            if (isTouchAvailable) {\n                element.removeEventListener('touchend', Effect.hide);\n                element.removeEventListener('touchcancel', Effect.hide);\n            }\n\n            element.removeEventListener('mouseup', Effect.hide);\n            element.removeEventListener('mouseleave', Effect.hide);\n        }\n    };\n\n    /**\n     * Collection of wrapper for HTML element that only have single tag\n     * like <input> and <img>\n     */\n    var TagWrapper = {\n\n        // Wrap <input> tag so it can perform the effect\n        input: function(element) {\n\n            var parent = element.parentNode;\n\n            // If input already have parent just pass through\n            if (parent.tagName.toLowerCase() === 'i' && parent.classList.contains('waves-effect')) {\n                return;\n            }\n\n            // Put element class and style to the specified parent\n            var wrapper       = document.createElement('i');\n            wrapper.className = element.className + ' waves-input-wrapper';\n            element.className = 'waves-button-input';\n\n            // Put element as child\n            parent.replaceChild(wrapper, element);\n            wrapper.appendChild(element);\n\n            // Apply element color and background color to wrapper\n            var elementStyle    = window.getComputedStyle(element, null);\n            var color           = elementStyle.color;\n            var backgroundColor = elementStyle.backgroundColor;\n\n            wrapper.setAttribute('style', 'color:' + color + ';background:' + backgroundColor);\n            element.setAttribute('style', 'background-color:rgba(0,0,0,0);');\n\n        },\n\n        // Wrap <img> tag so it can perform the effect\n        img: function(element) {\n\n            var parent = element.parentNode;\n\n            // If input already have parent just pass through\n            if (parent.tagName.toLowerCase() === 'i' && parent.classList.contains('waves-effect')) {\n                return;\n            }\n\n            // Put element as child\n            var wrapper  = document.createElement('i');\n            parent.replaceChild(wrapper, element);\n            wrapper.appendChild(element);\n\n        }\n    };\n\n    /**\n     * Hide the effect and remove the ripple. Must be\n     * a separate function to pass the JSLint...\n     */\n    function removeRipple(e, el, ripple) {\n\n        // Check if the ripple still exist\n        if (!ripple) {\n            return;\n        }\n\n        ripple.classList.remove('waves-rippling');\n\n        var relativeX = ripple.getAttribute('data-x');\n        var relativeY = ripple.getAttribute('data-y');\n        var scale     = ripple.getAttribute('data-scale');\n        var translate = ripple.getAttribute('data-translate');\n\n        // Get delay beetween mousedown and mouse leave\n        var diff = Date.now() - Number(ripple.getAttribute('data-hold'));\n        var delay = 350 - diff;\n\n        if (delay < 0) {\n            delay = 0;\n        }\n\n        if (e.type === 'mousemove') {\n            delay = 150;\n        }\n\n        // Fade out ripple after delay\n        var duration = e.type === 'mousemove' ? 2500 : Effect.duration;\n\n        setTimeout(function() {\n\n            var style = {\n                top: relativeY + 'px',\n                left: relativeX + 'px',\n                opacity: '0',\n\n                // Duration\n                '-webkit-transition-duration': duration + 'ms',\n                '-moz-transition-duration': duration + 'ms',\n                '-o-transition-duration': duration + 'ms',\n                'transition-duration': duration + 'ms',\n                '-webkit-transform': scale + ' ' + translate,\n                '-moz-transform': scale + ' ' + translate,\n                '-ms-transform': scale + ' ' + translate,\n                '-o-transform': scale + ' ' + translate,\n                'transform': scale + ' ' + translate\n            };\n\n            ripple.setAttribute('style', convertStyle(style));\n\n            setTimeout(function() {\n                try {\n                    el.removeChild(ripple);\n                } catch (e) {\n                    return false;\n                }\n            }, duration);\n\n        }, delay);\n    }\n\n\n    /**\n     * Disable mousedown event for 500ms during and after touch\n     */\n    var TouchHandler = {\n\n        /* uses an integer rather than bool so there's no issues with\n         * needing to clear timeouts if another touch event occurred\n         * within the 500ms. Cannot mouseup between touchstart and\n         * touchend, nor in the 500ms after touchend. */\n        touches: 0,\n\n        allowEvent: function(e) {\n\n            var allow = true;\n\n            if (/^(mousedown|mousemove)$/.test(e.type) && TouchHandler.touches) {\n                allow = false;\n            }\n\n            return allow;\n        },\n        registerEvent: function(e) {\n            var eType = e.type;\n\n            if (eType === 'touchstart') {\n\n                TouchHandler.touches += 1; // push\n\n            } else if (/^(touchend|touchcancel)$/.test(eType)) {\n\n                setTimeout(function() {\n                    if (TouchHandler.touches) {\n                        TouchHandler.touches -= 1; // pop after 500ms\n                    }\n                }, 500);\n\n            }\n        }\n    };\n\n\n    /**\n     * Delegated click handler for .waves-effect element.\n     * returns null when .waves-effect element not in \"click tree\"\n     */\n    function getWavesEffectElement(e) {\n\n        if (TouchHandler.allowEvent(e) === false) {\n            return null;\n        }\n\n        var element = null;\n        var target = e.target || e.srcElement;\n\n        while (target.parentElement) {\n            if ( (!(target instanceof SVGElement)) && target.classList.contains('waves-effect')) {\n                element = target;\n                break;\n            }\n            target = target.parentElement;\n        }\n\n        return element;\n    }\n\n    /**\n     * Bubble the click and show effect if .waves-effect elem was found\n     */\n    function showEffect(e) {\n\n        // Disable effect if element has \"disabled\" property on it\n        // In some cases, the event is not triggered by the current element\n        // if (e.target.getAttribute('disabled') !== null) {\n        //     return;\n        // }\n\n        var element = getWavesEffectElement(e);\n\n        if (element !== null) {\n\n            // Make it sure the element has either disabled property, disabled attribute or 'disabled' class\n            if (element.disabled || element.getAttribute('disabled') || element.classList.contains('disabled')) {\n                return;\n            }\n\n            TouchHandler.registerEvent(e);\n\n            if (e.type === 'touchstart' && Effect.delay) {\n\n                var hidden = false;\n\n                var timer = setTimeout(function () {\n                    timer = null;\n                    Effect.show(e, element);\n                }, Effect.delay);\n\n                var hideEffect = function(hideEvent) {\n\n                    // if touch hasn't moved, and effect not yet started: start effect now\n                    if (timer) {\n                        clearTimeout(timer);\n                        timer = null;\n                        Effect.show(e, element);\n                    }\n                    if (!hidden) {\n                        hidden = true;\n                        Effect.hide(hideEvent, element);\n                    }\n\n                    removeListeners();\n                };\n\n                var touchMove = function(moveEvent) {\n                    if (timer) {\n                        clearTimeout(timer);\n                        timer = null;\n                    }\n                    hideEffect(moveEvent);\n\n                    removeListeners();\n                };\n\n                element.addEventListener('touchmove', touchMove, false);\n                element.addEventListener('touchend', hideEffect, false);\n                element.addEventListener('touchcancel', hideEffect, false);\n\n                var removeListeners = function() {\n                    element.removeEventListener('touchmove', touchMove);\n                    element.removeEventListener('touchend', hideEffect);\n                    element.removeEventListener('touchcancel', hideEffect);\n                };\n            } else {\n\n                Effect.show(e, element);\n\n                if (isTouchAvailable) {\n                    element.addEventListener('touchend', Effect.hide, false);\n                    element.addEventListener('touchcancel', Effect.hide, false);\n                }\n\n                element.addEventListener('mouseup', Effect.hide, false);\n                element.addEventListener('mouseleave', Effect.hide, false);\n            }\n        }\n    }\n\n    Waves.init = function(options) {\n        var body = document.body;\n\n        options = options || {};\n\n        if ('duration' in options) {\n            Effect.duration = options.duration;\n        }\n\n        if ('delay' in options) {\n            Effect.delay = options.delay;\n        }\n\n        if (isTouchAvailable) {\n            body.addEventListener('touchstart', showEffect, false);\n            body.addEventListener('touchcancel', TouchHandler.registerEvent, false);\n            body.addEventListener('touchend', TouchHandler.registerEvent, false);\n        }\n\n        body.addEventListener('mousedown', showEffect, false);\n    };\n\n\n    /**\n     * Attach Waves to dynamically loaded inputs, or add .waves-effect and other\n     * waves classes to a set of elements. Set drag to true if the ripple mouseover\n     * or skimming effect should be applied to the elements.\n     */\n    Waves.attach = function(elements, classes) {\n\n        elements = getWavesElements(elements);\n\n        if (toString.call(classes) === '[object Array]') {\n            classes = classes.join(' ');\n        }\n\n        classes = classes ? ' ' + classes : '';\n\n        var element, tagName;\n\n        for (var i = 0, len = elements.length; i < len; i++) {\n\n            element = elements[i];\n            tagName = element.tagName.toLowerCase();\n\n            if (['input', 'img'].indexOf(tagName) !== -1) {\n                TagWrapper[tagName](element);\n                element = element.parentElement;\n            }\n\n            if (element.className.indexOf('waves-effect') === -1) {\n                element.className += ' waves-effect' + classes;\n            }\n        }\n    };\n\n\n    /**\n     * Cause a ripple to appear in an element via code.\n     */\n    Waves.ripple = function(elements, options) {\n        elements = getWavesElements(elements);\n        var elementsLen = elements.length;\n\n        options          = options || {};\n        options.wait     = options.wait || 0;\n        options.position = options.position || null; // default = centre of element\n\n\n        if (elementsLen) {\n            var element, pos, off, centre = {}, i = 0;\n            var mousedown = {\n                type: 'mousedown',\n                button: 1\n            };\n            var hideRipple = function(mouseup, element) {\n                return function() {\n                    Effect.hide(mouseup, element);\n                };\n            };\n\n            for (; i < elementsLen; i++) {\n                element = elements[i];\n                pos = options.position || {\n                    x: element.clientWidth / 2,\n                    y: element.clientHeight / 2\n                };\n\n                off      = offset(element);\n                centre.x = off.left + pos.x;\n                centre.y = off.top + pos.y;\n\n                mousedown.pageX = centre.x;\n                mousedown.pageY = centre.y;\n\n                Effect.show(mousedown, element);\n\n                if (options.wait >= 0 && options.wait !== null) {\n                    var mouseup = {\n                        type: 'mouseup',\n                        button: 1\n                    };\n\n                    setTimeout(hideRipple(mouseup, element), options.wait);\n                }\n            }\n        }\n    };\n\n    /**\n     * Remove all ripples from an element.\n     */\n    Waves.calm = function(elements) {\n        elements = getWavesElements(elements);\n        var mouseup = {\n            type: 'mouseup',\n            button: 1\n        };\n\n        for (var i = 0, len = elements.length; i < len; i++) {\n            Effect.hide(mouseup, elements[i]);\n        }\n    };\n\n    /**\n     * Deprecated API fallback\n     */\n    Waves.displayEffect = function(options) {\n        console.error('Waves.displayEffect() has been deprecated and will be removed in future version. Please use Waves.init() to initialize Waves effect');\n        Waves.init(options);\n    };\n\n    return Waves;\n});\n","/*!\nWaypoints - 4.0.1\nCopyright © 2011-2016 Caleb Troughton\nLicensed under the MIT license.\nhttps://github.com/imakewebthings/waypoints/blob/master/licenses.txt\n*/\n!function(){\"use strict\";function t(o){if(!o)throw new Error(\"No options passed to Waypoint constructor\");if(!o.element)throw new Error(\"No element option passed to Waypoint constructor\");if(!o.handler)throw new Error(\"No handler option passed to Waypoint constructor\");this.key=\"waypoint-\"+e,this.options=t.Adapter.extend({},t.defaults,o),this.element=this.options.element,this.adapter=new t.Adapter(this.element),this.callback=o.handler,this.axis=this.options.horizontal?\"horizontal\":\"vertical\",this.enabled=this.options.enabled,this.triggerPoint=null,this.group=t.Group.findOrCreate({name:this.options.group,axis:this.axis}),this.context=t.Context.findOrCreateByElement(this.options.context),t.offsetAliases[this.options.offset]&&(this.options.offset=t.offsetAliases[this.options.offset]),this.group.add(this),this.context.add(this),i[this.key]=this,e+=1}var e=0,i={};t.prototype.queueTrigger=function(t){this.group.queueTrigger(this,t)},t.prototype.trigger=function(t){this.enabled&&this.callback&&this.callback.apply(this,t)},t.prototype.destroy=function(){this.context.remove(this),this.group.remove(this),delete i[this.key]},t.prototype.disable=function(){return this.enabled=!1,this},t.prototype.enable=function(){return this.context.refresh(),this.enabled=!0,this},t.prototype.next=function(){return this.group.next(this)},t.prototype.previous=function(){return this.group.previous(this)},t.invokeAll=function(t){var e=[];for(var o in i)e.push(i[o]);for(var n=0,r=e.length;r>n;n++)e[n][t]()},t.destroyAll=function(){t.invokeAll(\"destroy\")},t.disableAll=function(){t.invokeAll(\"disable\")},t.enableAll=function(){t.Context.refreshAll();for(var e in i)i[e].enabled=!0;return this},t.refreshAll=function(){t.Context.refreshAll()},t.viewportHeight=function(){return window.innerHeight||document.documentElement.clientHeight},t.viewportWidth=function(){return document.documentElement.clientWidth},t.adapters=[],t.defaults={context:window,continuous:!0,enabled:!0,group:\"default\",horizontal:!1,offset:0},t.offsetAliases={\"bottom-in-view\":function(){return this.context.innerHeight()-this.adapter.outerHeight()},\"right-in-view\":function(){return this.context.innerWidth()-this.adapter.outerWidth()}},window.Waypoint=t}(),function(){\"use strict\";function t(t){window.setTimeout(t,1e3/60)}function e(t){this.element=t,this.Adapter=n.Adapter,this.adapter=new this.Adapter(t),this.key=\"waypoint-context-\"+i,this.didScroll=!1,this.didResize=!1,this.oldScroll={x:this.adapter.scrollLeft(),y:this.adapter.scrollTop()},this.waypoints={vertical:{},horizontal:{}},t.waypointContextKey=this.key,o[t.waypointContextKey]=this,i+=1,n.windowContext||(n.windowContext=!0,n.windowContext=new e(window)),this.createThrottledScrollHandler(),this.createThrottledResizeHandler()}var i=0,o={},n=window.Waypoint,r=window.onload;e.prototype.add=function(t){var e=t.options.horizontal?\"horizontal\":\"vertical\";this.waypoints[e][t.key]=t,this.refresh()},e.prototype.checkEmpty=function(){var t=this.Adapter.isEmptyObject(this.waypoints.horizontal),e=this.Adapter.isEmptyObject(this.waypoints.vertical),i=this.element==this.element.window;t&&e&&!i&&(this.adapter.off(\".waypoints\"),delete o[this.key])},e.prototype.createThrottledResizeHandler=function(){function t(){e.handleResize(),e.didResize=!1}var e=this;this.adapter.on(\"resize.waypoints\",function(){e.didResize||(e.didResize=!0,n.requestAnimationFrame(t))})},e.prototype.createThrottledScrollHandler=function(){function t(){e.handleScroll(),e.didScroll=!1}var e=this;this.adapter.on(\"scroll.waypoints\",function(){(!e.didScroll||n.isTouch)&&(e.didScroll=!0,n.requestAnimationFrame(t))})},e.prototype.handleResize=function(){n.Context.refreshAll()},e.prototype.handleScroll=function(){var t={},e={horizontal:{newScroll:this.adapter.scrollLeft(),oldScroll:this.oldScroll.x,forward:\"right\",backward:\"left\"},vertical:{newScroll:this.adapter.scrollTop(),oldScroll:this.oldScroll.y,forward:\"down\",backward:\"up\"}};for(var i in e){var o=e[i],n=o.newScroll>o.oldScroll,r=n?o.forward:o.backward;for(var s in this.waypoints[i]){var a=this.waypoints[i][s];if(null!==a.triggerPoint){var l=o.oldScroll<a.triggerPoint,h=o.newScroll>=a.triggerPoint,p=l&&h,u=!l&&!h;(p||u)&&(a.queueTrigger(r),t[a.group.id]=a.group)}}}for(var c in t)t[c].flushTriggers();this.oldScroll={x:e.horizontal.newScroll,y:e.vertical.newScroll}},e.prototype.innerHeight=function(){return this.element==this.element.window?n.viewportHeight():this.adapter.innerHeight()},e.prototype.remove=function(t){delete this.waypoints[t.axis][t.key],this.checkEmpty()},e.prototype.innerWidth=function(){return this.element==this.element.window?n.viewportWidth():this.adapter.innerWidth()},e.prototype.destroy=function(){var t=[];for(var e in this.waypoints)for(var i in this.waypoints[e])t.push(this.waypoints[e][i]);for(var o=0,n=t.length;n>o;o++)t[o].destroy()},e.prototype.refresh=function(){var t,e=this.element==this.element.window,i=e?void 0:this.adapter.offset(),o={};this.handleScroll(),t={horizontal:{contextOffset:e?0:i.left,contextScroll:e?0:this.oldScroll.x,contextDimension:this.innerWidth(),oldScroll:this.oldScroll.x,forward:\"right\",backward:\"left\",offsetProp:\"left\"},vertical:{contextOffset:e?0:i.top,contextScroll:e?0:this.oldScroll.y,contextDimension:this.innerHeight(),oldScroll:this.oldScroll.y,forward:\"down\",backward:\"up\",offsetProp:\"top\"}};for(var r in t){var s=t[r];for(var a in this.waypoints[r]){var l,h,p,u,c,d=this.waypoints[r][a],f=d.options.offset,w=d.triggerPoint,y=0,g=null==w;d.element!==d.element.window&&(y=d.adapter.offset()[s.offsetProp]),\"function\"==typeof f?f=f.apply(d):\"string\"==typeof f&&(f=parseFloat(f),d.options.offset.indexOf(\"%\")>-1&&(f=Math.ceil(s.contextDimension*f/100))),l=s.contextScroll-s.contextOffset,d.triggerPoint=Math.floor(y+l-f),h=w<s.oldScroll,p=d.triggerPoint>=s.oldScroll,u=h&&p,c=!h&&!p,!g&&u?(d.queueTrigger(s.backward),o[d.group.id]=d.group):!g&&c?(d.queueTrigger(s.forward),o[d.group.id]=d.group):g&&s.oldScroll>=d.triggerPoint&&(d.queueTrigger(s.forward),o[d.group.id]=d.group)}}return n.requestAnimationFrame(function(){for(var t in o)o[t].flushTriggers()}),this},e.findOrCreateByElement=function(t){return e.findByElement(t)||new e(t)},e.refreshAll=function(){for(var t in o)o[t].refresh()},e.findByElement=function(t){return o[t.waypointContextKey]},window.onload=function(){r&&r(),e.refreshAll()},n.requestAnimationFrame=function(e){var i=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||t;i.call(window,e)},n.Context=e}(),function(){\"use strict\";function t(t,e){return t.triggerPoint-e.triggerPoint}function e(t,e){return e.triggerPoint-t.triggerPoint}function i(t){this.name=t.name,this.axis=t.axis,this.id=this.name+\"-\"+this.axis,this.waypoints=[],this.clearTriggerQueues(),o[this.axis][this.name]=this}var o={vertical:{},horizontal:{}},n=window.Waypoint;i.prototype.add=function(t){this.waypoints.push(t)},i.prototype.clearTriggerQueues=function(){this.triggerQueues={up:[],down:[],left:[],right:[]}},i.prototype.flushTriggers=function(){for(var i in this.triggerQueues){var o=this.triggerQueues[i],n=\"up\"===i||\"left\"===i;o.sort(n?e:t);for(var r=0,s=o.length;s>r;r+=1){var a=o[r];(a.options.continuous||r===o.length-1)&&a.trigger([i])}}this.clearTriggerQueues()},i.prototype.next=function(e){this.waypoints.sort(t);var i=n.Adapter.inArray(e,this.waypoints),o=i===this.waypoints.length-1;return o?null:this.waypoints[i+1]},i.prototype.previous=function(e){this.waypoints.sort(t);var i=n.Adapter.inArray(e,this.waypoints);return i?this.waypoints[i-1]:null},i.prototype.queueTrigger=function(t,e){this.triggerQueues[e].push(t)},i.prototype.remove=function(t){var e=n.Adapter.inArray(t,this.waypoints);e>-1&&this.waypoints.splice(e,1)},i.prototype.first=function(){return this.waypoints[0]},i.prototype.last=function(){return this.waypoints[this.waypoints.length-1]},i.findOrCreate=function(t){return o[t.axis][t.name]||new i(t)},n.Group=i}(),function(){\"use strict\";function t(t){this.$element=e(t)}var e=window.jQuery,i=window.Waypoint;e.each([\"innerHeight\",\"innerWidth\",\"off\",\"offset\",\"on\",\"outerHeight\",\"outerWidth\",\"scrollLeft\",\"scrollTop\"],function(e,i){t.prototype[i]=function(){var t=Array.prototype.slice.call(arguments);return this.$element[i].apply(this.$element,t)}}),e.each([\"extend\",\"inArray\",\"isEmptyObject\"],function(i,o){t[o]=e[o]}),i.adapters.push({name:\"jquery\",Adapter:t}),i.Adapter=t}(),function(){\"use strict\";function t(t){return function(){var i=[],o=arguments[0];return t.isFunction(arguments[0])&&(o=t.extend({},arguments[1]),o.handler=arguments[0]),this.each(function(){var n=t.extend({},o,{element:this});\"string\"==typeof n.context&&(n.context=t(this).closest(n.context)[0]),i.push(new e(n))}),i}}var e=window.Waypoint;window.jQuery&&(window.jQuery.fn.waypoint=t(window.jQuery)),window.Zepto&&(window.Zepto.fn.waypoint=t(window.Zepto))}();","(function($){\"use strict\";$.fn.counterUp=function(options){var settings=$.extend({time:400,delay:10,offset:100,beginAt:0,formatter:false,context:\"window\",callback:function(){}},options),s;return this.each(function(){var $this=$(this),counter={time:$(this).data(\"counterup-time\")||settings.time,delay:$(this).data(\"counterup-delay\")||settings.delay,offset:$(this).data(\"counterup-offset\")||settings.offset,beginAt:$(this).data(\"counterup-beginat\")||settings.beginAt,context:$(this).data(\"counterup-context\")||settings.context};var counterUpper=function(){var nums=[];var divisions=counter.time/counter.delay;var num=$(this).attr(\"data-num\")?$(this).attr(\"data-num\"):$this.text();var isComma=/[0-9]+,[0-9]+/.test(num);num=num.replace(/,/g,\"\");var decimalPlaces=(num.split(\".\")[1]||[]).length;if(counter.beginAt>num)counter.beginAt=num;var isTime=/[0-9]+:[0-9]+:[0-9]+/.test(num);if(isTime){var times=num.split(\":\"),m=1;s=0;while(times.length>0){s+=m*parseInt(times.pop(),10);m*=60}}for(var i=divisions;i>=counter.beginAt/num*divisions;i--){var newNum=parseFloat(num/divisions*i).toFixed(decimalPlaces);if(isTime){newNum=parseInt(s/divisions*i);var hours=parseInt(newNum/3600)%24;var minutes=parseInt(newNum/60)%60;var seconds=parseInt(newNum%60,10);newNum=(hours<10?\"0\"+hours:hours)+\":\"+(minutes<10?\"0\"+minutes:minutes)+\":\"+(seconds<10?\"0\"+seconds:seconds)}if(isComma){while(/(\\d+)(\\d{3})/.test(newNum.toString())){newNum=newNum.toString().replace(/(\\d+)(\\d{3})/,\"$1\"+\",\"+\"$2\")}}if(settings.formatter){newNum=settings.formatter.call(this,newNum)}nums.unshift(newNum)}$this.data(\"counterup-nums\",nums);$this.text(counter.beginAt);var f=function(){if(!$this.data(\"counterup-nums\")){settings.callback.call(this);return}$this.html($this.data(\"counterup-nums\").shift());if($this.data(\"counterup-nums\").length){setTimeout($this.data(\"counterup-func\"),counter.delay)}else{$this.data(\"counterup-nums\",null);$this.data(\"counterup-func\",null);settings.callback.call(this)}};$this.data(\"counterup-func\",f);setTimeout($this.data(\"counterup-func\"),counter.delay)};$this.waypoint(function(direction){counterUpper();this.destroy()},{offset:counter.offset+\"%\",context:counter.context})})}})(jQuery);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"feather\"] = factory();\n\telse\n\t\troot[\"feather\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 80);\n","var O = 'object';\nvar check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line no-undef\n  check(typeof globalThis == O && globalThis) ||\n  check(typeof window == O && window) ||\n  check(typeof self == O && self) ||\n  check(typeof global == O && global) ||\n  // eslint-disable-next-line no-new-func\n  Function('return this')();\n","var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\n\nvar Symbol = global.Symbol;\nvar store = shared('wks');\n\nmodule.exports = function (name) {\n  return store[name] || (store[name] = NATIVE_SYMBOL && Symbol[name]\n    || (NATIVE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\nvar nativeDefineProperty = Object.defineProperty;\n\nexports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return nativeDefineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var fails = require('../internals/fails');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !fails(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","module.exports = {};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\nvar IS_PURE = require('../internals/is-pure');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.1.3',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","import Icon from './icon';\nimport icons from '../dist/icons.json';\nimport tags from './tags.json';\n\nexport default Object.keys(icons)\n  .map(key => new Icon(key, icons[key], tags[key]))\n  .reduce((object, icon) => {\n    object[icon.name] = icon;\n    return object;\n  }, {});\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","module.exports = {};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","module.exports = false;\n","var isObject = require('../internals/is-object');\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var global = require('../internals/global');\nvar hide = require('../internals/hide');\n\nmodule.exports = function (key, value) {\n  try {\n    hide(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.github.io/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.github.io/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar classNames = (function () {\n\t\t// don't inherit from Object so we can skip hasOwnProperty check later\n\t\t// http://stackoverflow.com/questions/15518328/creating-js-object-with-object-createnull#answer-21079232\n\t\tfunction StorageObject() {}\n\t\tStorageObject.prototype = Object.create(null);\n\n\t\tfunction _parseArray (resultSet, array) {\n\t\t\tvar length = array.length;\n\n\t\t\tfor (var i = 0; i < length; ++i) {\n\t\t\t\t_parse(resultSet, array[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar hasOwn = {}.hasOwnProperty;\n\n\t\tfunction _parseNumber (resultSet, num) {\n\t\t\tresultSet[num] = true;\n\t\t}\n\n\t\tfunction _parseObject (resultSet, object) {\n\t\t\tfor (var k in object) {\n\t\t\t\tif (hasOwn.call(object, k)) {\n\t\t\t\t\t// set value to false instead of deleting it to avoid changing object structure\n\t\t\t\t\t// https://www.smashingmagazine.com/2012/11/writing-fast-memory-efficient-javascript/#de-referencing-misconceptions\n\t\t\t\t\tresultSet[k] = !!object[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar SPACE = /\\s+/;\n\t\tfunction _parseString (resultSet, str) {\n\t\t\tvar array = str.split(SPACE);\n\t\t\tvar length = array.length;\n\n\t\t\tfor (var i = 0; i < length; ++i) {\n\t\t\t\tresultSet[array[i]] = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction _parse (resultSet, arg) {\n\t\t\tif (!arg) return;\n\t\t\tvar argType = typeof arg;\n\n\t\t\t// 'foo bar'\n\t\t\tif (argType === 'string') {\n\t\t\t\t_parseString(resultSet, arg);\n\n\t\t\t// ['foo', 'bar', ...]\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\t_parseArray(resultSet, arg);\n\n\t\t\t// { 'foo': true, ... }\n\t\t\t} else if (argType === 'object') {\n\t\t\t\t_parseObject(resultSet, arg);\n\n\t\t\t// '130'\n\t\t\t} else if (argType === 'number') {\n\t\t\t\t_parseNumber(resultSet, arg);\n\t\t\t}\n\t\t}\n\n\t\tfunction _classNames () {\n\t\t\t// don't leak arguments\n\t\t\t// https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n\t\t\tvar len = arguments.length;\n\t\t\tvar args = Array(len);\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\targs[i] = arguments[i];\n\t\t\t}\n\n\t\t\tvar classSet = new StorageObject();\n\t\t\t_parseArray(classSet, args);\n\n\t\t\tvar list = [];\n\n\t\t\tfor (var k in classSet) {\n\t\t\t\tif (classSet[k]) {\n\t\t\t\t\tlist.push(k)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list.join(' ');\n\t\t}\n\n\t\treturn _classNames;\n\t})();\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","var defineProperty = require('../internals/object-define-property').f;\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC) {\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.github.io/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","'use strict';\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar hide = require('../internals/hide');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nif (IteratorPrototype == undefined) IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nif (!IS_PURE && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.github.io/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayIncludes = require('../internals/array-includes');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar arrayIndexOf = arrayIncludes(false);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hide = require('../internals/hide');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar nativeFunctionToString = require('../internals/function-to-string');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(nativeFunctionToString).split('toString');\n\nshared('inspectSource', function (it) {\n  return nativeFunctionToString.call(it);\n});\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) hide(value, 'name', key);\n    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else hide(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || nativeFunctionToString.call(this);\n});\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return nativeGetOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar hide = require('../internals/hide');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      hide(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + postfix).toString(36));\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar exist = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return exist ? document.createElement(it) : {};\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var shared = require('../internals/shared');\n\nmodule.exports = shared('native-function-to-string', Function.toString);\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar hide = require('../internals/hide');\nvar objectHas = require('../internals/has');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP) {\n  var store = new WeakMap();\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    hide(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","/* eslint-env browser */\nimport classnames from 'classnames/dedupe';\n\nimport icons from './icons';\n\n/**\n * Replace all HTML elements that have a `data-feather` attribute with SVG markup\n * corresponding to the element's `data-feather` attribute value.\n * @param {Object} attrs\n */\nfunction replace(attrs = {}) {\n  if (typeof document === 'undefined') {\n    throw new Error('`feather.replace()` only works in a browser environment.');\n  }\n\n  const elementsToReplace = document.querySelectorAll('[data-feather]');\n\n  Array.from(elementsToReplace).forEach(element =>\n    replaceElement(element, attrs),\n  );\n}\n\n/**\n * Replace a single HTML element with SVG markup\n * corresponding to the element's `data-feather` attribute value.\n * @param {HTMLElement} element\n * @param {Object} attrs\n */\nfunction replaceElement(element, attrs = {}) {\n  const elementAttrs = getAttrs(element);\n  const name = elementAttrs['data-feather'];\n  delete elementAttrs['data-feather'];\n\n  if (icons[name] === undefined) {\n    console.warn(`feather: '${name}' is not a valid icon`);\n    return;\n  }\n\n  const svgString = icons[name].toSvg({\n    ...attrs,\n    ...elementAttrs,\n    ...{ class: classnames(attrs.class, elementAttrs.class) },\n  });\n  const svgDocument = new DOMParser().parseFromString(\n    svgString,\n    'image/svg+xml',\n  );\n  const svgElement = svgDocument.querySelector('svg');\n\n  element.parentNode.replaceChild(svgElement, element);\n}\n\n/**\n * Get the attributes of an HTML element.\n * @param {HTMLElement} element\n * @returns {Object}\n */\nfunction getAttrs(element) {\n  return Array.from(element.attributes).reduce((attrs, attr) => {\n    attrs[attr.name] = attr.value;\n    return attrs;\n  }, {});\n}\n\nexport default replace;\n","import icons from './icons';\n\n/**\n * Create an SVG string.\n * @deprecated\n * @param {string} name\n * @param {Object} attrs\n * @returns {string}\n */\nfunction toSvg(name, attrs = {}) {\n  console.warn(\n    'feather.toSvg() is deprecated. Please use feather.icons[name].toSvg() instead.',\n  );\n\n  if (!name) {\n    throw new Error('The required `key` (icon name) parameter is missing.');\n  }\n\n  if (!icons[name]) {\n    throw new Error(\n      `No icon matching '${name}'. See the complete list of icons at https://feathericons.com`,\n    );\n  }\n\n  return icons[name].toSvg(attrs);\n}\n\nexport default toSvg;\n","import classnames from 'classnames/dedupe';\n\nimport DEFAULT_ATTRS from './default-attrs.json';\n\nclass Icon {\n  constructor(name, contents, tags = []) {\n    this.name = name;\n    this.contents = contents;\n    this.tags = tags;\n    this.attrs = {\n      ...DEFAULT_ATTRS,\n      ...{ class: `feather feather-${name}` },\n    };\n  }\n\n  /**\n   * Create an SVG string.\n   * @param {Object} attrs\n   * @returns {string}\n   */\n  toSvg(attrs = {}) {\n    const combinedAttrs = {\n      ...this.attrs,\n      ...attrs,\n      ...{ class: classnames(this.attrs.class, attrs.class) },\n    };\n\n    return `<svg ${attrsToString(combinedAttrs)}>${this.contents}</svg>`;\n  }\n\n  /**\n   * Return string representation of an `Icon`.\n   *\n   * Added for backward compatibility. If old code expects `feather.icons.<name>`\n   * to be a string, `toString()` will get implicitly called.\n   *\n   * @returns {string}\n   */\n  toString() {\n    return this.contents;\n  }\n}\n\n/**\n * Convert attributes object to string of HTML attributes.\n * @param {Object} attrs\n * @returns {string}\n */\nfunction attrsToString(attrs) {\n  return Object.keys(attrs)\n    .map(key => `${key}=\"${attrs[key]}\"`)\n    .join(' ');\n}\n\nexport default Icon;\n","import icons from './icons';\nimport toSvg from './to-svg';\nimport replace from './replace';\n\nmodule.exports = { icons, toSvg, replace };\n","module.exports = require('../internals/global');\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n","var classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","var classof = require('../internals/classof');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","var anObject = require('../internals/an-object');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (error) {\n    var returnMethod = iterator['return'];\n    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));\n    throw error;\n  }\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","'use strict';\nvar bind = require('../internals/bind-context');\nvar toObject = require('../internals/to-object');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\n// `Array.from` method\n// https://tc39.github.io/ecma262/#sec-array.from\nmodule.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n  var O = toObject(arrayLike);\n  var C = typeof this == 'function' ? this : Array;\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  var index = 0;\n  var iteratorMethod = getIteratorMethod(O);\n  var length, result, step, iterator;\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);\n  // if the target is not iterable or it's an array with the default iterator - use a simple case\n  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\n    iterator = iteratorMethod.call(O);\n    result = new C();\n    for (;!(step = iterator.next()).done; index++) {\n      createProperty(result, index, mapping\n        ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true)\n        : step.value\n      );\n    }\n  } else {\n    length = toLength(O.length);\n    result = new C(length);\n    for (;length > index; index++) {\n      createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n    }\n  }\n  result.length = index;\n  return result;\n};\n","var $ = require('../internals/export');\nvar from = require('../internals/array-from');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\n\nvar INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {\n  Array.from(iterable);\n});\n\n// `Array.from` method\n// https://tc39.github.io/ecma262/#sec-array.from\n$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {\n  from: from\n});\n","var isObject = require('../internals/is-object');\nvar anObject = require('../internals/an-object');\n\nmodule.exports = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) {\n    throw TypeError(\"Can't set \" + String(proto) + ' as a prototype');\n  }\n};\n","var validateSetPrototypeOfArguments = require('../internals/validate-set-prototype-of-arguments');\n\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var correctSetter = false;\n  var test = {};\n  var setter;\n  try {\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    correctSetter = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    validateSetPrototypeOfArguments(O, proto);\n    if (correctSetter) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var global = require('../internals/global');\n\nvar document = global.document;\n\nmodule.exports = document && document.documentElement;\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var key;\n  while (length > i) definePropertyModule.f(O, key = keys[i++], Properties[key]);\n  return O;\n};\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar PROTOTYPE = 'prototype';\nvar Empty = function () { /* empty */ };\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var length = enumBugKeys.length;\n  var lt = '<';\n  var script = 'script';\n  var gt = '>';\n  var js = 'java' + script + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  iframe.src = String(js);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + script + gt + 'document.F=Object' + lt + '/' + script + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (length--) delete createDict[PROTOTYPE][enumBugKeys[length]];\n  return createDict();\n};\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n\nhiddenKeys[IE_PROTO] = true;\n","var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  // eslint-disable-next-line no-undef\n  return !String(Symbol());\n});\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","exports.f = Object.getOwnPropertySymbols;\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(length, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\n// false -> Array#indexOf\n// https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n// true  -> Array#includes\n// https://tc39.github.io/ecma262/#sec-array.prototype.includes\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","var global = require('../internals/global');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\nvar Reflect = global.Reflect;\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","'use strict';\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : nativePropertyIsEnumerable;\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar hide = require('../internals/hide');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          hide(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    hide(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","var global = require('../internals/global');\nvar nativeFunctionToString = require('../internals/function-to-string');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(nativeFunctionToString.call(WeakMap));\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// CONVERT_TO_STRING: true  -> String#at\n// CONVERT_TO_STRING: false -> String#codePointAt\nmodule.exports = function (that, pos, CONVERT_TO_STRING) {\n  var S = String(requireObjectCoercible(that));\n  var position = toInteger(pos);\n  var size = S.length;\n  var first, second;\n  if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n  first = S.charCodeAt(position);\n  return first < 0xD800 || first > 0xDBFF || position + 1 === size\n    || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n      ? CONVERT_TO_STRING ? S.charAt(position) : first\n      : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n};\n","'use strict';\nvar codePointAt = require('../internals/string-at');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = codePointAt(string, index, true);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","require('../../modules/es.string.iterator');\nrequire('../../modules/es.array.from');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Array.from;\n","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * Enumerations for AutoNumeric.js\n * @author Alexandre Bonneau <alexandre.bonneau@linuxfr.eu>\n * @copyright © 2023 Alexandre Bonneau\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sub license, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Object that store the helper enumerations\n * @type {{ allowedTagList: [string], keyCode: {}, fromCharCodeKeyCode: [string], keyName: {} }}\n */\nconst AutoNumericEnum = {};\n\n/**\n * List of allowed tag on which autoNumeric can be used.\n */\nAutoNumericEnum.allowedTagList = [\n    'b',\n    'caption',\n    'cite',\n    'code',\n    'const',\n    'dd',\n    'del',\n    'div',\n    'dfn',\n    'dt',\n    'em',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'input',\n    'ins',\n    'kdb',\n    'label',\n    'li',\n    'option',\n    'output',\n    'p',\n    'q',\n    's',\n    'sample',\n    'span',\n    'strong',\n    'td',\n    'th',\n    'u',\n];\nObject.freeze(AutoNumericEnum.allowedTagList);\nObject.defineProperty(AutoNumericEnum, 'allowedTagList', { configurable: false, writable: false });\n\n/**\n * This object is the reverse of `keyCode`, and is used to translate the key code to named keys when no valid characters can be obtained by `String.fromCharCode`.\n * This object keys correspond to the `event.keyCode` number, and returns the corresponding key name (à la event.key)\n */\nAutoNumericEnum.fromCharCodeKeyCode = {\n    0  : 'LaunchCalculator',\n    8  : 'Backspace',\n    9  : 'Tab',\n    13 : 'Enter',\n    16 : 'Shift',\n    17 : 'Ctrl',\n    18 : 'Alt',\n    19 : 'Pause',\n    20 : 'CapsLock',\n    27 : 'Escape',\n    32 : ' ',\n    33 : 'PageUp',\n    34 : 'PageDown',\n    35 : 'End',\n    36 : 'Home',\n    37 : 'ArrowLeft',\n    38 : 'ArrowUp',\n    39 : 'ArrowRight',\n    40 : 'ArrowDown',\n    45 : 'Insert',\n    46 : 'Delete',\n    48 : '0',\n    49 : '1',\n    50 : '2',\n    51 : '3',\n    52 : '4',\n    53 : '5',\n    54 : '6',\n    55 : '7',\n    56 : '8',\n    57 : '9',\n    // 65: 'a',\n    // 66: 'b',\n    // 67: 'c',\n    // 68: 'd',\n    // 69: 'e',\n    // 70: 'f',\n    // 71: 'g',\n    // 72: 'h',\n    // 73: 'i',\n    // 74: 'j',\n    // 75: 'k',\n    // 76: 'l',\n    // 77: 'm',\n    // 78: 'n',\n    // 79: 'o',\n    // 80: 'p',\n    // 81: 'q',\n    // 82: 'r',\n    // 83: 's',\n    // 84: 't',\n    // 85: 'u',\n    // 86: 'v',\n    // 87: 'w',\n    // 88: 'x',\n    // 89: 'y',\n    // 90: 'z',\n    91 : 'OS', // Note: Firefox and Chrome reports 'OS' instead of 'OSLeft'\n    92 : 'OSRight',\n    93 : 'ContextMenu',\n    96 : '0',\n    97 : '1',\n    98 : '2',\n    99 : '3',\n    100: '4',\n    101: '5',\n    102: '6',\n    103: '7',\n    104: '8',\n    105: '9',\n    106: '*',\n    107: '+',\n    109: '-', // The 'NumpadSubtract' code\n    110: '.',\n    111: '/',\n    112: 'F1',\n    113: 'F2',\n    114: 'F3',\n    115: 'F4',\n    116: 'F5',\n    117: 'F6',\n    118: 'F7',\n    119: 'F8',\n    120: 'F9',\n    121: 'F10',\n    122: 'F11',\n    123: 'F12',\n    144: 'NumLock',\n    145: 'ScrollLock',\n    173: '-', // The 'Minus' sign on Firefox. This is only needed when using the Selenium bot though.\n    182: 'MyComputer',\n    183: 'MyCalculator',\n    186: ';',\n    187: '=',\n    188: ',',\n    189: '-', // The 'Minus' sign on all other browsers\n    190: '.',\n    191: '/',\n    192: '`',\n    219: '[',\n    220: '\\\\',\n    221: ']',\n    222: '\\'',\n    224: 'Meta',\n    225: 'AltGraph',\n};\nObject.freeze(AutoNumericEnum.fromCharCodeKeyCode);\nObject.defineProperty(AutoNumericEnum, 'fromCharCodeKeyCode', { configurable: false, writable: false });\n\n/**\n * Wrapper variable that hold named keyboard keys with their respective key name (as set in KeyboardEvent.key).\n * Those names are listed here :\n * @link https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\n */\nAutoNumericEnum.keyName = {\n    // Special values\n    Unidentified  : 'Unidentified',\n    AndroidDefault: 'AndroidDefault',\n\n    // Modifier keys\n    Alt       : 'Alt',\n    AltGr     : 'AltGraph',\n    CapsLock  : 'CapsLock', // Under Chrome, e.key is empty for CapsLock\n    Ctrl      : 'Control',\n    Fn        : 'Fn',\n    FnLock    : 'FnLock',\n    Hyper     : 'Hyper', // 'OS' under Firefox\n    Meta      : 'Meta',\n    OSLeft    : 'OS',\n    OSRight   : 'OS',\n    Command   : 'OS',\n    NumLock   : 'NumLock',\n    ScrollLock: 'ScrollLock',\n    Shift     : 'Shift',\n    Super     : 'Super', // 'OS' under Firefox\n    Symbol    : 'Symbol',\n    SymbolLock: 'SymbolLock',\n\n    // Whitespace keys\n    Enter: 'Enter',\n    Tab  : 'Tab',\n    Space: ' ', // 'Spacebar' for Firefox <37, and IE9\n\n    // Navigation keys\n    LeftArrow : 'ArrowLeft', // 'Left' for Firefox <=36, and IE9\n    UpArrow   : 'ArrowUp', // 'Up' for Firefox <=36, and IE9\n    RightArrow: 'ArrowRight', // 'Right' for Firefox <=36, and IE9\n    DownArrow : 'ArrowDown', // 'Down' for Firefox <=36, and IE9\n    End       : 'End',\n    Home      : 'Home',\n    PageUp    : 'PageUp',\n    PageDown  : 'PageDown',\n\n    // Editing keys\n    Backspace: 'Backspace',\n    Clear    : 'Clear',\n    Copy     : 'Copy',\n    CrSel    : 'CrSel', // 'Crsel' for Firefox <=36, and IE9\n    Cut      : 'Cut',\n    Delete   : 'Delete', // 'Del' for Firefox <=36, and IE9\n    EraseEof : 'EraseEof',\n    ExSel    : 'ExSel', // 'Exsel' for Firefox <=36, and IE9\n    Insert   : 'Insert',\n    Paste    : 'Paste',\n    Redo     : 'Redo',\n    Undo     : 'Undo',\n\n    // UI keys\n    Accept     : 'Accept',\n    Again      : 'Again',\n    Attn       : 'Attn', // 'Unidentified' for Firefox, Chrome, and IE9 ('KanaMode' when using the Japanese keyboard layout)\n    Cancel     : 'Cancel',\n    ContextMenu: 'ContextMenu', // 'Apps' for Firefox <=36, and IE9\n    Esc        : 'Escape', // 'Esc' for Firefox <=36, and IE9\n    Execute    : 'Execute',\n    Find       : 'Find',\n    Finish     : 'Finish', // 'Unidentified' for Firefox, Chrome, and IE9 ('Katakana' when using the Japanese keyboard layout)\n    Help       : 'Help',\n    Pause      : 'Pause',\n    Play       : 'Play',\n    Props      : 'Props',\n    Select     : 'Select',\n    ZoomIn     : 'ZoomIn',\n    ZoomOut    : 'ZoomOut',\n\n    // Device keys\n    BrightnessDown: 'BrightnessDown',\n    BrightnessUp  : 'BrightnessUp',\n    Eject         : 'Eject',\n    LogOff        : 'LogOff',\n    Power         : 'Power',\n    PowerOff      : 'PowerOff',\n    PrintScreen   : 'PrintScreen',\n    Hibernate     : 'Hibernate', // 'Unidentified' for Firefox <=37\n    Standby       : 'Standby', // 'Unidentified' for Firefox <=36, and IE9\n    WakeUp        : 'WakeUp',\n\n    // IME and composition keys\n    Compose: 'Compose',\n    Dead   : 'Dead',\n\n    // Function keys\n    F1 : 'F1',\n    F2 : 'F2',\n    F3 : 'F3',\n    F4 : 'F4',\n    F5 : 'F5',\n    F6 : 'F6',\n    F7 : 'F7',\n    F8 : 'F8',\n    F9 : 'F9',\n    F10: 'F10',\n    F11: 'F11',\n    F12: 'F12',\n\n    // Document keys\n    Print: 'Print',\n\n    // 'Normal' keys\n    num0            : '0',\n    num1            : '1',\n    num2            : '2',\n    num3            : '3',\n    num4            : '4',\n    num5            : '5',\n    num6            : '6',\n    num7            : '7',\n    num8            : '8',\n    num9            : '9',\n    a               : 'a',\n    b               : 'b',\n    c               : 'c',\n    d               : 'd',\n    e               : 'e',\n    f               : 'f',\n    g               : 'g',\n    h               : 'h',\n    i               : 'i',\n    j               : 'j',\n    k               : 'k',\n    l               : 'l',\n    m               : 'm',\n    n               : 'n',\n    o               : 'o',\n    p               : 'p',\n    q               : 'q',\n    r               : 'r',\n    s               : 's',\n    t               : 't',\n    u               : 'u',\n    v               : 'v',\n    w               : 'w',\n    x               : 'x',\n    y               : 'y',\n    z               : 'z',\n    A               : 'A',\n    B               : 'B',\n    C               : 'C',\n    D               : 'D',\n    E               : 'E',\n    F               : 'F',\n    G               : 'G',\n    H               : 'H',\n    I               : 'I',\n    J               : 'J',\n    K               : 'K',\n    L               : 'L',\n    M               : 'M',\n    N               : 'N',\n    O               : 'O',\n    P               : 'P',\n    Q               : 'Q',\n    R               : 'R',\n    S               : 'S',\n    T               : 'T',\n    U               : 'U',\n    V               : 'V',\n    W               : 'W',\n    X               : 'X',\n    Y               : 'Y',\n    Z               : 'Z',\n    Semicolon       : ';',\n    Equal           : '=',\n    Comma           : ',',\n    Hyphen          : '-',\n    Minus           : '-',\n    Plus            : '+',\n    Dot             : '.',\n    Slash           : '/',\n    Backquote       : '`',\n    LeftParenthesis : '(',\n    RightParenthesis: ')',\n    LeftBracket     : '[',\n    RightBracket    : ']',\n    Backslash       : '\\\\',\n    Quote           : '\\'',\n\n    // Numeric keypad keys\n    numpad0                       : '0',\n    numpad1                       : '1',\n    numpad2                       : '2',\n    numpad3                       : '3',\n    numpad4                       : '4',\n    numpad5                       : '5',\n    numpad6                       : '6',\n    numpad7                       : '7',\n    numpad8                       : '8',\n    numpad9                       : '9',\n    NumpadDot                     : '.',\n    NumpadDotAlt                  : ',', // Modern browsers automatically adapt the character sent by this key to the decimal character of the current language\n    NumpadMultiply                : '*',\n    NumpadPlus                    : '+',\n    NumpadMinus                   : '-',\n    NumpadSubtract                : '-',\n    NumpadSlash                   : '/',\n    NumpadDotObsoleteBrowsers     : 'Decimal',\n    NumpadMultiplyObsoleteBrowsers: 'Multiply',\n    NumpadPlusObsoleteBrowsers    : 'Add',\n    NumpadMinusObsoleteBrowsers   : 'Subtract',\n    NumpadSlashObsoleteBrowsers   : 'Divide',\n\n    // Special arrays for quicker tests\n    _allFnKeys           : ['F1', 'F2', 'F3', 'F4', 'F5', 'F6', 'F7', 'F8', 'F9', 'F10', 'F11', 'F12'],\n    _someNonPrintableKeys: ['Tab', 'Enter', 'Shift', 'ShiftLeft', 'ShiftRight', 'Control', 'ControlLeft', 'ControlRight', 'Alt', 'AltLeft', 'AltRight', 'Pause', 'CapsLock', 'Escape'],\n    _directionKeys       : ['PageUp', 'PageDown', 'End', 'Home', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowUp'],\n};\nObject.freeze(AutoNumericEnum.keyName._allFnKeys);\nObject.freeze(AutoNumericEnum.keyName._someNonPrintableKeys);\nObject.freeze(AutoNumericEnum.keyName._directionKeys);\nObject.freeze(AutoNumericEnum.keyName);\nObject.defineProperty(AutoNumericEnum, 'keyName', { configurable: false, writable: false });\n\nObject.freeze(AutoNumericEnum);\n\nexport default AutoNumericEnum;\n","/**\n * Helper functions for AutoNumeric.js\n * @author Alexandre Bonneau <alexandre.bonneau@linuxfr.eu>\n * @copyright © 2023 Alexandre Bonneau\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sub license, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport AutoNumericEnum from './AutoNumericEnum';\n\n/**\n * Static class that holds all the helper functions autoNumeric uses.\n * Note : none of the functions in there are aware of any autoNumeric internals (which means there are no references to autoNumeric-specific info like options names or data structures).\n */\nexport default class AutoNumericHelper {\n    /**\n     * Return `true` if the `value` is null\n     *\n     * @static\n     * @param {*} value The value to test\n     * @returns {boolean} Return `true` if the `value` is null, FALSE otherwise\n     */\n    static isNull(value) {\n        return value === null;\n    }\n\n    /**\n     * Return `true` if the `value` is undefined\n     *\n     * @static\n     * @param {*} value The value to test\n     * @returns {boolean} Return `true` if the `value` is undefined, FALSE otherwise\n     */\n    static isUndefined(value) {\n        return value === void(0);\n    }\n\n    /**\n     * Return `true` if the `value` is undefined, null or empty\n     *\n     * @param {*} value\n     * @returns {boolean}\n     */\n    static isUndefinedOrNullOrEmpty(value) {\n        return value === null || value === void(0) || '' === value;\n    }\n\n    /**\n     * Return `true` if the given parameter is a String\n     *\n     * @param {*} str\n     * @returns {boolean}\n     */\n    static isString(str) {\n        return (typeof str === 'string' || str instanceof String);\n    }\n    /**\n     * Return `true` if the `value` is an empty string ''\n     *\n     * @static\n     * @param {*} value The value to test\n     * @returns {boolean} Return `true` if the `value` is an empty string '', FALSE otherwise\n     */\n    static isEmptyString(value) {\n        return value === '';\n    }\n\n    /**\n     * Return `true` if the parameter is a boolean\n     *\n     * @static\n     * @param {*} value\n     * @returns {boolean}\n     */\n    static isBoolean(value) {\n        return typeof(value) === 'boolean';\n    }\n\n    /**\n     * Return `true` if the parameter is a string 'true' or 'false'\n     *\n     * This function accepts any cases for those strings.\n     * @param {string} value\n     * @returns {boolean}\n     */\n    static isTrueOrFalseString(value) {\n        const lowercaseValue = String(value).toLowerCase();\n        return lowercaseValue === 'true' || lowercaseValue === 'false';\n    }\n\n    /**\n     * Return `true` if the parameter is an object\n     *\n     * @param {*} reference\n     * @returns {boolean}\n     */\n    static isObject(reference) {\n        return typeof reference === 'object' && reference !== null && !Array.isArray(reference);\n    }\n\n    /**\n     * Return `true` if the given object is empty\n     * cf. http://stackoverflow.com/questions/679915/how-do-i-test-for-an-empty-javascript-object and http://jsperf.com/empty-object-test\n     *\n     * @param {object} obj\n     * @returns {boolean}\n     */\n    static isEmptyObj(obj) {\n        for (const prop in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Return `true` if the parameter is a real number (and not a numeric string).\n     *\n     * @param {*} n\n     * @returns {boolean}\n     */\n    static isNumberStrict(n) {\n        return typeof n === 'number';\n    }\n\n    /**\n     * Return `true` if the parameter is a number (or a number written as a string).\n     *\n     * @param {*} n\n     * @returns {boolean}\n     */\n    static isNumber(n) {\n        return !this.isArray(n) && !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    /**\n     * Return `true` if the given character is a number (0 to 9)\n     *\n     * @param {char} char\n     * @returns {boolean}\n     */\n    static isDigit(char) {\n        return /\\d/.test(char);\n    }\n\n    /**\n     * Return `true` if the parameter is a number (or a number written as a string).\n     * This version also accepts Arabic and Persian numbers.\n     *\n     * @param {*} n\n     * @returns {boolean}\n     */\n    static isNumberOrArabic(n) {\n        const latinConvertedNumber = this.arabicToLatinNumbers(n, false, true, true);\n        return this.isNumber(latinConvertedNumber);\n    }\n\n    /**\n     * Return `true` if the parameter is an integer (and not a float).\n     *\n     * @param {*} n\n     * @returns {boolean}\n     */\n    static isInt(n) {\n        return typeof n === 'number' && parseFloat(n) === parseInt(n, 10) && !isNaN(n);\n    }\n\n    /**\n     * Return `true` if the parameter is a function.\n     *\n     * @param {function} func\n     * @returns {boolean}\n     */\n    static isFunction(func) {\n        return typeof func === 'function';\n    }\n\n    /**\n     * Return `true` is the string `str` contains the string `needle`\n     * Note: this function does not coerce the parameters types\n     *\n     * @param {string} str\n     * @param {string} needle\n     * @returns {boolean}\n     */\n    static contains(str, needle) {\n        //TODO Use `Array.prototype.includes()` when available (cf. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes)\n        if (!this.isString(str) || !this.isString(needle) || str === '' || needle === '') {\n            return false;\n        }\n\n        return str.indexOf(needle) !== -1;\n    }\n\n    /**\n     * Return `true` if the `needle` is in the array\n     *\n     * @param {*} needle\n     * @param {Array} array\n     * @returns {boolean}\n     */\n    static isInArray(needle, array) {\n        if (!this.isArray(array) || array === [] || this.isUndefined(needle)) {\n            return false;\n        }\n\n        return array.indexOf(needle) !== -1;\n    }\n\n    /**\n     * Return `true` if the parameter is an Array\n     * //TODO Replace this by the default `Array.isArray()` function?\n     *\n     * @param {*} arr\n     * @throws Error\n     * @returns {*|boolean}\n     */\n    static isArray(arr) {\n        if (Object.prototype.toString.call([]) === '[object Array]') { // Make sure an array has a class attribute of [object Array]\n            // Test passed, now check if is an Array\n            return Array.isArray(arr) || (typeof arr === 'object' && Object.prototype.toString.call(arr) === '[object Array]');\n        }\n        else {\n            throw new Error('toString message changed for Object Array'); // Verify that the string returned by `toString` does not change in the future (cf. http://stackoverflow.com/a/8365215)\n        }\n    }\n\n    /**\n     * Return `true` if the parameter is a DOM element\n     * cf. http://stackoverflow.com/a/4754104/2834898\n     *\n     * @param {*} obj\n     * @returns {boolean}\n     */\n    static isElement(obj) {\n        // return !!(obj && obj.nodeName);\n        // return obj && 'nodeType' in obj;\n        // return obj instanceof Element || obj instanceof HTMLInputElement || obj instanceof HTMLElement;\n        if (typeof Element === 'undefined') {\n            // This test is needed in environnements where the Element object does not exist (ie. in web workers)\n            return false;\n        }\n\n        return obj instanceof Element;\n    }\n\n    /**\n     * Return `true` in the given DOM element is an <input>.\n     *\n     * @param {HTMLElement|HTMLInputElement} domElement\n     * @returns {boolean}\n     * @private\n     */\n    static isInputElement(domElement) {\n        return this.isElement(domElement) && domElement.tagName.toLowerCase() === 'input';\n    }\n\n    /**\n     * Return `true` if the parameter is a string that represents a float number, and that number has a decimal part\n     *\n     * @param {string} str\n     * @returns {boolean}\n     */\n    // static hasDecimals(str) {\n    //     const [, decimalPart] = str.split('.');\n    //     return !isUndefined(decimalPart);\n    // }\n\n    /**\n     * Return the number of decimal places if the parameter is a string that represents a float number, and that number has a decimal part.\n     *\n     * @param {string} str\n     * @returns {int}\n     */\n    static decimalPlaces(str) {\n        const [, decimalPart] = str.split('.');\n        if (!this.isUndefined(decimalPart)) {\n            return decimalPart.length;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Return the index of the first non-zero decimal place in the given value.\n     * The index starts after the decimal point, if any, and begins at '1'.\n     * If no decimal places are found in the value, this function returns `0`.\n     *\n     * @example\n     * indexFirstNonZeroDecimalPlace('0.00') -> 0\n     * indexFirstNonZeroDecimalPlace('1.00') -> 0\n     * indexFirstNonZeroDecimalPlace('0.12') -> 1\n     * indexFirstNonZeroDecimalPlace('0.1234') -> 1\n     * indexFirstNonZeroDecimalPlace('0.01234') -> 2\n     * indexFirstNonZeroDecimalPlace('0.001234') -> 3\n     * indexFirstNonZeroDecimalPlace('0.0001234') -> 4\n     *\n     * @param {number} value\n     * @returns {Number|number}\n     */\n    static indexFirstNonZeroDecimalPlace(value) {\n        const [, decimalPart] = String(Math.abs(value)).split('.');\n\n        if (this.isUndefined(decimalPart)) {\n            return 0;\n        }\n\n        let result = decimalPart.lastIndexOf('0');\n        if (result === -1) {\n            result = 0;\n        } else {\n            result += 2;\n        }\n\n        return result;\n    }\n\n    /**\n     * Return the code for the key used to generate the given event.\n     *\n     * @param {Event} event\n     * @returns {string|Number}\n     */\n    static keyCodeNumber(event) {\n        // `event.keyCode` and `event.which` are deprecated, `KeyboardEvent.key` (https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key) must be used now\n        // Also, do note that Firefox generate a 'keypress' event (e.keyCode === 0) for the keys that do not print a character (ie. 'Insert', 'Delete', 'Fn' keys, 'PageUp', 'PageDown' etc.). 'Shift' on the other hand does not generate a keypress event.\n        return (typeof event.which === 'undefined')?event.keyCode:event.which;\n    }\n\n    /**\n     * Return the character from the event key code.\n     * If the KeyboardEvent does not represent a printable character, then the key name is used (ie. 'Meta', 'Shift', 'F1', etc.)\n     * @example character(50) => '2'\n     *\n     * @param {KeyboardEvent} event\n     * @returns {string}\n     */\n    static character(event) {\n        let result;\n        if (event.key === 'Unidentified' || event.key === void(0) || this.isSeleniumBot()) {\n            //XXX The selenium geckodriver does not understand `event.key`, hence when using it, we need to rely on the old deprecated `keyCode` attribute, cf. upstream issue https://github.com/mozilla/geckodriver/issues/440\n            // Use the old deprecated keyCode property, if the new `key` one is not supported\n            const keyCode = this.keyCodeNumber(event);\n            if (keyCode === 229) { // Android Chrome returns the same keycode number 229 for all keys pressed\n                return AutoNumericEnum.keyName.AndroidDefault;\n            }\n\n            const potentialResult = AutoNumericEnum.fromCharCodeKeyCode[keyCode];\n            if (!AutoNumericHelper.isUndefinedOrNullOrEmpty(potentialResult)) {\n                // Since `String.fromCharCode` do not return named keys for some keys ('Escape' and 'Enter' for instance), we convert the characters to the key names\n                result = potentialResult;\n            } else {\n                result = String.fromCharCode(keyCode);\n            }\n        } else {\n            switch (event.key) {\n                // Manages all the special cases for obsolete browsers that return the non-standard names\n                case 'Add':\n                    result = AutoNumericEnum.keyName.NumpadPlus;\n                    break;\n                case 'Apps':\n                    result = AutoNumericEnum.keyName.ContextMenu;\n                    break;\n                case 'Crsel':\n                    result = AutoNumericEnum.keyName.CrSel;\n                    break;\n                case 'Decimal':\n                    if (event.char) {\n                        // this fixes #602\n                        result = event.char;\n                    } else {\n                        result = AutoNumericEnum.keyName.NumpadDot;\n                    }\n                    break;\n                case 'Del':\n                    result = AutoNumericEnum.keyName.Delete;\n                    break;\n                case 'Divide':\n                    result = AutoNumericEnum.keyName.NumpadSlash;\n                    break;\n                case 'Down':\n                    result = AutoNumericEnum.keyName.DownArrow;\n                    break;\n                case 'Esc':\n                    result = AutoNumericEnum.keyName.Esc;\n                    break;\n                case 'Exsel':\n                    result = AutoNumericEnum.keyName.ExSel;\n                    break;\n                case 'Left':\n                    result = AutoNumericEnum.keyName.LeftArrow;\n                    break;\n                case 'Meta':\n                case 'Super':\n                    result = AutoNumericEnum.keyName.OSLeft;\n                    break;\n                case 'Multiply':\n                    result = AutoNumericEnum.keyName.NumpadMultiply;\n                    break;\n                case 'Right':\n                    result = AutoNumericEnum.keyName.RightArrow;\n                    break;\n                case 'Spacebar':\n                    result = AutoNumericEnum.keyName.Space;\n                    break;\n                case 'Subtract':\n                    result = AutoNumericEnum.keyName.NumpadMinus;\n                    break;\n                case 'Up':\n                    result = AutoNumericEnum.keyName.UpArrow;\n                    break;\n                default:\n                    // The normal case\n                    result = event.key;\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Return an object containing the name and version of the current browser.\n     * @example `browserVersion()` => { name: 'Firefox', version: '42' }\n     * Based on http://stackoverflow.com/a/38080051/2834898\n     *\n     * @returns {{ name: string, version: string }}\n     */\n    static browser() {\n        const ua = navigator.userAgent;\n        let tem;\n        let M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\n\n        if (/trident/i.test(M[1])) {\n            tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n            return { name: 'ie', version: (tem[1] || '') };\n        }\n\n        if (M[1] === 'Chrome') {\n            tem = ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\n            if (tem !== null) {\n                return { name: tem[1].replace('OPR', 'opera'), version: tem[2] };\n            }\n        }\n\n        M = M[2]?[M[1], M[2]]:[navigator.appName, navigator.appVersion, '-?'];\n        if ((tem = ua.match(/version\\/(\\d+)/i)) !== null) {\n            M.splice(1, 1, tem[1]);\n        }\n\n        return { name: M[0].toLowerCase(), version: M[1] };\n    }\n\n    /**\n     * Check if the browser is controlled by Selenium.\n     * Note: This only works within the geckodriver.\n     * cf. http://stackoverflow.com/questions/33225947/can-a-website-detect-when-you-are-using-selenium-with-chromedriver\n     *\n     * @returns {boolean}\n     */\n    static isSeleniumBot() {\n        // noinspection JSUnresolvedVariable\n        return window.navigator.webdriver === true;\n    }\n\n    /**\n     * Return `true` if the given number is negative, or if the given string contains a negative sign :\n     * - everywhere in the string (by default), or\n     * - on the first character only if the `checkEverywhere` parameter is set to `false`.\n     *\n     * Note: `-0` is not a negative number since it's equal to `0`.\n     *\n     * @param {number|string} numberOrNumericString A Number, or a number represented by a string\n     * @param {string} negativeSignCharacter The single character that represent the negative sign\n     * @param {boolean} checkEverywhere If TRUE, then the negative sign is search everywhere in the numeric string (this is needed for instance if the string is '1234.56-')\n     * @returns {boolean}\n     */\n    static isNegative(numberOrNumericString, negativeSignCharacter = '-', checkEverywhere = true) {\n        if (numberOrNumericString === negativeSignCharacter) {\n            return true;\n        }\n\n        if (numberOrNumericString === '') {\n            return false;\n        }\n\n        if (AutoNumericHelper.isNumber(numberOrNumericString)) {\n            return numberOrNumericString < 0;\n        }\n\n        if (checkEverywhere) {\n            return this.contains(numberOrNumericString, negativeSignCharacter);\n        }\n\n        return this.isNegativeStrict(numberOrNumericString, negativeSignCharacter);\n    }\n\n    /**\n     * Return `true` if the given string contains a negative sign on the first character (on the far left).\n     *\n     * @example isNegativeStrict('1234.56')     => false\n     * @example isNegativeStrict('1234.56-')    => false\n     * @example isNegativeStrict('-1234.56')    => true\n     * @example isNegativeStrict('-1,234.56 €') => true\n     *\n     * @param {string} numericString\n     * @param {string} negativeSignCharacter The single character that represent the negative sign\n     * @returns {boolean}\n     */\n    static isNegativeStrict(numericString, negativeSignCharacter = '-') {\n        return numericString.charAt(0) === negativeSignCharacter;\n    }\n\n    /**\n     * Return `true` if the very first character is the opening bracket, and if the rest of the `valueString` also has the closing bracket.\n     *\n     * @param {string} valueString\n     * @param {string} leftBracket\n     * @param {string} rightBracket\n     * @returns {boolean}\n     */\n    static isNegativeWithBrackets(valueString, leftBracket, rightBracket) {\n        return valueString.charAt(0) === leftBracket && this.contains(valueString, rightBracket);\n    }\n\n    /**\n     * Return `true` if the formatted or unformatted numeric string represent the value 0 (ie. '0,00 €'), or is empty (' €').\n     * This works since we test if there are any numbers from 1 to 9 in the string. If there is none, then the number is zero (or the string is empty).\n     *\n     * @param {string} numericString\n     * @returns {boolean}\n     */\n    static isZeroOrHasNoValue(numericString) {\n        return !(/[1-9]/g).test(numericString);\n    }\n\n    /**\n     * Return the negative version of the value (represented as a string) given as a parameter.\n     * The numeric string is a valid Javascript number when typecast to a `Number`.\n     *\n     * @param {string} value\n     * @returns {*}\n     */\n    static setRawNegativeSign(value) {\n        if (!this.isNegativeStrict(value, '-')) {\n            return `-${value}`;\n        }\n\n        return value;\n    }\n\n    /**\n     * Replace the character at the position `index` in the string `string` by the character(s) `newCharacter`.\n     *\n     * @param {string} string\n     * @param {int} index\n     * @param {string} newCharacter\n     * @returns {string}\n     */\n    static replaceCharAt(string, index, newCharacter) {\n        return `${string.substr(0, index)}${newCharacter}${string.substr(index + newCharacter.length)}`;\n    }\n\n    /**\n     * Return the value clamped to the nearest minimum/maximum value, as defined in the settings.\n     *\n     * @param {string|number} value\n     * @param {object} settings\n     * @returns {number}\n     */\n    static clampToRangeLimits(value, settings) {\n        //XXX This function always assume `settings.minimumValue` is lower than `settings.maximumValue`\n        return Math.max(settings.minimumValue, Math.min(settings.maximumValue, value));\n    }\n\n    /**\n     * Return the number of number or dot characters on the left side of the caret, in a formatted number.\n     *\n     * @param {string} formattedNumberString\n     * @param {int} caretPosition This must be a positive integer\n     * @param {string} decimalCharacter\n     * @returns {number}\n     */\n    static countNumberCharactersOnTheCaretLeftSide(formattedNumberString, caretPosition, decimalCharacter) {\n        // Here we count the dot and report it as a number character too, since it will 'stay' in the Javascript number when unformatted\n        const numberDotOrNegativeSign = new RegExp(`[0-9${decimalCharacter}-]`); // No need to escape the decimal character here, since it's in `[]`\n\n        let numberDotAndNegativeSignCount = 0;\n        for (let i = 0; i < caretPosition; i++) {\n            // Test if the character is a number, a dot or an hyphen. If it is, count it, otherwise ignore it\n            if (numberDotOrNegativeSign.test(formattedNumberString[i])) {\n                numberDotAndNegativeSignCount++;\n            }\n        }\n\n        return numberDotAndNegativeSignCount;\n    }\n\n    /**\n     * Walk the `formattedNumberString` from left to right, one char by one, counting the `formattedNumberStringIndex`.\n     * If the char is in the `rawNumberString` (starting at index 0), then `rawNumberStringIndex++`, and continue until\n     * there is no more characters in `rawNumberString`) or that `rawNumberStringIndex === caretPositionInRawValue`.\n     * When you stop, the `formattedNumberStringIndex` is the position where the caret should be set.\n     *\n     * @example\n     * 1234567|89.01   : position 7 (rawNumberString)\n     * 123.456.7|89,01 : position 9 (formattedNumberString)\n     *\n     * @param {string} rawNumberString\n     * @param {int} caretPositionInRawValue\n     * @param {string} formattedNumberString\n     * @param {string} decimalCharacter\n     * @returns {*}\n     */\n    static findCaretPositionInFormattedNumber(rawNumberString, caretPositionInRawValue, formattedNumberString, decimalCharacter) {\n        const formattedNumberStringSize = formattedNumberString.length;\n        const rawNumberStringSize = rawNumberString.length;\n\n        let formattedNumberStringIndex;\n        let rawNumberStringIndex = 0;\n        for (formattedNumberStringIndex = 0;\n            formattedNumberStringIndex < formattedNumberStringSize &&\n            rawNumberStringIndex < rawNumberStringSize &&\n            rawNumberStringIndex < caretPositionInRawValue;\n            formattedNumberStringIndex++) {\n            if (rawNumberString[rawNumberStringIndex] === formattedNumberString[formattedNumberStringIndex] ||\n                (rawNumberString[rawNumberStringIndex] === '.' && formattedNumberString[formattedNumberStringIndex] === decimalCharacter)) {\n                rawNumberStringIndex++;\n            }\n        }\n\n        return formattedNumberStringIndex;\n    }\n\n    /**\n     * Count the number of occurrence of the given character, in the given text.\n     *\n     * @param {string} character\n     * @param {string} text\n     * @returns {number}\n     */\n    static countCharInText(character, text) {\n        let charCounter = 0;\n        for (let i = 0; i < text.length; i++) {\n            if (text[i] === character) {\n                charCounter++;\n            }\n        }\n\n        return charCounter;\n    }\n\n    /**\n     * Return the index that can be used to set the caret position.\n     * This takes into account that the position is starting at '0', not 1.\n     *\n     * @param {int} characterCount\n     * @returns {number}\n     */\n    static convertCharacterCountToIndexPosition(characterCount) {\n        return Math.max(characterCount, characterCount - 1);\n    }\n\n    /**\n     * Cross browser routine for getting selected range/cursor position.\n     * Note: this also works with edge cases like contenteditable-enabled elements, and hidden inputs.\n     *\n     * @param {HTMLInputElement|EventTarget} element\n     * @returns {{}}\n     */\n    static getElementSelection(element) {\n        const position = {};\n\n        let isSelectionStartUndefined;\n        try {\n            isSelectionStartUndefined = this.isUndefined(element.selectionStart);\n        } catch (error) {\n            isSelectionStartUndefined = false;\n        }\n\n        try {\n            if (isSelectionStartUndefined) {\n                const selection = window.getSelection();\n                const selectionInfo = selection.getRangeAt(0);\n                position.start = selectionInfo.startOffset;\n                position.end = selectionInfo.endOffset;\n                position.length = position.end - position.start;\n            } else {\n                position.start = element.selectionStart;\n                position.end = element.selectionEnd;\n                position.length = position.end - position.start;\n            }\n        } catch (error) {\n            // Manages the cases where :\n            // - the 'contenteditable' elements that have no selections\n            // - the <input> element is of type 'hidden'\n            position.start = 0;\n            position.end = 0;\n            position.length = 0;\n        }\n\n        return position;\n    }\n\n    /**\n     * Cross browser routine for setting selected range/cursor position\n     *\n     * @param {HTMLInputElement|EventTarget} element\n     * @param {int} start\n     * @param {int|null} end\n     */\n    static setElementSelection(element, start, end = null) {\n        if (this.isUndefinedOrNullOrEmpty(end)) {\n            end = start;\n        }\n\n        if (this.isInputElement(element)) {\n            element.setSelectionRange(start, end);\n        } else if (!AutoNumericHelper.isNull(element.firstChild)) {\n            const range = document.createRange();\n            range.setStart(element.firstChild, start);\n            range.setEnd(element.firstChild, end);\n            const selection = window.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(range);\n        }\n    }\n\n    /**\n     * Function that throw error messages\n     *\n     * @param {string} message\n     * @throws\n     */\n    static throwError(message) {\n        throw new Error(message);\n    }\n\n    /**\n     * Function that display a warning messages, according to the debug level.\n     *\n     * @param {string} message\n     * @param {boolean} showWarning If FALSE, then the warning message is not displayed\n     */\n    static warning(message, showWarning = true) {\n        if (showWarning) {\n            /* eslint no-console: 0 */\n            console.warn(`Warning: ${message}`);\n        }\n    }\n\n    /**\n     * Return `true` if the given event is an instance of WheelEvent\n     *\n     * @static\n     * @param {event} event The event to test\n     * @returns {boolean} Return `true` if the event is an instance of WheelEvent, FALSE otherwise\n    */\n    static isWheelEvent(event) {\n        return event instanceof WheelEvent;\n    }\n\n    /**\n     * Return `true` if the given event is a wheelup event\n     *\n     * @param {WheelEvent} wheelEvent\n     * @returns {boolean}\n     */\n    static isWheelUpEvent(wheelEvent) {\n        if (!this.isWheelEvent(wheelEvent) || this.isUndefinedOrNullOrEmpty(wheelEvent.deltaY)) {\n            this.throwError(`The event passed as a parameter is not a valid wheel event, '${wheelEvent.type}' given.`);\n        }\n\n        return wheelEvent.deltaY < 0;\n    }\n\n    /**\n     * Return `true` if the given event is a wheeldown event\n     *\n     * @param {WheelEvent} wheelEvent\n     * @returns {boolean}\n     */\n    static isWheelDownEvent(wheelEvent) {\n        if (!this.isWheelEvent(wheelEvent) || this.isUndefinedOrNullOrEmpty(wheelEvent.deltaY)) {\n            this.throwError(`The event passed as a parameter is not a valid wheel event, '${wheelEvent.type}' given.`);\n        }\n\n        return wheelEvent.deltaY > 0;\n    }\n\n    /**\n     * Return `true` if the given event is an instance of WheelEvent and the deltaY value is equal to zero\n     *\n     * @param {WheelEvent} wheelEvent The event to test\n     * @returns {boolean} Return `true` if the event is an instance of WheelEvent and the deltaY value is equal to zero, FALSE otherwise\n     */\n    static isWheelEventWithZeroDeltaY(wheelEvent) {\n        return this.isWheelEvent(wheelEvent) && !this.isUndefinedOrNullOrEmpty(wheelEvent.deltaY) && wheelEvent.deltaY === 0;\n    }\n\n    /**\n     * Return the given raw value truncated at the given number of decimal places `decimalPlaces`.\n     * This function does not round the value.\n     *\n     * @example\n     * forceDecimalPlaces(123.45678, 0) -> '123.45678'\n     * forceDecimalPlaces(123.45678, 1) -> '123.4'\n     * forceDecimalPlaces(123.45678, 2) -> '123.45'\n     * forceDecimalPlaces(123.45678, 3) -> '123.456'\n     *\n     * @param {number} value\n     * @param {int} decimalPlaces\n     * @returns {number|string}\n     */\n    static forceDecimalPlaces(value, decimalPlaces) {\n        // We could make sure `decimalPlaces` is an integer and positive, but we'll leave that to the dev calling this function.\n        const [integerPart, decimalPart] = String(value).split('.');\n        if (!decimalPart) {\n            return value;\n        }\n\n        return `${integerPart}.${decimalPart.substr(0, decimalPlaces)}`;\n    }\n\n    /**\n     * Return the 'nearest rounded' value, according to the given step size.\n     * @example roundToNearest(264789, 10000)) => 260000\n     *\n     * @param {number} value\n     * @param {number} stepPlace\n     * @returns {*}\n     */\n    static roundToNearest(value, stepPlace = 1000) {\n        if (0 === value) {\n            return 0;\n        }\n\n        if (stepPlace === 0) {\n            this.throwError('The `stepPlace` used to round is equal to `0`. This value must not be equal to zero.');\n        }\n\n        return Math.round(value / stepPlace) * stepPlace;\n    }\n\n    /**\n     * Return the 'nearest rounded' value by automatically adding or subtracting the calculated offset to the initial value.\n     * This is done without having to pass a step to this function, and based on the size of the given `value`.\n     *\n     * @example                    Calculated offset\n     *           1 ->           1 (1)\n     *          14 ->          10 (10)\n     *         143 ->         140 (10)\n     *       1.278 ->       1.300 (100)\n     *      28.456 ->      28.500 (100)\n     *     276.345 ->     276.000 (1.000)\n     *   4.534.061 ->   4.530.000 (10.000)\n     *  66.723.844 ->  66.700.000 (100.000)\n     * 257.833.411 -> 258.000.000 (1.000.000)\n     *\n     *                           Initial   Added   Offset\n     * 2 decimalPlacesRawValue : 1.12   -> 2.00   (1)\n     * 3 decimalPlacesRawValue : 1.123  -> 2.000  (1)\n     *\n     * Special case when the `value` to round is between -1 and 1, excluded :\n     * @example\n     *     Number of             Initial   Result  Calculated\n     *     decimal places        value     (add)   offset\n     * 2 decimalPlacesRawValue : 0.12   -> 0.13    (0.01) : Math.pow(10, -2)\n     * 2 decimalPlacesRawValue : 0.01   -> 0.02    (0.01)\n     * 2 decimalPlacesRawValue : 0.00   -> 0.01    (0.01)\n     *\n     * 3 decimalPlacesRawValue : 0.123  -> 0.133   (0.01)  : Math.pow(10, -2)\n     * 3 decimalPlacesRawValue : 0.012  -> 0.013   (0.001) : Math.pow(10, -3)\n     * 3 decimalPlacesRawValue : 0.001  -> 0.001   (0.001)\n     * 3 decimalPlacesRawValue : 0.000  -> 0.001   (0.001)\n     *\n     * 4 decimalPlacesRawValue : 0.4123 -> 0.4200  (0.01)   : Math.pow(10, -2)\n     * 4 decimalPlacesRawValue : 0.0412 -> 0.0420  (0.001)  : Math.pow(10, -3)\n     * 4 decimalPlacesRawValue : 0.0041 -> 0.0042  (0.0001) : Math.pow(10, -4)\n     * 4 decimalPlacesRawValue : 0.0004 -> 0.0005  (0.0001)\n     * 4 decimalPlacesRawValue : 0.0000 -> 0.0001  (0.0001)\n     *\n     * @param {number} value\n     * @param {boolean} isAddition\n     * @param {int} decimalPlacesRawValue The precision needed by the `rawValue`\n     * @returns {*}\n     */\n    static modifyAndRoundToNearestAuto(value, isAddition, decimalPlacesRawValue) {\n        value = Number(this.forceDecimalPlaces(value, decimalPlacesRawValue)); // Make sure that '0.13000000001' is converted to the number of rawValue decimal places '0.13'\n\n        const absValue = Math.abs(value);\n        if (absValue >= 0 && absValue < 1) {\n            const rawValueMinimumOffset = Math.pow(10, -decimalPlacesRawValue);\n            if (value === 0) {\n                // 4 decimalPlacesRawValue : 0.0000 -> 0.0001 (0.0001)\n                return (isAddition)?rawValueMinimumOffset:-rawValueMinimumOffset;\n            }\n\n            let offset;\n            const minimumOffsetFirstDecimalPlaceIndex = decimalPlacesRawValue;\n            // Find where is the first non-zero decimal places\n            const indexFirstNonZeroDecimalPlace = this.indexFirstNonZeroDecimalPlace(value);\n            if (indexFirstNonZeroDecimalPlace >= minimumOffsetFirstDecimalPlaceIndex - 1) {\n                /* 4 decimalPlacesRawValue : 0.0041 -> 0.0042 (0.0001) : Math.pow(10, -4)\n                 * 4 decimalPlacesRawValue : 0.0004 -> 0.0005 (0.0001)\n                 */\n                offset = rawValueMinimumOffset;\n            } else {\n                offset = Math.pow(10, -(indexFirstNonZeroDecimalPlace + 1));\n            }\n\n            let result;\n            if (isAddition) {\n                result = value + offset;\n            } else {\n                result = value - offset;\n            }\n\n            return this.roundToNearest(result, offset);\n        } else {\n            // For values >= 1\n            value = parseInt(value, 10);\n            const lengthValue = Math.abs(value).toString().length; // `Math.abs()` is needed here to omit the negative sign '-' in case of a negative value\n\n            let pow;\n            switch (lengthValue) {\n                // Special cases for small numbers\n                case 1:\n                    pow = 0;\n                    break;\n                case 2:\n                case 3:\n                    pow = 1;\n                    break;\n                case 4:\n                case 5:\n                    pow = 2;\n                    break;\n                // Default behavior\n                default:\n                    pow = lengthValue - 3;\n            }\n            const offset = Math.pow(10, pow);\n\n            let result;\n            if (isAddition) {\n                result = value + offset;\n            } else {\n                result = value - offset;\n            }\n\n            if (result <= 10 && result >= -10) {\n                return result;\n            }\n\n            return this.roundToNearest(result, offset);\n        }\n    }\n\n    /**\n     * Return the 'nearest rounded' value automatically by adding the calculated offset to the initial value.\n     * This will limit the result to the given number of decimal places `decimalPlacesLimit`.\n     *\n     * @param {number} value\n     * @param {int} decimalPlacesLimit\n     * @returns {*}\n     */\n    static addAndRoundToNearestAuto(value, decimalPlacesLimit) {\n        return this.modifyAndRoundToNearestAuto(value, true, decimalPlacesLimit);\n    }\n\n    /**\n     * Return the 'nearest rounded' value automatically by subtracting the calculated offset to the initial value.\n     * This will limit the result to the given number of decimal places `decimalPlacesLimit`.\n     *\n     * @param {number} value\n     * @param {int} decimalPlacesLimit\n     * @returns {*}\n     */\n    static subtractAndRoundToNearestAuto(value, decimalPlacesLimit) {\n        return this.modifyAndRoundToNearestAuto(value, false, decimalPlacesLimit);\n    }\n\n    /**\n     * Take an arabic number as a string and return a javascript number.\n     * By default, this function does not try to convert the arabic decimal and thousand separator characters.\n     * This returns `NaN` is the conversion is not possible.\n     * Based on http://stackoverflow.com/a/17025392/2834898\n     *\n     * @param {string} arabicNumbers\n     * @param {boolean} returnANumber If `true`, return a Number, otherwise return a String\n     * @param {boolean} parseDecimalCharacter\n     * @param {boolean} parseThousandSeparator\n     * @returns {string|number|NaN}\n     */\n    static arabicToLatinNumbers(arabicNumbers, returnANumber = true, parseDecimalCharacter = false, parseThousandSeparator = false) {\n        if (this.isNull(arabicNumbers)) {\n            return arabicNumbers;\n        }\n\n        let result = arabicNumbers.toString();\n        if (result === '') {\n            return arabicNumbers;\n        }\n\n        if (result.match(/[٠١٢٣٤٥٦٧٨٩۴۵۶]/g) === null) {\n            // If no Arabic/Persian numbers are found, return the numeric string or number directly\n            if (returnANumber) {\n                result = Number(result);\n            }\n\n            return result;\n        }\n\n        if (parseDecimalCharacter) {\n            result = result.replace(/٫/, '.'); // Decimal character\n        }\n\n        if (parseThousandSeparator) {\n            result = result.replace(/٬/g, ''); // Thousand separator\n        }\n\n        // Replace the numbers only\n        result = result.replace(/[٠١٢٣٤٥٦٧٨٩]/g, d => d.charCodeAt(0) - 1632) // Arabic numbers\n            .replace(/[۰۱۲۳۴۵۶۷۸۹]/g, d => d.charCodeAt(0) - 1776); // Persian numbers\n\n        // `NaN` has precedence over the string `'NaN'`\n        const resultAsNumber = Number(result);\n        if (isNaN(resultAsNumber)) {\n            return resultAsNumber;\n        }\n\n        if (returnANumber) {\n            result = resultAsNumber;\n        }\n\n        return result;\n    }\n\n    /**\n     * Create a custom event and immediately sent it from the given element.\n     * By default, if no element is given, the event is thrown from `document`.\n     *\n     * @param {string} eventName\n     * @param {HTMLElement|HTMLDocument|EventTarget} element\n     * @param {object} detail\n     * @param {boolean} bubbles Set to `true` if the event must bubble up\n     * @param {boolean} cancelable Set to `true` if the event must be cancelable\n     */\n    static triggerEvent(eventName, element = document, detail = null, bubbles = true, cancelable = true) {\n        let event;\n        if (window.CustomEvent) {\n            event = new CustomEvent(eventName, { detail, bubbles , cancelable }); // This is not supported by default by IE ; We use the polyfill for IE9 and later.\n        } else {\n            event = document.createEvent('CustomEvent');\n            event.initCustomEvent(eventName, bubbles, cancelable, { detail });\n        }\n\n        element.dispatchEvent(event);\n    }\n\n    /**\n     * Function to parse minimumValue, maximumValue & the input value to prepare for testing to determine if the value falls within the min / max range.\n     * Return an object example: minimumValue: \"999999999999999.99\" returns the following \"{s: -1, e: 12, c: Array[15]}\".\n     *\n     * This function is adapted from Big.js https://github.com/MikeMcl/big.js/. Many thanks to Mike.\n     *\n     * @param {number|string} n A numeric value.\n     * @returns {{}}\n     */\n    static parseStr(n) {\n        const x = {}; // A Big number instance.\n        let e;\n        let i;\n        let nL;\n        let j;\n\n        // Minus zero?\n        if (n === 0 && 1 / n < 0) {\n            n = '-0';\n        }\n\n        // Determine sign. 1 positive, -1 negative\n        n = n.toString();\n        if (this.isNegativeStrict(n, '-')) {\n            n = n.slice(1);\n            x.s = -1;\n        } else {\n            x.s = 1;\n        }\n\n        // Decimal point?\n        e = n.indexOf('.');\n        if (e > -1) {\n            n = n.replace('.', '');\n        }\n\n        // Length of string if no decimal character\n        if (e < 0) {\n            // Integer\n            e = n.length;\n        }\n\n        // Determine leading zeros\n        i = (n.search(/[1-9]/i) === -1) ? n.length : n.search(/[1-9]/i);\n        nL = n.length;\n        if (i === nL) {\n            // Zero\n            x.e = 0;\n            x.c = [0];\n        } else {\n            // Determine trailing zeros\n            for (j = nL - 1; n.charAt(j) === '0'; j -= 1) {\n                nL -= 1;\n            }\n            nL -= 1;\n\n            // Decimal location\n            x.e = e - i - 1;\n            x.c = [];\n\n            // Convert string to array of digits without leading/trailing zeros\n            for (e = 0; i <= nL; i += 1) {\n                x.c[e] = +n.charAt(i);\n                e += 1;\n            }\n        }\n\n        return x;\n    }\n\n    /**\n     * Function to test if the input value falls with the Min / Max settings.\n     * This uses the parsed strings for the above parseStr function.\n     *\n     * This function is adapted from Big.js https://github.com/MikeMcl/big.js/. Many thanks to Mike.\n     *\n     * @param {object} y Big number instance\n     * @param {object} x Big number instance\n     * @returns {*}\n     */\n    static testMinMax(y, x) {\n        const xc = x.c;\n        const yc = y.c;\n        let i = x.s;\n        let j = y.s;\n        let k = x.e;\n        let l = y.e;\n\n        // Either zero?\n        if (!xc[0] || !yc[0]) {\n            let result;\n            if (!xc[0]) {\n                result = !yc[0]?0:-j;\n            } else {\n                result = i;\n            }\n            return result;\n        }\n\n        // Signs differ?\n        if (i !== j) {\n            return i;\n        }\n        const xNeg = i < 0;\n\n        // Compare exponents\n        if (k !== l) {\n            return (k > l ^ xNeg)?1:-1;\n        }\n        i = -1;\n        k = xc.length;\n        l = yc.length;\n        j = (k < l) ? k : l;\n\n        // Compare digit by digit\n        for (i += 1; i < j; i += 1) {\n            if (xc[i] !== yc[i]) {\n                return (xc[i] > yc[i] ^ xNeg)?1:-1;\n            }\n        }\n\n        // Compare lengths\n        let result;\n        if (k === l) {\n            result = 0;\n        } else {\n            result = (k > l ^ xNeg)?1:-1;\n        }\n\n        return result;\n    }\n\n    /**\n     * Generate a random string.\n     * cf. http://stackoverflow.com/a/8084248/2834898\n     *\n     * @param {Number} strLength Length of the generated string (in character count)\n     * @returns {string}\n     */\n    static randomString(strLength = 5) {\n        return Math.random()\n            .toString(36)\n            .substr(2, strLength);\n    }\n\n    /**\n     * Return the DOM element when passed either a DOM element or a selector string.\n     *\n     * @param {HTMLElement|string} domElementOrSelector\n     * @returns {HTMLElement}\n     */\n    static domElement(domElementOrSelector) {\n        let domElement;\n        if (AutoNumericHelper.isString(domElementOrSelector)) {\n            domElement = document.querySelector(domElementOrSelector);\n        } else {\n            domElement = domElementOrSelector;\n        }\n\n        return domElement;\n    }\n\n    /**\n     * Retrieve the current element value.\n     *\n     * @param {HTMLElement|HTMLInputElement|EventTarget} element\n     * @returns {number|string|null}\n     */\n    static getElementValue(element) {\n        if (element.tagName.toLowerCase() === 'input') {\n            return element.value;\n        }\n\n        return this.text(element);\n    }\n\n    /**\n     * Modify the element value directly.\n     *\n     * @param {HTMLElement|HTMLInputElement} element\n     * @param {number|string|null} value\n     */\n    static setElementValue(element, value = null) {\n        if (element.tagName.toLowerCase() === 'input') {\n            element.value = value;\n        } else {\n            element.textContent = value;\n        }\n    }\n\n    /**\n     * Set the invalid state for the given element.\n     * A custom message can be passed as the second argument.\n     * Note: This does not work with contenteditable elements\n     *\n     * @param {HTMLElement|HTMLInputElement} element\n     * @param {string|null} message\n     * @throws Error\n     */\n    static setInvalidState(element, message = 'Invalid') {\n        if (message === '' || this.isNull(message)) this.throwError('Cannot set the invalid state with an empty message.');\n\n        element.setCustomValidity(message);\n    }\n\n    /**\n     * Set the valid state for the given element.\n     * Note: This does not work with contenteditable elements\n     *\n     * @param {HTMLElement|HTMLInputElement} element\n     */\n    static setValidState(element) {\n        element.setCustomValidity('');\n    }\n\n    /**\n     * This clone the given object, and return it.\n     * WARNING: This does not do a deep cloning.\n     * cf. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Examples\n     * //TODO Add a `deep` option to clone object with more than one depth\n     *\n     * @param {object} obj\n     * @returns {object}\n     */\n    static cloneObject(obj) {\n        return Object.assign({}, obj);\n    }\n\n    /**\n     * Return a 'camelized' version of the given string.\n     * By default, this assume that :\n     * - the separators are hyphens '-',\n     * - the 'data-' string should be removed, and\n     * - that the very first word should not be capitalized.\n     *\n     * @example camelize('data-currency-symbol') => 'currencySymbol'\n     *\n     * @param {string} str Text to camelize\n     * @param {string} separator Character that separate each word\n     * @param {boolean} removeData If set to `true`, remove the `data-` part that you can find on some html attributes\n     * @param {boolean} skipFirstWord If set to `true`, do not capitalize the very first word\n     * @returns {string|null}\n     */\n    static camelize(str, separator = '-', removeData = true, skipFirstWord = true) {\n        if (this.isNull(str)) {\n            return null;\n        }\n\n        if (removeData) {\n            str = str.replace(/^data-/, '');\n        }\n\n        // Cut the string into words\n        const words = str.split(separator);\n\n        // Capitalize each word\n        let result = words.map(word => `${word.charAt(0).toUpperCase()}${word.slice(1)}`);\n\n        // Then concatenate them back\n        result = result.join('');\n\n        if (skipFirstWord) {\n            // Skip the very first letter\n            result = `${result.charAt(0).toLowerCase()}${result.slice(1)}`;\n        }\n\n        return result;\n    }\n\n    /**\n     * Return the text component of the given DOM element.\n     *\n     * @param {Element} domElement\n     * @returns {string}\n     */\n    static text(domElement) {\n        const nodeType = domElement.nodeType;\n\n        let result;\n        // cf. https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n        if (nodeType === Node.ELEMENT_NODE ||\n            nodeType === Node.DOCUMENT_NODE ||\n            nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            result = domElement.textContent;\n        } else if (nodeType === Node.TEXT_NODE) {\n            result = domElement.nodeValue;\n        } else {\n            result = '';\n        }\n\n        return result;\n    }\n\n    /**\n     * Set the text content of the given DOM element.\n     * @param {Element} domElement\n     * @param {string} text\n     */\n    static setText(domElement, text) {\n        const nodeType = domElement.nodeType;\n        if (nodeType === Node.ELEMENT_NODE ||\n            nodeType === Node.DOCUMENT_NODE ||\n            nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            domElement.textContent = text;\n        }\n        //TODO Display a warning if that function does not do anything?\n    }\n\n    /**\n     * Filter out the given `arr` array with the elements found in `excludedElements`.\n     * This returns a new array and does not modify the source.\n     * cf. verification here : http://codepen.io/AnotherLinuxUser/pen/XpvrMg?editors=0012\n     *\n     * @param {Array} arr\n     * @param {Array} excludedElements\n     * @returns {*|Array.<T>}\n     */\n    static filterOut(arr, excludedElements) {\n        return arr.filter(element => !this.isInArray(element, excludedElements));\n    }\n\n    /**\n     * Remove the trailing zeros in the decimal part of a number.\n     *\n     * @param {string} numericString\n     * @returns {*}\n     */\n    static trimPaddedZerosFromDecimalPlaces(numericString) {\n        numericString = String(numericString);\n        if (numericString === '') {\n            return '';\n        }\n\n        const [integerPart, decimalPart] = numericString.split('.');\n        if (this.isUndefinedOrNullOrEmpty(decimalPart)) {\n            return integerPart;\n        }\n\n        const trimmedDecimalPart = decimalPart.replace(/0+$/g, '');\n\n        let result;\n        if (trimmedDecimalPart === '') {\n            result = integerPart;\n        } else {\n            result = `${integerPart}.${trimmedDecimalPart}`;\n        }\n\n        return result;\n    }\n\n    /**\n     * Return the top-most hovered item by the mouse cursor.\n     *\n     * @returns {*}\n     */\n    static getHoveredElement() {\n        const hoveredElements = [...document.querySelectorAll(':hover')];\n        return hoveredElements[hoveredElements.length - 1];\n    }\n\n    /**\n     * Return the given array trimmed to the given length.\n     * @example arrayTrim([1, 2, 3, 4], 2) -> [1, 2]\n     *\n     * @param {Array} array\n     * @param {Number} length\n     * @returns {*}\n     */\n    static arrayTrim(array, length) {\n        const arrLength = array.length;\n        if (arrLength === 0 || length > arrLength) {\n            // Also manage the case where `length` is higher than the current length\n            return array;\n        }\n\n        if (length < 0) {\n            return [];\n        }\n\n        array.length = parseInt(length, 10);\n\n        return array;\n    }\n\n    /**\n     * Merge all the given arrays by keeping only unique elements, and return an array with de-duplicated values.\n     * cf. http://stackoverflow.com/a/27664971/2834898\n     *\n     * @param {...array} arrays\n     * @returns {[*]}\n     */\n    static arrayUnique(...arrays) {\n        return [...new Set([].concat(...arrays))];\n    }\n\n    /**\n     * Merge all the given Maps by keeping only unique elements, and return a new Map with de-duplicated keys.\n     *\n     * @param {...Map} mapObjects\n     * @returns {Map}\n     */\n    static mergeMaps(...mapObjects) {\n        return new Map(mapObjects.reduce((as, b) => as.concat([...b]), []));\n    }\n\n    /**\n     * Search the given `value` in the object `obj`, and return the very first key it finds\n     *\n     * @param {object} obj\n     * @param {string|number} value\n     * @returns {*|null}\n     */\n    static objectKeyLookup(obj, value) {\n        const result = Object.entries(obj).find(array => array[1] === value);\n        let key = null;\n        if (result !== void(0)) {\n            key = result[0];\n        }\n\n        return key;\n    }\n\n    /**\n     * Insert the single character `char` in the string `str` at the given position `index`\n     *\n     * @param {string} str\n     * @param {string} char\n     * @param {int} index\n     * @returns {string}\n     */\n    static insertAt(str, char, index) {\n        str = String(str);\n\n        if (index > str.length) {\n            throw new Error(`The given index is out of the string range.`);\n        }\n\n        if (char.length !== 1) {\n            throw new Error('The given string `char` should be only one character long.');\n        }\n\n        if (str === '' && index === 0) {\n            return char;\n        }\n\n        return `${str.slice(0, index)}${char}${str.slice(index)}`;\n    }\n\n    /**\n     * Convert the given scientific notation to the 'expanded' decimal notation\n     *\n     * @example scientificToDecimal('-123.4567e-6') returns '-0.0001234567'\n     *\n     * @param {number|string} val\n     * @returns {number|string}\n     */\n    static scientificToDecimal(val) {\n        // Check that the val is a Number\n        const numericValue = Number(val);\n        if (isNaN(numericValue)) {\n            return NaN;\n        }\n\n        // Check if the number is in a scientific notation\n        val                = String(val);\n        const isScientific = this.contains(val, 'e') || this.contains(val, 'E');\n\n        if (!isScientific) {\n            return val;\n        }\n\n        // Convert the scientific notation to a numeric string\n        let [value, exponent] = val.split(/e/i);\n        const isNegative = value < 0;\n        if (isNegative) {\n            value = value.replace('-', '');\n        }\n\n        const isNegativeExponent = +exponent < 0;\n        if (isNegativeExponent) {\n            exponent = exponent.replace('-', ''); // Remove the negative sign\n        }\n\n        const [int, float] = value.split(/\\./);\n\n        let result;\n        if (isNegativeExponent) {\n            if (int.length > exponent) {\n                // Place the decimal point at the int length count minus exponent\n                result = this.insertAt(int, '.', int.length - exponent);\n            } else {\n                // If that decimal point is greater than the int length, pad with zeros (ie. Number('-123.4567e-6') --> -0.0001234567)\n                result = `0.${'0'.repeat(exponent - int.length)}${int}`;\n            }\n\n            result = `${result}${float?float:''}`;\n        } else { // Positive exponent\n            if (float) {\n                value = `${int}${float}`; // Remove the '.', if any\n                if (exponent < float.length) {\n                    result = this.insertAt(value, '.', +exponent + int.length);\n                } else {\n                    result = `${value}${'0'.repeat(exponent - float.length)}`;\n                }\n            } else {\n                value = value.replace('.', ''); // Single case where val is '1.e4'\n                result = `${value}${'0'.repeat(Number(exponent))}`;\n            }\n        }\n\n        if (isNegative) {\n            // Put back the negative sign, if any\n            result = `-${result}`;\n        }\n\n        return result;\n    }\n}\n","/**\n * Math expression tokenizer/parser/evaluator functions for autoNumeric.js\n *\n * @author Alexandre Bonneau <alexandre.bonneau@linuxfr.eu>\n * @copyright © 2019 Alexandre Bonneau\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sub license, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Recursively evaluate the abstract syntax tree (AST) and return the result for the given sub-tree\n */\nexport default class Evaluator {\n    constructor(ast) {\n        if (ast === null) {\n            throw new Error(`Invalid AST`);\n        }\n\n        // return this.evaluate(ast);\n    }\n\n    evaluate(subtree) {\n        if (subtree === void(0) || subtree === null) {\n            throw new Error(`Invalid AST sub-tree`);\n        }\n\n        if (subtree.type === 'number') {\n            return subtree.value;\n        } else if (subtree.type === 'unaryMinus') {\n            return -this.evaluate(subtree.left);\n        } else {\n            const left  = this.evaluate(subtree.left);\n            const right = this.evaluate(subtree.right);\n\n            switch (subtree.type) {\n                case 'op_+':\n                    return Number(left) + Number(right);\n                case 'op_-':\n                    return left - right;\n                case 'op_*':\n                    return left * right;\n                case 'op_/':\n                    return left / right;\n                default :\n                    throw new Error(`Invalid operator '${subtree.type}'`);\n            }\n        }\n    }\n}\n","/**\n * Math expression tokenizer/parser/evaluator functions for autoNumeric.js\n *\n * @author Alexandre Bonneau <alexandre.bonneau@linuxfr.eu>\n * @copyright © 2019 Alexandre Bonneau\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sub license, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * The Abstract Syntax Tree node\n *\n * Each node carries the node information such as type (operator type), value (if it's a leaf), and the left and right branches\n */\nexport default class ASTNode {\n    /*\n    constructor() {\n        // this.type = void(0);\n        // this.value = 0;\n        // this.left = null;\n        // this.right = null;\n    }\n    */\n\n    static createNode(type, left, right) {\n        const node = new ASTNode();\n        node.type = type;\n        node.left = left;\n        node.right = right;\n\n        return node;\n    }\n\n    static createUnaryNode(left) {\n        const node = new ASTNode();\n        node.type = 'unaryMinus';\n        node.left = left;\n        node.right = null;\n\n        return node;\n    }\n\n    static createLeaf(value) {\n        const node = new ASTNode();\n        node.type = 'number';\n        node.value = value;\n\n        return node;\n    }\n}\n","/**\n * Math expression tokenizer/parser/evaluator functions for autoNumeric.js\n *\n * @author Alexandre Bonneau <alexandre.bonneau@linuxfr.eu>\n * @copyright © 2019 Alexandre Bonneau\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sub license, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Data structure used by the Lexer and Parser classes\n */\nexport default class Token {\n    constructor(type, value, symbol) {\n        this.type = type;\n        this.value = value;\n        this.symbol = symbol;\n    }\n}\n","/**\n * Math expression tokenizer/parser/evaluator functions for autoNumeric.js\n *\n * @author Alexandre Bonneau <alexandre.bonneau@linuxfr.eu>\n * @copyright © 2019 Alexandre Bonneau\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sub license, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport AutoNumericHelper from '../AutoNumericHelper';\nimport Token             from './Token';\n\nexport default class Lexer {\n    constructor(text) {\n        this.text  = text;\n        this.textLength = text.length;\n        this.index = 0;\n        this.token = new Token('Error', 0, 0);\n    }\n\n    /**\n     * Ignore white spaces and increment the index count until a non-space character is found\n     * @private\n     */\n    _skipSpaces() {\n        while (this.text[this.index] === ' ' && this.index <= this.textLength) {\n            this.index++;\n        }\n    }\n\n    /**\n     * Return the current index\n     *\n     * @returns {number}\n     */\n    getIndex() {\n        return this.index;\n    }\n\n    /**\n     * Return the next token object\n     *\n     * @param {string} decimalCharacter The decimal character to use in the float numbers\n     * @returns {Token}\n     */\n    getNextToken(decimalCharacter = '.') {\n        this._skipSpaces();\n\n        // Test for the end of text\n        if (this.textLength === this.index) {\n            this.token.type = 'EOT'; // End of text\n\n            return this.token;\n        }\n\n        // If the current character is a digit read a number\n        if (AutoNumericHelper.isDigit(this.text[this.index])) {\n            this.token.type  = 'num';\n            this.token.value = this._getNumber(decimalCharacter);\n\n            return this.token;\n        }\n\n        // Check if the current character is an operator or parentheses\n        this.token.type = 'Error';\n        switch (this.text[this.index]) {\n            case '+': this.token.type = '+'; break;\n            case '-': this.token.type = '-'; break;\n            case '*': this.token.type = '*'; break;\n            case '/': this.token.type = '/'; break;\n            case '(': this.token.type = '('; break;\n            case ')': this.token.type = ')'; break;\n        }\n\n        if (this.token.type !== 'Error') {\n            this.token.symbol = this.text[this.index];\n            this.index++;\n        } else {\n            throw new Error(`Unexpected token '${this.token.symbol}' at position '${this.token.index}' in the token function`);\n        }\n\n        return this.token;\n    }\n\n    /**\n     * Return the integer or float number starting from the `this.index` string index\n     *\n     * @param {string} decimalCharacter The decimal character to use in the float numbers\n     *\n     * @returns {string}\n     * @private\n     */\n    _getNumber(decimalCharacter) {\n        this._skipSpaces();\n\n        const startIndex = this.index;\n        while (this.index <= this.textLength && AutoNumericHelper.isDigit(this.text[this.index])) { // Integer part\n            this.index++;\n        }\n\n        if (this.text[this.index] === decimalCharacter) {\n            this.index++;\n        }\n\n        while (this.index <= this.textLength && AutoNumericHelper.isDigit(this.text[this.index])) { // Decimal part, if any\n            this.index++;\n        }\n\n        if (this.index === startIndex) {\n            throw new Error(`No number has been found while it was expected`);\n        }\n\n        // Convert the localized float number to a Javascript number\n        return this.text.substring(startIndex, this.index).replace(decimalCharacter, '.');\n    }\n}\n","/**\n * Math expression tokenizer/parser/evaluator functions for autoNumeric.js\n *\n * @author Alexandre Bonneau <alexandre.bonneau@linuxfr.eu>\n * @copyright © 2019 Alexandre Bonneau\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sub license, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport ASTNode from './ASTNode';\nimport Lexer   from './Lexer';\n\n/**\n * Math expression parser using the shunting-yard algorithm\n *\n * This implements the following BNF grammar:\n * EXP       -> TERM MORE_EXP\n * MORE_EXP  -> + TERM MORE_EXP |\n *              - TERM MORE_EXP |\n *              epsilon\n * TERM      -> FACTOR MORE_TERM\n * MORE_TERM -> * FACTOR MORE_TERM |\n *              / FACTOR MORE_TERM |\n *              epsilon\n * FACTOR    -> number |\n *             ( EXP ) |\n *             - FACTOR\n */\nexport default class Parser {\n    /**\n     * Parse the given string, and generate an abstract syntax tree (AST) from the math expression\n     *\n     * @param {string} text\n     * @param {string} customDecimalCharacter The custom decimal character to use in floats\n     * @returns {ASTNode}\n     */\n    constructor(text, customDecimalCharacter = '.') {\n        this.text = text;\n        this.decimalCharacter = customDecimalCharacter;\n        this.lexer = new Lexer(text);\n        this.token = this.lexer.getNextToken(this.decimalCharacter);\n\n        return this._exp();\n    }\n\n    _exp() {\n        const termNode = this._term();\n        const exprNode = this._moreExp();\n\n        //TODO Do not create an 'empty' node where this is added to 0\n        return ASTNode.createNode('op_+', termNode, exprNode);\n    }\n\n    _moreExp() {\n        let termNode;\n        let exprNode;\n        switch (this.token.type) {\n            case '+':\n                this.token = this.lexer.getNextToken(this.decimalCharacter);\n                termNode = this._term();\n                exprNode = this._moreExp();\n\n                return ASTNode.createNode('op_+', exprNode, termNode);\n            case '-':\n                this.token = this.lexer.getNextToken(this.decimalCharacter);\n                termNode = this._term();\n                exprNode = this._moreExp();\n\n                return ASTNode.createNode('op_-', exprNode, termNode);\n        }\n\n        return ASTNode.createLeaf(0);\n    }\n\n    _term() {\n        const factorNode = this._factor();\n        const termsNode = this._moreTerms();\n\n        //TODO Do not create an 'empty' node where this is multiplied by 1\n        return ASTNode.createNode('op_*', factorNode, termsNode);\n    }\n\n    _moreTerms() {\n        let factorNode;\n        let termsNode;\n        switch (this.token.type) {\n            case '*':\n                this.token = this.lexer.getNextToken(this.decimalCharacter);\n                factorNode = this._factor();\n                termsNode = this._moreTerms();\n\n                return ASTNode.createNode('op_*', termsNode, factorNode);\n            case '/':\n                this.token = this.lexer.getNextToken(this.decimalCharacter);\n                factorNode = this._factor();\n                termsNode = this._moreTerms();\n\n                return ASTNode.createNode('op_/', termsNode, factorNode);\n        }\n\n        return ASTNode.createLeaf(1);\n    }\n\n    _factor() {\n        let expression;\n        let factor;\n        let value;\n        switch (this.token.type) {\n            case 'num':\n                value = this.token.value;\n                this.token = this.lexer.getNextToken(this.decimalCharacter);\n\n                return ASTNode.createLeaf(value);\n            case '-':\n                this.token = this.lexer.getNextToken(this.decimalCharacter);\n                factor = this._factor();\n\n                return ASTNode.createUnaryNode(factor);\n            case '(':\n                this.token = this.lexer.getNextToken(this.decimalCharacter);\n                expression = this._exp();\n                this._match(')');\n\n                return expression;\n            default: {\n                throw new Error(`Unexpected token '${this.token.symbol}' with type '${this.token.type}' at position '${this.token.index}' in the factor function`);\n            }\n        }\n    }\n\n    _match(expected) {\n        const index = this.lexer.getIndex() - 1;\n        if (this.text[index] === expected) {\n            this.token = this.lexer.getNextToken(this.decimalCharacter);\n        } else {\n            throw new Error(`Unexpected token '${this.token.symbol}' at position '${index}' in the match function`);\n        }\n    }\n}\n","/**\n *               AutoNumeric.js\n *\n * @version      4.10.7\n * @date         2024-10-14 UTC 01:11\n *\n * @authors      2016-2024 Alexandre Bonneau <alexandre.bonneau@linuxfr.eu>\n *               2009-2016 Bob Knothe <bob.knothe@gmail.com>\n * @contributors Sokolov Yura and others, cf. AUTHORS\n * @copyright    Alexandre Bonneau & Robert J. Knothe\n * @since        2009-08-09\n *\n * @summary      AutoNumeric is a standalone Javascript library\n *               that provides live *as-you-type* formatting for\n *               international numbers and currencies.\n *\n * @link         http://autonumeric.org\n * @docs         https://docs.autonumeric.org\n *\n *               Note : Some functions are borrowed from big.js\n * @see          https://github.com/MikeMcl/big.js/\n *\n * Please report any bugs to https://github.com/autoNumeric/autoNumeric\n *\n * @license      Released under the MIT License\n * @link         http://www.opensource.org/licenses/mit-license.php\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sub license, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n//TODO Prevent having to enter relative path in the js files (i.e. using `./AutoNumericHelper` instead of just `AutoNumericHelper`) (cf. http://moduscreate.com/es6-es2015-import-no-relative-path-webpack/)\nimport AutoNumericHelper from './AutoNumericHelper';\nimport AutoNumericEnum   from './AutoNumericEnum';\nimport Evaluator         from './maths/Evaluator';\nimport Parser            from './maths/Parser';\n\n/**\n * Class declaration for the AutoNumeric object.\n *\n * An AutoNumeric element is an object wrapper that keeps a reference to the DOM element it manages (usually an <input> one), and provides autoNumeric-specific variables and functions.\n */\nexport default class AutoNumeric {\n    static options; // Those static declarations are only used by the IDE, to prevent error messages not finding those fields declarations\n    static events;\n    static defaultSettings;\n    static predefinedOptions;\n\n    /**\n     * Return the autoNumeric version number (for debugging purpose)\n     *\n     * @returns {string}\n     */\n    static version() {\n        return '4.10.6';\n    }\n\n    /**\n     * Initialize the AutoNumeric object onto the given DOM element, and attach the settings and related event listeners to it.\n     * The options passed as a parameter is an object that contains the settings (i.e. {digitGroupSeparator: \".\", decimalCharacter: \",\", currencySymbol: '€ '})\n     *\n     * @example\n     * anElement = new AutoNumeric(domElement); // With the default options\n     * anElement = new AutoNumeric(domElement, { options }); // With one option object\n     * anElement = new AutoNumeric(domElement, 'euroPos'); // With a named pre-defined string\n     * anElement = new AutoNumeric(domElement, [{ options1 }, 'euroPos', { options2 }]); // With multiple option objects (the latest option overwriting the previous ones)\n     * anElement = new AutoNumeric(domElement, null, { options }); // With one option object, and a failed initial value\n     * anElement = new AutoNumeric(domElement).french(); // With one pre-defined language object\n     * anElement = new AutoNumeric(domElement).french({ options });// With one pre-defined language object and additional options that will override the defaults\n     *\n     * // ...or init and set the value in one call :\n     * anElement = new AutoNumeric(domElement, 12345.789); // With the default options, and an initial value\n     * anElement = new AutoNumeric(domElement, 12345.789, { options });\n     * anElement = new AutoNumeric(domElement, '12345.789', { options });\n     * anElement = new AutoNumeric(domElement, 12345.789, 'euroPos');\n     * anElement = new AutoNumeric(domElement, 12345.789, [{ options1 }, 'euroPos', { options2 }]);\n     * anElement = new AutoNumeric(domElement, 12345.789).french({ options });\n     * anElement = new AutoNumeric(domElement, 12345.789, { options }).french({ options }); // Not really helpful, but possible\n     *\n     * // The AutoNumeric constructor class can also accept a string as a css selector. Under the hood this use `QuerySelector` and limit itself to only the first element it finds.\n     * anElement = new AutoNumeric('.myCssClass > input');\n     * anElement = new AutoNumeric('.myCssClass > input', { options });\n     * anElement = new AutoNumeric('.myCssClass > input', 'euroPos');\n     * anElement = new AutoNumeric('.myCssClass > input', [{ options1 }, 'euroPos', { options2 }]);\n     * anElement = new AutoNumeric('.myCssClass > input', 12345.789);\n     * anElement = new AutoNumeric('.myCssClass > input', 12345.789, { options });\n     * anElement = new AutoNumeric('.myCssClass > input', 12345.789, 'euroPos');\n     * anElement = new AutoNumeric('.myCssClass > input', 12345.789, [{ options1 }, 'euroPos', { options2 }]);\n     * anElement = new AutoNumeric('.myCssClass > input', null, { options }); // With a failed initial value\n     * anElement = new AutoNumeric('.myCssClass > input', 12345.789).french({ options });\n     *\n     * @param {object|Array|number|string} arg1\n     * @param {object|Array|number|string|null} arg2\n     * @param {object|Array|number|string|null} arg3\n     * @throws\n     */\n    constructor(arg1 = null, arg2 = null, arg3 = null) {\n        // --------------------------------------------------------\n        // -------------- Initialization\n        // Initialize the arguments\n        const { domElement, initialValue, userOptions } = AutoNumeric._setArgumentsValues(arg1, arg2, arg3);\n\n        // Initialize the element\n        this.domElement = domElement;\n\n        // Generate the settings\n        this.defaultRawValue = ''; // The default raw value to set when initializing an AutoNumeric object\n        this._setSettings(userOptions, false);\n        //TODO If `styleRules` is not null, add by default a class 'autoNumeric' that adds transition to color, background-color, border-color properties\n        // Check if the DOM element is supported\n        this._checkElement();\n\n        // Store the additional attributes inside the AutoNumeric object\n        // Note: This variable is needed and not a duplicate of `initialValueOnFirstKeydown` nor `valueOnFocus` since it serves a different purpose and has a different lifecycle\n        this.savedCancellableValue = null;\n\n        // Initialize the undo/redo variables\n        this.historyTable = []; // Keep track of *all* valid states of the element value\n        this.historyTableIndex = -1; // Pointer to the current undo/redo state. This will be set to '0' during initialization since it first adds itself.\n        this.onGoingRedo = false; // Variable that keeps track if a 'redo' is ongoing (in order to prevent an 'undo' to be launch when releasing the shift key before the ctrl key after a 'redo' shortcut)\n\n        // Initialize the parent form element, if any\n        this.parentForm = this._getParentForm();\n\n        // Set the initial value if it exists and if the `formatOnPageLoad` option will allow it\n        if (!this.runOnce && this.settings.formatOnPageLoad) {\n            // Format the element value if needed\n            this._formatDefaultValueOnPageLoad(initialValue);\n        } else {\n            // Otherwise set the `rawValue` and the element value, but do not format the latter yet\n            let valueToSet;\n            if (AutoNumericHelper.isNull(initialValue)) {\n                switch (this.settings.emptyInputBehavior) {\n                    case AutoNumeric.options.emptyInputBehavior.min:\n                        valueToSet = this.settings.minimumValue;\n                        break;\n                    case AutoNumeric.options.emptyInputBehavior.max:\n                        valueToSet = this.settings.maximumValue;\n                        break;\n                    case AutoNumeric.options.emptyInputBehavior.zero:\n                        valueToSet = '0';\n                        break;\n                    case AutoNumeric.options.emptyInputBehavior.focus:\n                    case AutoNumeric.options.emptyInputBehavior.press:\n                    case AutoNumeric.options.emptyInputBehavior.always:\n                        valueToSet = '';\n                        break;\n                    // It's possible to set the `null` value as the initial value\n                    case AutoNumeric.options.emptyInputBehavior.null:\n                        valueToSet = null;\n                        break;\n                    // When `emptyInputBehavior` is a number or a string representing a number\n                    default :\n                        valueToSet = this.settings.emptyInputBehavior;\n                }\n            } else {\n                valueToSet = initialValue;\n            }\n\n            this._setElementAndRawValue(valueToSet);\n        }\n\n        this.runOnce = true;\n\n        // Add the events listeners only on input or editable elements\n        this.hasEventListeners = false;\n        if (this.isInputElement || this.isContentEditable) {\n            if (!this.settings.noEventListeners) {\n                //XXX Here we make sure the global list is created after creating the event listeners, to only create the event listeners on `document` once\n                this._createEventListeners();\n            }\n\n            this._setWritePermissions(true);\n        }\n\n        // Save the initial values (html attribute + element.value) for the pristine test\n        this._saveInitialValues(initialValue);\n        \n        // Set up the data for the persistent storage solution (i.e. sessionStorage)\n        this.storageNamePrefix = 'AUTO_'; // The prefix for the raw value storage name variable can be modified here\n        this._setPersistentStorageName();\n\n        // --------------------------------------------------------\n        // -------------- Tracking\n        this.validState = true; // Keep track if the element is in the valid state\n        this.isFocused = false; // Keep track if the element is currently focused\n        this.isWheelEvent = false; // Keep track if a mouse wheel event is currently ongoing\n        this.isDropEvent = false; // Keep track if a drop event is currently ongoing\n        this.isEditing = false; // Keep track if the user is currently editing the element\n        this.rawValueOnFocus = void(0); // Keep track of the rawValue (needed to define if a change event must be sent on blur or enter key)\n        // Watch any external changes to the element value/textContent/nodeValue and `set()` the new value so that it gets formatted/saved in the history\n        this.internalModification = false; // This is temporarily set to `true` only when the AutoNumeric object does update the element value\n        this.attributeToWatch = this._getAttributeToWatch();\n        this.getterSetter = Object.getOwnPropertyDescriptor(this.domElement.__proto__, this.attributeToWatch);\n        this._addWatcher();\n\n        if (this.settings.createLocalList) {\n            // Keep track of every AutoNumeric elements that this object initialized\n            this._createLocalList();\n        }\n\n        // Keep track of all AutoNumeric elements in the current web page\n        this.constructor._addToGlobalList(this);\n\n        // --------------------------------------------------------\n        // -------------- Methods\n        // Create the global functions\n        this.global = {\n            /**\n             * Set the same given element value for each element in the local AutoNumeric element list, and format those elements immediately\n             *\n             * @param {number|string} newValue The value must be a number or a numeric string\n             * @param {object} options A settings object that will override the current settings. Note: the update is done only if the `newValue` is defined.\n             */\n            set: (newValue, options = null) => {\n                this.autoNumericLocalList.forEach(aNObject => {\n                    aNObject.set(newValue, options);\n                });\n            },\n\n            /**\n             * Set the value given value directly as the DOM element value, without formatting it beforehand.\n             * This sets the same unformatted value for each element in the local AutoNumeric element list.\n             *\n             * @param {number|string} value\n             * @param {object} options\n             */\n            setUnformatted: (value, options = null) => {\n                this.autoNumericLocalList.forEach(aNObject => {\n                    aNObject.setUnformatted(value, options);\n                });\n            },\n\n            /**\n             * This is an alias of the `getNumericString()` function, and should not be used anymore.\n             *\n             * @param {function|null} callback If a callback is passed, then the result is passed to it as its first argument, and the AutoNumeric object has its second\n             * @returns {Array<string>}\n             * @deprecated\n             */\n            get: (callback = null) => {\n                const result = [];\n                this.autoNumericLocalList.forEach(aNObject => {\n                    result.push(aNObject.get());\n                });\n                this._executeCallback(result, callback);\n\n                return result;\n            },\n\n            /**\n             * Return an array of the unformatted values (as a string) of each AutoNumeric element of the local AutoNumeric element list\n             *\n             * @param {function|null} callback If a callback is passed, then the result is passed to it as its first argument, and the AutoNumeric object has its second\n             * @returns {Array<string>}\n             */\n            getNumericString: (callback = null) => {\n                const result = [];\n                this.autoNumericLocalList.forEach(aNObject => {\n                    result.push(aNObject.getNumericString());\n                });\n                this._executeCallback(result, callback);\n\n                return result;\n            },\n\n            /**\n             * Return an array of the current formatted values (as a string) of each AutoNumeric element of the local AutoNumeric element list\n             *\n             * @param {function|null} callback If a callback is passed, then the result is passed to it as its first argument, and the AutoNumeric object has its second\n             * @returns {Array<string>}\n             */\n            getFormatted: (callback = null) => {\n                const result = [];\n                this.autoNumericLocalList.forEach(aNObject => {\n                    result.push(aNObject.getFormatted());\n                });\n                this._executeCallback(result, callback);\n\n                return result;\n            },\n\n            /**\n             * Return an array of the element unformatted values (as a real Javascript number), for each element of the local AutoNumeric element list\n             *\n             * @param {function|null} callback If a callback is passed, then the result is passed to it as its first argument, and the AutoNumeric object has its second\n             * @returns {Array<number>}\n             */\n            getNumber: (callback = null) => {\n                const result = [];\n                this.autoNumericLocalList.forEach(aNObject => {\n                    result.push(aNObject.getNumber());\n                });\n                this._executeCallback(result, callback);\n\n                return result;\n            },\n\n            /**\n             * Returns the unformatted values (following the `outputFormat` setting) of each element of the local AutoNumeric element list into an array\n             *\n             * @param {function|null} callback If a callback is passed, then the result is passed to it as its first argument, and the AutoNumeric object has its second\n             * @returns {Array<string>}\n             */\n            getLocalized: (callback = null) => {\n                const result = [];\n                this.autoNumericLocalList.forEach(aNObject => {\n                    result.push(aNObject.getLocalized());\n                });\n                this._executeCallback(result, callback);\n\n                return result;\n            },\n\n            /**\n             * Force each element of the local AutoNumeric element list to reformat its value\n             */\n            reformat: () => {\n                this.autoNumericLocalList.forEach(aNObject => {\n                    aNObject.reformat();\n                });\n            },\n\n            /**\n             * Remove the formatting and keep only the raw unformatted value (as a numericString) in each element of the local AutoNumeric element list\n             */\n            unformat: () => {\n                this.autoNumericLocalList.forEach(aNObject => {\n                    aNObject.unformat();\n                });\n            },\n\n            /**\n             * Remove the formatting and keep only the localized unformatted value in the element, with the option to override the default outputFormat if needed\n             *\n             * @param {null|string} forcedOutputFormat If set to something different from `null`, then this is used as an overriding outputFormat option\n             */\n            unformatLocalized: (forcedOutputFormat = null) => {\n                this.autoNumericLocalList.forEach(aNObject => {\n                    aNObject.unformatLocalized(forcedOutputFormat);\n                });\n            },\n\n            /**\n             * Updates the AutoNumeric settings, and immediately format the elements accordingly, for each element of the local AutoNumeric element list\n             *\n             * @param {object} newOptions This can be either one or more option objects\n             */\n            update: (...newOptions) => {\n                this.autoNumericLocalList.forEach(aNObject => {\n                    aNObject.update(...newOptions);\n                });\n            },\n\n            /**\n             * Return `true` if *all* the autoNumeric-managed elements are pristine, if their raw value hasn't changed.\n             * By default, this returns `true` if the raw unformatted value is still the same even if the formatted one has changed (due to a configuration update for instance).\n             *\n             * @param {boolean} checkOnlyRawValue If set to `true`, the pristine value is done on the raw unformatted value, not the formatted one. If set to `false`, this also checks that the formatted value hasn't changed.\n             * @returns {boolean}\n             */\n            isPristine: (checkOnlyRawValue = true) => {\n                let isPristine = true;\n                this.autoNumericLocalList.forEach(aNObject => {\n                    if (isPristine && !aNObject.isPristine(checkOnlyRawValue)) {\n                        isPristine = false;\n                    }\n                });\n\n                return isPristine;\n            },\n\n            /**\n             * Execute the `clear()` method on each AutoNumeric object in the local AutoNumeric element list\n             *\n             * @param {boolean} forceClearAll\n             */\n            clear: (forceClearAll = false) => {\n                this.autoNumericLocalList.forEach(aNObject => {\n                    aNObject.clear(forceClearAll);\n                });\n            },\n\n            /**\n             * Execute the `remove()` method on each AutoNumeric object in the local AutoNumeric element list\n             */\n            remove: () => {\n                this.autoNumericLocalList.forEach(aNObject => {\n                    aNObject.remove();\n                });\n            },\n\n            /**\n             * Execute the `wipe()` method on each AutoNumeric object in the local AutoNumeric element list\n             */\n            wipe: () => {\n                this.autoNumericLocalList.forEach(aNObject => {\n                    aNObject.wipe();\n                });\n            },\n\n            /**\n             * Execute the `nuke()` method on each AutoNumeric object in the local AutoNumeric element list\n             */\n            nuke: () => {\n                this.autoNumericLocalList.forEach(aNObject => {\n                    aNObject.nuke();\n                });\n            },\n\n            /**\n             * Return `true` if the given AutoNumeric object (or DOM element) is in the local AutoNumeric element list\n             *\n             * @param {HTMLElement|HTMLInputElement|AutoNumeric} domElementOrAutoNumericObject\n             * @returns {*}\n             */\n            has: domElementOrAutoNumericObject => {\n                let result;\n                if (domElementOrAutoNumericObject instanceof AutoNumeric) {\n                    result = this.autoNumericLocalList.has(domElementOrAutoNumericObject.node());\n                } else {\n                    result = this.autoNumericLocalList.has(domElementOrAutoNumericObject);\n                }\n\n                return result;\n            },\n\n            /**\n             * Add an existing AutoNumeric object (or DOM element) to the local AutoNumeric element list, using the DOM element as the key.\n             * This manages the case where `addObject` is used on an AutoNumeric object that already has multiple elements in its local list.\n             *\n             * @param {HTMLElement|HTMLInputElement|AutoNumeric} domElementOrAutoNumericObject\n             */\n            addObject: domElementOrAutoNumericObject => {\n                // Start with the same data, whatever the user passed as arguments\n                let domElement;\n                let otherAutoNumericObject;\n                if (domElementOrAutoNumericObject instanceof AutoNumeric) {\n                    domElement = domElementOrAutoNumericObject.node();\n                    otherAutoNumericObject = domElementOrAutoNumericObject;\n                } else {\n                    domElement = domElementOrAutoNumericObject;\n                    otherAutoNumericObject = AutoNumeric.getAutoNumericElement(domElement);\n                }\n\n                // Check if the current autoNumeric object has a local list\n                if (!this._hasLocalList()) {\n                    this._createLocalList();\n                }\n\n                // Check if the other autoNumeric object has a local list...\n                let otherANLocalList = otherAutoNumericObject._getLocalList();\n                if (otherANLocalList.size === 0) {\n                    // Special case if the other AutoNumeric object has an empty local list, then populate itself to it\n                    otherAutoNumericObject._createLocalList();\n                    otherANLocalList = otherAutoNumericObject._getLocalList(); // Update the other local list\n                }\n\n                let mergedLocalLists;\n                if (otherANLocalList instanceof Map) {\n                    // ...If it does, merge the local lists together\n                    mergedLocalLists = AutoNumericHelper.mergeMaps(this._getLocalList(), otherANLocalList);\n                } else {\n                    // ...If not, just set the current local list onto the other AutoNumeric object\n                    // We need to specify the AutoNumeric object, otherwise the `_addToLocalList` function would not correctly add the AutoNumeric object since we would not have a reference to it, but a reference to the current AutoNumeric object on which is called this method.\n                    this._addToLocalList(domElement, otherAutoNumericObject);\n                    mergedLocalLists = this._getLocalList();\n                }\n\n                // Update the resulting list, on all the objects of that local list (so that we can indifferently use `init()` on any object belonging to that list)\n                mergedLocalLists.forEach(aNObject => {\n                    aNObject._setLocalList(mergedLocalLists);\n                });\n            },\n\n            /**\n             * Remove the given AutoNumeric object (or DOM element) from the local AutoNumeric element list, using the DOM element as the key.\n             * If this function attempts to remove the current AutoNumeric object from the local list, a warning is shown, but the deletion is still done.\n             *\n             * Special cases :\n             * - If the current object removes itself, then it's removed from the shared local list, then a new empty local list is used/created\n             * - If another object remove this object, then a local list with only this object is used/created\n             *\n             * @param {HTMLElement|HTMLInputElement|AutoNumeric} domElementOrAutoNumericObject\n             * @param {boolean} keepCurrentANObject If set to `false`, then the function will also remove the current AutoNumeric object if asked, otherwise it will ignore it and print a warning message\n             */\n            removeObject: (domElementOrAutoNumericObject, keepCurrentANObject = false) => {\n                // Start with the same data, whatever the user passed as arguments\n                let domElement;\n                let otherAutoNumericObject;\n                if (domElementOrAutoNumericObject instanceof AutoNumeric) {\n                    domElement = domElementOrAutoNumericObject.node();\n                    otherAutoNumericObject = domElementOrAutoNumericObject;\n                } else {\n                    domElement = domElementOrAutoNumericObject;\n                    otherAutoNumericObject = AutoNumeric.getAutoNumericElement(domElement);\n                }\n\n                // Remove the other object from the local list\n                const initialCompleteLocalList = this.autoNumericLocalList;\n                this.autoNumericLocalList.delete(domElement);\n\n                // Update the local list for all objects in it\n                initialCompleteLocalList.forEach(aNObject => {\n                    aNObject._setLocalList(this.autoNumericLocalList);\n                });\n\n                if (!keepCurrentANObject && domElement === this.node()) {\n                    // This object is removed by itself\n                    // Empty the object local list\n                    otherAutoNumericObject._setLocalList(new Map);\n                } else {\n                    // This object is removed by another object\n                    // Set the local list for the removed object, with only this object in it\n                    otherAutoNumericObject._createLocalList();\n                }\n            },\n\n            /**\n             * Remove all elements from the shared list, effectively emptying it.\n             * This is the equivalent of calling `detach()` on each of its elements.\n             *\n             * @param {boolean} keepEachANObjectInItsOwnList If set to `true`, then instead of completely emptying the local list of each AutoNumeric objects, each one of those keeps itself in its own local list\n             */\n            empty: (keepEachANObjectInItsOwnList = false) => {\n                const initialCompleteLocalList = this.autoNumericLocalList;\n\n                // Update the local list for all objects in it\n                initialCompleteLocalList.forEach(aNObject => {\n                    if (keepEachANObjectInItsOwnList) {\n                        aNObject._createLocalList();\n                    } else {\n                        aNObject._setLocalList(new Map);\n                    }\n                });\n            },\n\n            /**\n             * Return an array containing all the AutoNumeric DOM elements that have been initialized by each other\n             *\n             * @returns {Array<HTMLElement>}\n             */\n            elements: () => {\n                const result = [];\n                this.autoNumericLocalList.forEach(aNObject => {\n                    result.push(aNObject.node());\n                });\n\n                return result;\n            },\n\n            /**\n             * Return the `Map` object directly\n             * @returns {Map}\n             */\n            getList: () => this.autoNumericLocalList,\n\n            /**\n             * Return the number of element in the local AutoNumeric element list\n             * @returns {number}\n             */\n            size: () => this.autoNumericLocalList.size,\n        };\n\n        // Create the functions that will allow to change each setting one by one\n        /**\n         * For each option, we define if we need to reformat the element content (does changing the options should change the way its value is displayed?).\n         * If yes, then we use the `update()` for force a reformat, otherwise, we just update the `settings` object.\n         */\n        this.options = {\n            /**\n             * Reset any options set previously, by overwriting them with the default settings\n             *\n             * @returns {AutoNumeric}\n             */\n            reset                        : () => {\n                //TODO Add a `settings` parameter so that the user can reset to a specific set of settings. This is different than update since it drops any non-default settings before using those new settings.\n                this.settings = { rawValue : this.defaultRawValue }; // Here we pass the default rawValue in order to prevent showing a warning that we try to set an `undefined` value\n                this.update(AutoNumeric.defaultSettings);\n\n                return this;\n            },\n            allowDecimalPadding          : allowDecimalPadding => {\n                this.update({ allowDecimalPadding });\n\n                return this;\n            },\n            alwaysAllowDecimalCharacter  : alwaysAllowDecimalCharacter => { //FIXME Test this\n                this.update({ alwaysAllowDecimalCharacter });\n\n                return this;\n            },\n            caretPositionOnFocus         : caretPositionOnFocus => { //FIXME test this\n                this.settings.caretPositionOnFocus = caretPositionOnFocus;\n\n                return this;\n            },\n            createLocalList              : createLocalList => {\n                this.settings.createLocalList = createLocalList;\n\n                // Delete the local list when this is set to `false`, create it if this is set to `true` and there is not pre-existing list\n                if (this.settings.createLocalList) {\n                    if (!this._hasLocalList()) {\n                        this._createLocalList();\n                    }\n                } else {\n                    this._deleteLocalList();\n                }\n\n                return this;\n            },\n            currencySymbol               : currencySymbol => {\n                this.update({ currencySymbol });\n\n                return this;\n            },\n            currencySymbolPlacement      : currencySymbolPlacement => {\n                this.update({ currencySymbolPlacement });\n\n                return this;\n            },\n            decimalCharacter             : decimalCharacter => {\n                this.update({ decimalCharacter });\n\n                return this;\n            },\n            decimalCharacterAlternative  : decimalCharacterAlternative => {\n                this.settings.decimalCharacterAlternative = decimalCharacterAlternative;\n\n                return this;\n            },\n            /**\n             * Update the decimal places globally, which means this override any previously set number of decimal shown on focus, on blur, or in the raw value.\n             *\n             * @param {int} decimalPlaces\n             * @returns {AutoNumeric}\n             */\n            decimalPlaces                : decimalPlaces => {\n                AutoNumericHelper.warning('Using `options.decimalPlaces()` instead of calling the specific `options.decimalPlacesRawValue()`, `options.decimalPlacesShownOnFocus()` and `options.decimalPlacesShownOnBlur()` methods will reset those options.\\nPlease call the specific methods if you do not want to reset those.', this.settings.showWarnings);\n                this.update({ decimalPlaces });\n\n                return this;\n            },\n            decimalPlacesRawValue        : decimalPlacesRawValue => { //FIXME test this\n                this.update({ decimalPlacesRawValue });\n\n                return this;\n            },\n            decimalPlacesShownOnBlur     : decimalPlacesShownOnBlur => {\n                this.update({ decimalPlacesShownOnBlur });\n\n                return this;\n            },\n            decimalPlacesShownOnFocus    : decimalPlacesShownOnFocus => {\n                this.update({ decimalPlacesShownOnFocus });\n\n                return this;\n            },\n            defaultValueOverride         : defaultValueOverride => {\n                this.update({ defaultValueOverride });\n\n                return this;\n            },\n            digitalGroupSpacing          : digitalGroupSpacing => {\n                this.update({ digitalGroupSpacing });\n\n                return this;\n            },\n            digitGroupSeparator          : digitGroupSeparator => {\n                this.update({ digitGroupSeparator });\n\n                return this;\n            },\n            divisorWhenUnfocused         : divisorWhenUnfocused => {\n                this.update({ divisorWhenUnfocused });\n\n                return this;\n            },\n            emptyInputBehavior           : emptyInputBehavior => {\n                if (this.rawValue === null && emptyInputBehavior !== AutoNumeric.options.emptyInputBehavior.null) {\n                    // Special case : if the current `rawValue` is `null` and the `emptyInputBehavior` is changed to something else than `'null'`, then it makes that `rawValue` invalid.\n                    // Here we can either prevent the option update and throw an error, or still accept the option update and update the value from `null` to `''`.\n                    // We cannot keep `rawValue` to `null` since if `emptyInputBehavior` is not set to `null`, lots of function assume `rawValue` is a string.\n                    AutoNumericHelper.warning(`You are trying to modify the \\`emptyInputBehavior\\` option to something different than \\`'null'\\` (${emptyInputBehavior}), but the element raw value is currently set to \\`null\\`. This would result in an invalid \\`rawValue\\`. In order to fix that, the element value has been changed to the empty string \\`''\\`.`, this.settings.showWarnings);\n                    this.rawValue = '';\n                }\n\n                this.update({ emptyInputBehavior });\n\n                return this;\n            },\n            eventBubbles                 : eventBubbles => {\n                this.settings.eventBubbles = eventBubbles;\n\n                return this;\n            },\n            eventIsCancelable            : eventIsCancelable => {\n                this.settings.eventIsCancelable = eventIsCancelable;\n\n                return this;\n            },\n            failOnUnknownOption          : failOnUnknownOption => {\n                this.settings.failOnUnknownOption = failOnUnknownOption; //TODO test this with unit tests\n\n                return this;\n            },\n            formatOnPageLoad             : formatOnPageLoad => {\n                this.settings.formatOnPageLoad = formatOnPageLoad; //TODO test this with unit tests\n\n                return this;\n            },\n            formulaMode                  : formulaMode => {\n                this.settings.formulaMode = formulaMode; //TODO test this with unit tests\n\n                return this;\n            },\n            historySize                  : historySize => {\n                this.settings.historySize = historySize;\n\n                return this;\n            },\n            invalidClass                 : invalidClass => {\n                this.settings.invalidClass = invalidClass; //TODO test this with unit tests\n\n                return this;\n            },\n            isCancellable                : isCancellable => {\n                this.settings.isCancellable = isCancellable; //TODO test this with unit tests\n\n                return this;\n            },\n            leadingZero                  : leadingZero => {\n                this.update({ leadingZero });\n\n                return this;\n            },\n            maximumValue                 : maximumValue => {\n                this.update({ maximumValue });\n\n                return this;\n            },\n            minimumValue                 : minimumValue => {\n                this.update({ minimumValue });\n\n                return this;\n            },\n            modifyValueOnUpDownArrow     : modifyValueOnUpDownArrow => {\n                this.settings.modifyValueOnUpDownArrow = modifyValueOnUpDownArrow; //TODO test this with unit tests\n\n                return this;\n            },\n            modifyValueOnWheel           : modifyValueOnWheel => {\n                this.settings.modifyValueOnWheel = modifyValueOnWheel; //TODO test this with unit tests\n\n                return this;\n            },\n            negativeBracketsTypeOnBlur   : negativeBracketsTypeOnBlur => {\n                this.update({ negativeBracketsTypeOnBlur });\n\n                return this;\n            },\n            negativePositiveSignPlacement: negativePositiveSignPlacement => {\n                this.update({ negativePositiveSignPlacement });\n\n                return this;\n            },\n            negativeSignCharacter        : negativeSignCharacter => {\n                this.update({ negativeSignCharacter });\n\n                return this;\n            },\n            negativePositiveSignBehavior : negativePositiveSignBehavior => {\n                this.settings.negativePositiveSignBehavior = negativePositiveSignBehavior; //TODO test this with unit tests\n\n                return this;\n            },\n            noEventListeners             : noEventListeners => { //TODO test this with unit tests\n                if (noEventListeners === AutoNumeric.options.noEventListeners.noEvents && this.settings.noEventListeners === AutoNumeric.options.noEventListeners.addEvents) {\n                    // Remove the events once\n                    this._removeEventListeners();\n                }\n\n                this.update({ noEventListeners });\n\n                return this;\n            },\n            onInvalidPaste               : onInvalidPaste => {\n                this.settings.onInvalidPaste = onInvalidPaste; //TODO test this with unit tests\n\n                return this;\n            },\n            outputFormat                 : outputFormat => {\n                this.settings.outputFormat = outputFormat;\n\n                return this;\n            },\n            overrideMinMaxLimits         : overrideMinMaxLimits => {\n                this.update({ overrideMinMaxLimits });\n\n                return this;\n            },\n            positiveSignCharacter        : positiveSignCharacter => {\n                this.update({ positiveSignCharacter });\n\n                return this;\n            },\n            rawValueDivisor              : rawValueDivisor => {\n                this.update({ rawValueDivisor });\n\n                return this;\n            },\n            readOnly                     : readOnly => {\n                // When changing the readOnly attribute, the raw and formatted values do not change, so no need to call the costly 'update()` method\n                this.settings.readOnly = readOnly;\n                this._setWritePermissions();\n\n                return this;\n            },\n            roundingMethod               : roundingMethod => {\n                this.update({ roundingMethod });\n\n                return this;\n            },\n            saveValueToSessionStorage    : saveValueToSessionStorage => {\n                this.update({ saveValueToSessionStorage });\n\n                return this;\n            },\n            symbolWhenUnfocused          : symbolWhenUnfocused => {\n                this.update({ symbolWhenUnfocused });\n\n                return this;\n            },\n            selectNumberOnly             : selectNumberOnly => {\n                this.settings.selectNumberOnly = selectNumberOnly; //TODO test this with unit tests\n\n                return this;\n            },\n            selectOnFocus                : selectOnFocus => {\n                this.settings.selectOnFocus = selectOnFocus; //TODO test this with unit tests\n\n                return this;\n            },\n            serializeSpaces              : serializeSpaces => {\n                this.settings.serializeSpaces = serializeSpaces; //TODO test this with unit tests\n\n                return this;\n            },\n            showOnlyNumbersOnFocus       : showOnlyNumbersOnFocus => {\n                this.update({ showOnlyNumbersOnFocus });\n\n                return this;\n            },\n            showPositiveSign             : showPositiveSign => {\n                this.update({ showPositiveSign });\n\n                return this;\n            },\n            showWarnings                 : showWarnings => {\n                this.settings.showWarnings = showWarnings; //TODO test this with unit tests\n\n                return this;\n            },\n            styleRules                   : styleRules => {\n                this.update({ styleRules });\n\n                return this;\n            },\n            suffixText                   : suffixText => {\n                this.update({ suffixText });\n\n                return this;\n            },\n            unformatOnHover              : unformatOnHover => {\n                this.settings.unformatOnHover = unformatOnHover; //TODO test this with unit tests\n\n                return this;\n            },\n            unformatOnSubmit             : unformatOnSubmit => {\n                this.settings.unformatOnSubmit = unformatOnSubmit; //TODO test this with unit tests\n\n                return this;\n            },\n            upDownStep                   : upDownStep => {\n                this.settings.upDownStep = upDownStep; //TODO test this with unit tests\n\n                return this;\n            },\n            valuesToStrings              : valuesToStrings => {\n                this.update({ valuesToStrings });\n\n                return this;\n            },\n            watchExternalChanges         : watchExternalChanges => { //TODO test this with unit tests\n                this.update({ watchExternalChanges });\n\n                return this;\n            },\n            wheelOn                      : wheelOn => {\n                this.settings.wheelOn = wheelOn; //TODO test this with unit tests\n\n                return this;\n            },\n            wheelStep                    : wheelStep => {\n                this.settings.wheelStep = wheelStep; //TODO test this with unit tests\n\n                return this;\n            },\n        };\n\n        // Once the autoNumeric element has been initialized, broadcast that message with additional info.\n        // Note: When using `AutoNumeric.multiple()`, one event is sent *per* element initialized\n        this._triggerEvent(AutoNumeric.events.initialized, this.domElement, {\n            newValue   : AutoNumericHelper.getElementValue(this.domElement),\n            newRawValue: this.rawValue,\n            error      : null,\n            aNElement  : this,\n        });\n    }\n\n    /**\n     * Take the parameters given to the AutoNumeric object, and output the three variables that are needed to finish initializing it :\n     * - domElement : The target DOM element\n     * - initialValue : The initial value, or `null` if none is given\n     * - userOptions : The option object\n     *\n     * @param {object|Array|number|string} arg1\n     * @param {object|Array|number|string|null} arg2\n     * @param {object|Array|number|string|null} arg3\n     * @returns {{domElement: *, initialValue: *, userOptions: *}}\n     * @throws\n     * @private\n     */\n    static _setArgumentsValues(arg1, arg2, arg3) {\n        // Basic check on the argument count\n        if (AutoNumericHelper.isNull(arg1)) {\n            AutoNumericHelper.throwError('At least one valid parameter is needed in order to initialize an AutoNumeric object');\n        }\n\n        // Prepare the arguments in order to create the AutoNumeric object with the right values\n        // Test the argument types\n        const isArg1Element = AutoNumericHelper.isElement(arg1);\n        const isArg1String = AutoNumericHelper.isString(arg1);\n\n        const isArg2Object = AutoNumericHelper.isObject(arg2);\n        const isArg2Array = Array.isArray(arg2) && arg2.length > 0;\n        const isArg2Number = AutoNumericHelper.isNumberOrArabic(arg2) || arg2 === '';\n        const isArg2PreDefinedOptionName = this._isPreDefinedOptionValid(arg2);\n        const isArg2Null = AutoNumericHelper.isNull(arg2);\n        const isArg2EmptyString = AutoNumericHelper.isEmptyString(arg2);\n\n        const isArg3Object = AutoNumericHelper.isObject(arg3);\n        const isArg3Array = Array.isArray(arg3) && arg3.length > 0;\n        const isArg3Null = AutoNumericHelper.isNull(arg3);\n        const isArg3PreDefinedOptionName = this._isPreDefinedOptionValid(arg3);\n\n        // Given the parameters passed, sort the data and return a stable state before the initialization\n        let domElement;\n        let userOptions;\n        let initialValue;\n\n        //TODO Simplify those tests -->\n        if (isArg1Element && isArg2Null && isArg3Null) {\n            // new AutoNumeric(domElement); // With the default options\n            domElement = arg1;\n            initialValue = null;\n            userOptions = null;\n        } else if (isArg1Element && isArg2Number && isArg3Null) {\n            // new AutoNumeric(domElement, 12345.789); // With the default options, and an initial value\n            // new AutoNumeric(domElement, '12345.789');\n            domElement = arg1;\n            initialValue = arg2;\n            userOptions = null;\n        } else if (isArg1Element && isArg2Object && isArg3Null) {\n            // new AutoNumeric(domElement, { options }); // With one option object\n            domElement = arg1;\n            initialValue = null;\n            userOptions = arg2;\n        } else if (isArg1Element && isArg2PreDefinedOptionName && isArg3Null) {\n            // new AutoNumeric(domElement, 'euroPos'); // With one pre-defined option name\n            domElement = arg1;\n            initialValue = null;\n            userOptions = this._getOptionObject(arg2);\n        } else if (isArg1Element && isArg2Array && isArg3Null) {\n            // new AutoNumeric(domElement, [{ options1 }, { options2 }]); // With multiple option objects (the latest option overwriting the previous ones)\n            domElement = arg1;\n            initialValue = null;\n            userOptions = this.mergeOptions(arg2);\n        } else if (isArg1Element && (isArg2Null || isArg2EmptyString) && isArg3Object) {\n            // new AutoNumeric(domElement, null, { options }); // With one option object\n            domElement = arg1;\n            initialValue = null;\n            userOptions = arg3;\n        } else if (isArg1Element && (isArg2Null || isArg2EmptyString) && isArg3Array) {\n            // new AutoNumeric(domElement, null, [{ options1 }, { options2 }]); // With multiple option objects\n            domElement = arg1;\n            initialValue = null;\n            userOptions = this.mergeOptions(arg3);\n        } else if (isArg1String && isArg2Null && isArg3Null) {\n            // new AutoNumeric('.myCssClass > input');\n            domElement = document.querySelector(arg1);\n            initialValue = null;\n            userOptions = null;\n        } else if (isArg1String && isArg2Object && isArg3Null) {\n            // new AutoNumeric('.myCssClass > input', { options });\n            domElement = document.querySelector(arg1);\n            initialValue = null;\n            userOptions = arg2;\n        } else if (isArg1String && isArg2PreDefinedOptionName && isArg3Null) {\n            // new AutoNumeric('.myCssClass > input', 'euroPos');\n            domElement = document.querySelector(arg1);\n            initialValue = null;\n            userOptions = this._getOptionObject(arg2);\n        } else if (isArg1String && isArg2Array && isArg3Null) {\n            // new AutoNumeric('.myCssClass > input', [{ options1 }, { options2 }]); // With multiple option objects\n            domElement = document.querySelector(arg1);\n            initialValue = null;\n            userOptions = this.mergeOptions(arg2);\n        } else if (isArg1String && (isArg2Null || isArg2EmptyString) && isArg3Object) {\n            // new AutoNumeric('.myCssClass > input', null, { options });\n            domElement = document.querySelector(arg1);\n            initialValue = null;\n            userOptions = arg3;\n        } else if (isArg1String && (isArg2Null || isArg2EmptyString) && isArg3Array) {\n            // new AutoNumeric('.myCssClass > input', null, [{ options1 }, { options2 }]); // With multiple option objects\n            domElement = document.querySelector(arg1);\n            initialValue = null;\n            userOptions = this.mergeOptions(arg3);\n        } else if (isArg1String && isArg2Number && isArg3Null) {\n            // new AutoNumeric('.myCssClass > input', 12345.789);\n            // new AutoNumeric('.myCssClass > input', '12345.789');\n            // new AutoNumeric('.myCssClass > input', '');\n            domElement = document.querySelector(arg1);\n            initialValue = arg2;\n            userOptions = null;\n        } else if (isArg1String && isArg2Number && isArg3Object) {\n            // new AutoNumeric('.myCssClass > input', 12345.789, { options });\n            // new AutoNumeric('.myCssClass > input', '12345.789', { options });\n            // new AutoNumeric('.myCssClass > input', '', { options });\n            domElement = document.querySelector(arg1);\n            initialValue = arg2;\n            userOptions = arg3;\n        } else if (isArg1String && isArg2Number && isArg3PreDefinedOptionName) {\n            // new AutoNumeric('.myCssClass > input', 12345.789, 'euroPos');\n            // new AutoNumeric('.myCssClass > input', '12345.789', 'euroPos');\n            // new AutoNumeric('.myCssClass > input', '', 'euroPos');\n            domElement = document.querySelector(arg1);\n            initialValue = arg2;\n            userOptions = this._getOptionObject(arg3);\n        } else if (isArg1String && isArg2Number && isArg3Array) {\n            // new AutoNumeric('.myCssClass > input', 12345.789, [{ options1 }, 'euroPos', { options2 }]);\n            // new AutoNumeric('.myCssClass > input', '12345.789', [{ options1 }, 'euroPos', { options2 }]);\n            // new AutoNumeric('.myCssClass > input', '', [{ options1 }, 'euroPos', { options2 }]);\n            domElement = document.querySelector(arg1);\n            initialValue = arg2;\n            userOptions = this.mergeOptions(arg3);\n        } else if (isArg1Element && isArg2Number && isArg3Object) {\n            // new AutoNumeric(domElement, 12345.789, { options });\n            // new AutoNumeric(domElement, '12345.789', { options });\n            // new AutoNumeric(domElement, '', { options });\n            domElement = arg1;\n            initialValue = arg2;\n            userOptions = arg3;\n        } else if (isArg1Element && isArg2Number && isArg3PreDefinedOptionName) {\n            // new AutoNumeric(domElement, 12345.789, 'euroPos');\n            // new AutoNumeric(domElement, '12345.789', 'euroPos');\n            // new AutoNumeric(domElement, '', 'euroPos');\n            domElement = arg1;\n            initialValue = arg2;\n            userOptions = this._getOptionObject(arg3);\n        } else if (isArg1Element && isArg2Number && isArg3Array) {\n            // new AutoNumeric(domElement, 12345.789, [{ options1 }, { options2 }]);\n            // new AutoNumeric(domElement, '12345.789', [{ options1 }, { options2 }]);\n            // new AutoNumeric(domElement, '', [{ options1 }, { options2 }]);\n            domElement = arg1;\n            initialValue = arg2;\n            userOptions = this.mergeOptions(arg3);\n        } else {\n            AutoNumericHelper.throwError(`The parameters given to the AutoNumeric object are not valid, '${arg1}', '${arg2}' and '${arg3}' given.`);\n        }\n\n        if (AutoNumericHelper.isNull(domElement)) {\n            AutoNumericHelper.throwError(`The selector '${arg1}' did not select any valid DOM element. Please check on which element you called AutoNumeric.`);\n        }\n\n        return { domElement, initialValue, userOptions };\n    }\n\n    /**\n     * Merge the option objects found in the given array `optionsArray`.\n     * If a `string` is found, then we try to get the related pre-defined option using that string as its name.\n     * When merging the options, the latest option overwrite any previously set. This allows to fine tune a pre-defined option for instance.\n     *\n     * @param {Array<object|string>} optionsArray\n     * @returns {{}}\n     */\n    static mergeOptions(optionsArray) {\n        // This allows the user to use multiple options (strings or objects) in an array, and overwrite the previous one with the next option element ; this is useful to tune the wanted format\n        const mergedOptions = {};\n        optionsArray.forEach(optionObjectOrPredefinedOptionString => {\n            Object.assign(mergedOptions, this._getOptionObject(optionObjectOrPredefinedOptionString));\n        });\n\n        return mergedOptions;\n    }\n\n    /**\n     * Return `true` if the given pre-defined option name is an attribute of the `AutoNumeric.predefinedOptions` object\n     *\n     * @param {string} preDefinedOptionName\n     * @returns {boolean}\n     * @private\n     */\n    static _isPreDefinedOptionValid(preDefinedOptionName) {\n        return Object.prototype.hasOwnProperty.call(AutoNumeric.predefinedOptions, preDefinedOptionName);\n    }\n\n    /**\n     * Return an option object based on the given parameter.\n     * If `optionObjectOrPredefinedName` is as string, then we retrieve the pre-defined option object, if it's an object, we use it as is.\n     *\n     * @param {object|string} optionObjectOrPredefinedName\n     * @returns {object}\n     */\n    static _getOptionObject(optionObjectOrPredefinedName) {\n        let options;\n        if (AutoNumericHelper.isString(optionObjectOrPredefinedName)) {\n            options = AutoNumeric.getPredefinedOptions()[optionObjectOrPredefinedName];\n            if (options === void(0) || options === null) {\n                // If the given pre-defined name does not exist, warn that something is wrong, and continue the execution of the initialization\n                AutoNumericHelper.warning(`The given pre-defined option [${optionObjectOrPredefinedName}] is not recognized by autoNumeric. Please check that pre-defined option name.`, true);\n            }\n        } else { // A `settings` object\n            options = optionObjectOrPredefinedName;\n        }\n\n        return options;\n    }\n\n    /**\n     * Save the initial element values for later use in the pristine test.\n     * Those values are :\n     * - the html attribute (i.e. <input value='42'>), and\n     * - the script `value` (i.e. `let domElement.value`)\n     *\n     * @param {null|number|string} initialValue\n     * @private\n     */\n    _saveInitialValues(initialValue) {\n        // Keep the very first initial values (in the html attribute and set by the script). This is needed to check if the element is pristine.\n        // Save the html attribute 'value'\n        this.initialValueHtmlAttribute = AutoNumericHelper.scientificToDecimal(this.domElement.getAttribute('value'));\n        if (AutoNumericHelper.isNull(this.initialValueHtmlAttribute)) {\n            // Set the default empty value attribute instead of `null`, since if the initial value is null, the empty string is used\n            this.initialValueHtmlAttribute = '';\n        }\n\n        // Save the 'script' value\n        this.initialValue = initialValue;\n        if (AutoNumericHelper.isNull(this.initialValue)) {\n            // Same as above\n            this.initialValue = '';\n        }\n    }\n\n    /**\n     * Generate all the event listeners for the given DOM element\n     * @private\n     */\n    _createEventListeners() {\n        this.formulaMode = false;\n        // Create references to the event handler functions, so we can then cleanly remove those listeners if needed\n        // That would not be possible if we used closures directly in the event handler declarations\n        this._onFocusInFunc = e => { this._onFocusIn(e); };\n        this._onFocusInAndMouseEnterFunc = e => { this._onFocusInAndMouseEnter(e); };\n        this._onFocusFunc = () => { this._onFocus(); };\n        this._onKeydownFunc = e => { this._onKeydown(e); };\n        this._onKeypressFunc = e => { this._onKeypress(e); };\n        this._onKeyupFunc = e => { this._onKeyup(e); };\n        this._onFocusOutAndMouseLeaveFunc = e => { this._onFocusOutAndMouseLeave(e); };\n        this._onPasteFunc = e => { this._onPaste(e); };\n        this._onWheelFunc = e => { this._onWheel(e); };\n        this._onDropFunc = e => { this._onDrop(e); };\n        this._onKeydownGlobalFunc = e => { this._onKeydownGlobal(e); };\n        this._onKeyupGlobalFunc = e => { this._onKeyupGlobal(e); };\n\n        // Add the event listeners\n        this.domElement.addEventListener('focusin', this._onFocusInFunc, false);\n        this.domElement.addEventListener('focus', this._onFocusInAndMouseEnterFunc, false);\n        this.domElement.addEventListener('focus', this._onFocusFunc, false);\n        this.domElement.addEventListener('mouseenter', this._onFocusInAndMouseEnterFunc, false);\n        this.domElement.addEventListener('keydown', this._onKeydownFunc, false);\n        this.domElement.addEventListener('keypress', this._onKeypressFunc, false);\n        this.domElement.addEventListener('keyup', this._onKeyupFunc, false);\n        this.domElement.addEventListener('blur', this._onFocusOutAndMouseLeaveFunc, false);\n        this.domElement.addEventListener('mouseleave', this._onFocusOutAndMouseLeaveFunc, false);\n        this.domElement.addEventListener('paste', this._onPasteFunc, false);\n        this.domElement.addEventListener('wheel', this._onWheelFunc, false);\n        this.domElement.addEventListener('drop', this._onDropFunc, false);\n        this._setupFormListener();\n\n        // Keep track if the event listeners have been initialized on this object\n        this.hasEventListeners = true;\n\n        // Create one global event listener for the keyup event on the document object, which will be shared by all the autoNumeric elements\n        if (!AutoNumeric._doesGlobalListExists()) {\n            document.addEventListener('keydown', this._onKeydownGlobalFunc, false);\n            document.addEventListener('keyup', this._onKeyupGlobalFunc, false);\n        }\n    }\n\n    /**\n     * Remove all the autoNumeric-related event listeners for the given DOM element\n     * @private\n     */\n    _removeEventListeners() {\n        this.domElement.removeEventListener('focusin', this._onFocusInFunc, false);\n        this.domElement.removeEventListener('focus', this._onFocusInAndMouseEnterFunc, false);\n        this.domElement.removeEventListener('focus', this._onFocusFunc, false);\n        this.domElement.removeEventListener('mouseenter', this._onFocusInAndMouseEnterFunc, false);\n        this.domElement.removeEventListener('blur', this._onFocusOutAndMouseLeaveFunc, false);\n        this.domElement.removeEventListener('mouseleave', this._onFocusOutAndMouseLeaveFunc, false);\n        this.domElement.removeEventListener('keydown', this._onKeydownFunc, false);\n        this.domElement.removeEventListener('keypress', this._onKeypressFunc, false);\n        this.domElement.removeEventListener('keyup', this._onKeyupFunc, false);\n        this.domElement.removeEventListener('paste', this._onPasteFunc, false);\n        this.domElement.removeEventListener('wheel', this._onWheelFunc, false);\n        this.domElement.removeEventListener('drop', this._onDropFunc, false);\n        this._removeFormListener();\n\n        // Keep track if the event listeners have been initialized on this object\n        this.hasEventListeners = false;\n\n        document.removeEventListener('keydown', this._onKeydownGlobalFunc, false);\n        document.removeEventListener('keyup', this._onKeyupGlobalFunc, false);\n    }\n\n    /**\n     * Toggle the event listeners according to the `noEventListeners` option, if those were not activated/deactivated before\n     * @private\n     */\n    _updateEventListeners() {\n        if (!this.settings.noEventListeners && !this.hasEventListeners) {\n            // Special case where an update is done on an element that did not activate its event listeners in the first place\n            // i.e. when an element is first created with `contenteditable=\"false\"`, then an update is done with `anElement.french()`\n            this._createEventListeners();\n        }\n\n        if (this.settings.noEventListeners && this.hasEventListeners) {\n            this._removeEventListeners();\n        }\n    }\n\n    /**\n     * Mark the parent <form> so that other AutoNumeric object will not add more listeners.\n     * Add a counter so that when removing the AutoNumeric object, we only remove the submit listener if that count is equal to 0.\n     * Also keep a reference to the 'submit' event handler function to be able to remove that handler later if the `_removeFormListener()` function is called from another AutoNumeric object.\n     *\n     * @private\n     */\n    _setupFormListener() {\n        if (!AutoNumericHelper.isNull(this.parentForm)) {\n            // Set up the handler function\n            this._onFormSubmitFunc = () => { this._onFormSubmit(); };\n            this._onFormResetFunc = () => { this._onFormReset(); };\n\n            // Check if the parent form already has the AutoNumeric mark\n            if (this._hasParentFormCounter()) {\n                this._incrementParentFormCounter();\n            } else {\n                // If not, add the counter\n                this._initializeFormCounterToOne();\n                // And add the submit and reset event listeners\n                this.parentForm.addEventListener('submit', this._onFormSubmitFunc, false);\n                this.parentForm.addEventListener('reset', this._onFormResetFunc, false);\n                // Also keep a reference to the handler function so that we can remove it later\n                this._storeFormHandlerFunction();\n            }\n        }\n    }\n\n    /**\n     * Remove the form 'submit' event listener, as well as the `dataset` info (`anCount` and `anFormHandler`) from the parent form, only when there are only one AutoNumeric child element left in that <form>.\n     * Otherwise, decrement the `anCount`.\n     *\n     * @private\n     */\n    _removeFormListener() {\n        if (!AutoNumericHelper.isNull(this.parentForm)) {\n            // Check the parent form counter value\n            const anCount = this._getParentFormCounter();\n\n            if (anCount === 1) {\n                // If it's 1, remove the listeners\n                this.parentForm.removeEventListener('submit', this._getFormHandlerFunction().submitFn, false);\n                this.parentForm.removeEventListener('reset', this._getFormHandlerFunction().resetFn, false);\n                // Also remove the dataset info\n                this._removeFormDataSetInfo();\n            } else if (anCount > 1) {\n                // Otherwise if it's >1 decrement the counter\n                this._decrementParentFormCounter();\n            } else {\n                // If it's <1, throw an error\n                AutoNumericHelper.throwError(`The AutoNumeric object count on the form is incoherent.`);\n            }\n        }\n    }\n\n    /**\n     * Return `true` if the parent form has the form counter attribute\n     *\n     * @returns {boolean}\n     * @private\n     */\n    _hasParentFormCounter() {\n        return 'anCount' in this.parentForm.dataset;\n    }\n\n    /**\n     * Return the count of AutoNumeric form children\n     *\n     * @returns {number}\n     * @private\n     */\n    _getParentFormCounter() {\n        return Number(this.parentForm.dataset.anCount);\n    }\n\n    /**\n     * Set the count of AutoNumeric form children to 1 for the given form element, or if none are passed, the current `this.parentForm` one.\n     *\n     * @param {HTMLFormElement|null} formElement\n     * @private\n     */\n    _initializeFormCounterToOne(formElement = null) {\n        this._getFormElement(formElement).dataset.anCount = 1;\n    }\n\n    /**\n     * Increment the AutoNumeric form children count for the given form element, or if none are passed, the current `this.parentForm` one.\n     *\n     * @param {HTMLFormElement|null} formElement\n     * @private\n     */\n    _incrementParentFormCounter(formElement = null) {\n        this._getFormElement(formElement).dataset.anCount++;\n    }\n\n    /**\n     * Decrement the AutoNumeric form children count for the current `this.parentForm` form element.\n     *\n     * @private\n     */\n    _decrementParentFormCounter() {\n        this.parentForm.dataset.anCount--;\n    }\n\n    /**\n     * Return `true` if the global form handler list exists on the `window` object.\n     *\n     * @returns {boolean}\n     * @private\n     */\n    static _doesFormHandlerListExists() {\n        const type = typeof window.aNFormHandlerMap;\n\n        return type !== 'undefined' && type === 'object';\n    }\n\n    /**\n     * Create the global form handler list on the `window` object.\n     *\n     * @private\n     */\n    static _createFormHandlerList() {\n        window.aNFormHandlerMap = new Map(); // I would have used a `WeakMap` here, but that does not allow using non-object for keys\n    }\n\n    /**\n     * Return `true` if the given form element, or if none are passed, the current `this.parentForm` one has a form handler name.\n     *\n     * @param {HTMLFormElement|null} formElement\n     * @returns {boolean}\n     * @private\n     */\n    _hasFormHandlerFunction(formElement = null) {\n        return 'anFormHandler' in this._getFormElement(formElement).dataset;\n    }\n\n    /**\n     * Return the given form element, or defaults to `this.parentForm` if no argument is passed.\n     *\n     * @param {HTMLFormElement|null} formElement\n     * @returns {*}\n     * @private\n     */\n    _getFormElement(formElement = null) {\n        let formElementToUse;\n        if (!AutoNumericHelper.isNull(formElement)) {\n            formElementToUse = formElement;\n        } else {\n            formElementToUse = this.parentForm;\n        }\n\n        return formElementToUse;\n    }\n\n    /**\n     * Generate a form handler unique name and store it in the global form handler list.\n     * This also save that name in the dataset of the given form element.\n     *\n     * @param {HTMLFormElement|null} formElement\n     * @private\n     */\n    _storeFormHandlerFunction(formElement = null) {\n        // Create the weakMap if it does not exist\n        if (!this.constructor._doesFormHandlerListExists()) {\n            this.constructor._createFormHandlerList();\n        }\n\n        // Generate a unique name and save it in the form dataset\n        const formHandlerName = AutoNumericHelper.randomString();\n        this._getFormElement(formElement).dataset.anFormHandler = formHandlerName;\n\n        // Add the form handler name and handle function reference to the WeakMap\n        window.aNFormHandlerMap.set(formHandlerName, { submitFn: this._onFormSubmitFunc, resetFn: this._onFormResetFunc });\n    }\n\n    /**\n     * Return the form handler key name from the parent form element, for the global form handler list.\n     *\n     * @returns {string|*}\n     * @private\n     */\n    _getFormHandlerKey() {\n        if (!this._hasFormHandlerFunction()) {\n            AutoNumericHelper.throwError(`Unable to retrieve the form handler name`);\n        }\n\n        const formHandlerName = this.parentForm.dataset.anFormHandler;\n        if (formHandlerName === '') {\n            AutoNumericHelper.throwError(`The form handler name is invalid`);\n        }\n\n        return formHandlerName;\n    }\n\n    /**\n     * Return the 'submit' event handler function used for the parent form.\n     *\n     * @returns {function}\n     * @private\n     */\n    _getFormHandlerFunction() {\n        const formHandlerName = this._getFormHandlerKey();\n\n        return window.aNFormHandlerMap.get(formHandlerName);\n    }\n\n    /**\n     * Remove the dataset attributes `data-an-count` and `data-an-form-handler` from the parent form element.\n     *\n     * @private\n     */\n    _removeFormDataSetInfo() {\n        // Just in case, set the counter to 0\n        this._decrementParentFormCounter();\n        // Remove the form handler function from the FormHandlerFunction Map\n        window.aNFormHandlerMap.delete(this._getFormHandlerKey());\n        // Lastly, remove the dataset attributes\n        this.parentForm.removeAttribute('data-an-count');\n        this.parentForm.removeAttribute('data-an-form-handler');\n    }\n\n    /**\n     * Set the DOM element write permissions according to the current settings, by setting the `readonly` or `contenteditable` attributes depending on its tag type.\n     * If the `useHtmlAttribute` parameter is set to `true`, then the `readonly` html attribute is used and has precedence over the `readOnly` option to set the element as read-only.\n     *\n     * @param {boolean} useHtmlAttribute If set to `true`, then the write permissions are set by taking into account the html 'readonly' attribute, even if the `readOnly` option is set to false\n     * @private\n     */\n    _setWritePermissions(useHtmlAttribute = false) {\n        if ((useHtmlAttribute && this.domElement.readOnly) || this.settings.readOnly) {\n            this._setReadOnly();\n        } else {\n            this._setReadWrite();\n        }\n    }\n\n    /**\n     * Set the element to be read-only.\n     * If the DOM element tag is not an `input`, then it `contenteditable` attribute is set to `false`.\n     *\n     * @private\n     */\n    _setReadOnly() {\n        if (this.isInputElement) {\n            this.domElement.readOnly = true;\n        } else {\n            this.domElement.setAttribute('contenteditable', false);\n        }\n    }\n\n    /**\n     * Set the element to be read-write.\n     *\n     * @private\n     */\n    _setReadWrite() {\n        if (this.isInputElement) {\n            this.domElement.readOnly = false;\n        } else {\n            this.domElement.setAttribute('contenteditable', true);\n        }\n    }\n\n    /**\n     * Add a watcher so that any external change to the AutoNumeric-managed element would be detected.\n     * As soon as such change is detected, AutoNumeric then tries to `set()` the value so that it gets formatted and stored in the history.\n     * //XXX For now, this only works when watching the `value` attribute, not the `textContent` one\n     * @private\n     */\n    _addWatcher() {\n        // `getterSetter` can be undefined when a non-input element is used\n        if (!AutoNumericHelper.isUndefined(this.getterSetter)) {\n            const { set: setter, get: getter } = this.getterSetter;\n            Object.defineProperty(this.domElement, this.attributeToWatch, {\n                configurable: true, // This is needed in some rare cases\n                get         : () => getter.call(this.domElement),\n                set         : val => {\n                    setter.call(this.domElement, val);\n                    // Only `set()` the value if the modification comes from an external source\n                    if (this.settings.watchExternalChanges && !this.internalModification) {\n                        this.set(val);\n                    }\n                },\n            });\n        }\n\n        //FIXME The code above fails for the `textContent` attribute since `this.getterSetter` is undefined when using `getOwnPropertyDescriptor()`\n        /* //XXX The code below *almost* work for the textContent, but breaks some unit tests\n        this.valueWatched = this.domElement[this.attributeToWatch];\n        Object.defineProperty(this.domElement, this.attributeToWatch, {\n            configurable: true, // This is needed in some rare cases\n            get         : () => this.valueWatched,\n            set         : val => {\n                this.valueWatched = val;\n                // Only `set()` the value if the modification comes from an external source\n                if (this.settings.watchExternalChanges && !this.internalModification) {\n                    this.set(val);\n                }\n            },\n        });\n        */\n    }\n\n    /**\n     * Remove the watcher on the AutoNumeric-managed element\n     * Note: This needs to be called when the AutoNumeric element is 'removed', otherwise the getter/setter stays on the DOM element and that can lead to problem if the user initialize another AutoNumeric object on it.\n     * @private\n     */\n    _removeWatcher() {\n        // `getterSetter` can be undefined when a non-input element is used\n        if (!AutoNumericHelper.isUndefined(this.getterSetter)) {\n            const { set: setter, get: getter } = this.getterSetter;\n            Object.defineProperty(this.domElement, this.attributeToWatch, {\n                configurable: true, // This is needed in some rare cases\n                get         : () => getter.call(this.domElement),\n                set         : val => {\n                    setter.call(this.domElement, val);\n                },\n            });\n        }\n\n        //FIXME The code above fails for the `textContent` attribute since `this.getterSetter` is undefined when using `getOwnPropertyDescriptor()`\n        /* //XXX The code below *almost* work for the textContent, but breaks some unit tests\n        this.valueWatched = this.domElement[this.attributeToWatch];\n        Object.defineProperty(this.domElement, this.attributeToWatch, {\n            configurable: true, // This is needed in some rare cases\n            get         : () => this.valueWatched,\n            set         : val => {\n                this.valueWatched = val;\n            },\n        });\n        */\n    }\n\n    /**\n     * Return the name of the object attribute that store the current formatted data in the DOM element.\n     *\n     * @returns {string}\n     * @private\n     */\n    _getAttributeToWatch() {\n        let attributeToWatch;\n        if (this.isInputElement) {\n            attributeToWatch = 'value';\n        } else {\n            const nodeType = this.domElement.nodeType;\n            if (nodeType === Node.ELEMENT_NODE ||\n                nodeType === Node.DOCUMENT_NODE ||\n                nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n                attributeToWatch = 'textContent';\n            } else if (nodeType === Node.TEXT_NODE) {\n                attributeToWatch = 'nodeValue';\n            }\n        }\n\n        return attributeToWatch;\n    }\n\n    /**\n     * Save the current raw value into the history table, along with the selection information.\n     *\n     * If the user has done some undos and tries to enter:\n     * - a new and different number than the 'next' state, this drops the rest of the history table\n     * - the very same number that result in the same rawValue as the 'next' state, we only move the history table pointer to the next state\n     *\n     * @private\n     */\n    _historyTableAdd() {\n        //TODO Add a `this.settings.saveSelectionsIntoHistory` option to prevent saving the selections (in order to gain performance)\n        const isEmptyHistoryTable = this.historyTable.length === 0;\n        // Only add a new value if it's different from the previous one (to prevent infinitely adding values on mouseover for instance)\n        if (isEmptyHistoryTable || this.rawValue !== this._historyTableCurrentValueUsed()) {\n            // Trim the history table if the user changed the value of an intermediary state\n            let addNewHistoryState = true;\n            if (!isEmptyHistoryTable) {\n                // If some undo has been done and the user type the exact same data than the next entry after the current history pointer, do not drop the rest of the 'redo' list, and just advance the historyTableIndex\n                const nextHistoryStateIndex = this.historyTableIndex + 1;\n                if (nextHistoryStateIndex < this.historyTable.length && this.rawValue === this.historyTable[nextHistoryStateIndex].value) {\n                    // If the character input result in the same state as the next one, do not remove the next history states nor add a new one\n                    addNewHistoryState = false;\n                } else {\n                    // First remove anything that is after the current index\n                    AutoNumericHelper.arrayTrim(this.historyTable, this.historyTableIndex + 1);\n                }\n            }\n\n            // Update the history pointer\n            this.historyTableIndex++;\n\n            // Add the new history state, if needed\n            if (addNewHistoryState) {\n                // Save the selection info\n                const selection = AutoNumericHelper.getElementSelection(this.domElement);\n                this.selectionStart = selection.start;\n                this.selectionEnd = selection.end;\n\n                // Then add the new raw value\n                this.historyTable.push({\n                    // Save the rawValue and selection start/end\n                    value: this.rawValue,\n                    // The selection for this element is temporary, and will be updated when the next history state will be recorded.\n                    // That way, we are always sure we save the last caret or selection positions just before the value is changed. Otherwise, we would only save those positions when the value is first changed, and would not take into account that the user could move the caret around afterward.\n                    // For instance, this is needed if the user change the element value, and immediately undo it ; if he then does a redo, he'll see the value and the right selection\n                    // To sum up; The selection position are not always +1 character, since it could also be '2' if a group separator is added when entering one character. That's why the current history state caret/selection position is updated on each `keyup` event.\n                    start: this.selectionStart + 1, // Here we add one since the user added one character too\n                    end  : this.selectionEnd + 1,\n                });\n\n                // Update the selection in the previous entry, in order to keep track of the updated caret/selection positions\n                if (this.historyTable.length > 1) {\n                    this.historyTable[this.historyTableIndex - 1].start = this.selectionStart;\n                    this.historyTable[this.historyTableIndex - 1].end = this.selectionEnd;\n                }\n            }\n\n            // Limit the history table size according to the `historySize` option\n            if (this.historyTable.length > this.settings.historySize) {\n                this._historyTableForget();\n            }\n        }\n    }\n\n    /**\n     * Debug function for the history table\n     * @private\n     */\n    /*\n    _debugHistoryTable() {\n        let i = 0;\n        let mark;\n        this.historyTable.forEach(history => {\n            if (this.historyTableIndex === i) {\n                mark = '> ';\n            } else {\n                mark = '';\n            }\n            console.log(`${mark}${i++}: ${history.value} ${history.start}|${history.end} [onGoingRedo: ${this.onGoingRedo}]`); //DEBUG\n        });\n    }\n    */\n\n    /**\n     * 'Undo' or 'Redo' the last/next user entry in the history table.\n     * This does not modify the history table, only the pointer to the current state.\n     *\n     * @param {boolean} undo If set to `true`, then this function does an 'Undo', otherwise it does a 'Redo'\n     * @private\n     */\n    _historyTableUndoOrRedo(undo = true) {\n        let check;\n        if (undo) {\n            // Only 'undo' if there are some info to undo\n            check = this.historyTableIndex > 0;\n            if (check) {\n                this.historyTableIndex--;\n            }\n        } else {\n            // Only 'redo' if there are some info to redo at the end of the history table\n            check = this.historyTableIndex + 1 < this.historyTable.length;\n            if (check) {\n                this.historyTableIndex++;\n            }\n        }\n\n        if (check) {\n            // Set the value back\n            const undoInfo = this.historyTable[this.historyTableIndex];\n            this.set(undoInfo.value, null, false); // next or previous raw value\n\n            // Set the selection back\n            AutoNumericHelper.setElementSelection(this.domElement, undoInfo.start, undoInfo.end);\n        }\n    }\n\n    /**\n     * 'Undo' the last user entry by going back one entry in the history table.\n     * This keeps the following entries in order to allow for a 'redo'.\n     * This does not modify the history table, only the pointer to the current state.\n     * @private\n     */\n    _historyTableUndo() {\n        this._historyTableUndoOrRedo(true);\n    }\n\n    /**\n     * 'Redo' the next user entry in the history table.\n     * This does not modify the history table, only the pointer to the current state.\n     * @private\n     */\n    _historyTableRedo() {\n        this._historyTableUndoOrRedo(false);\n    }\n\n    /**\n     * Reset the history table to its initial state, and select the value.\n     * @private\n     */\n    /*\n    resetHistoryTable() { //FIXME Test this\n        this.set(this.rawValue, null, false);\n        this.select();\n        const selection = AutoNumericHelper.getElementSelection(this.domElement);\n        this.historyTableIndex = 0;\n        this.historyTable = [{\n            // Save the rawValue and selection start/end\n            value: this.rawValue,\n            start: selection.start,\n            end  : selection.end,\n        }];\n    }\n    */\n\n    /**\n     * Make the history table forget its first N elements, shifting its indexes in the process.\n     * `N` being given as the `numberOfEntriesToForget` parameter.\n     *\n     * @param {Number} numberOfEntriesToForget\n     * @returns {object|Array<object>} The discarded objects, in an Array.\n     * @private\n     */\n    _historyTableForget(numberOfEntriesToForget = 1) {\n        const shiftedAway = [];\n        for (let i = 0; i < numberOfEntriesToForget; i++) {\n            shiftedAway.push(this.historyTable.shift());\n            // Update the history table index accordingly\n            this.historyTableIndex--;\n            if (this.historyTableIndex < 0) {\n                // In case this function is called more times than there is states in the history table\n                this.historyTableIndex = 0;\n            }\n        }\n\n        if (shiftedAway.length === 1) {\n            return shiftedAway[0];\n        }\n\n        return shiftedAway;\n    }\n\n    /**\n     * Return the currently used value from the history table.\n     *\n     * @returns {string|number}\n     * @private\n     */\n    _historyTableCurrentValueUsed() {\n        let indexToUse = this.historyTableIndex;\n        if (indexToUse < 0) {\n            indexToUse = 0;\n        }\n\n        let result;\n        if (AutoNumericHelper.isUndefinedOrNullOrEmpty(this.historyTable[indexToUse])) {\n            result = '';\n        } else {\n            result = this.historyTable[indexToUse].value;\n        }\n\n        return result;\n    }\n\n    /**\n     * Parse the `styleRules` option and run the test for each given rules, either pre-defined ones like `positive`, `negative` and `ranges`, or user defined callbacks within the `userDefined` attribute.\n     * @private\n     */\n    _parseStyleRules() {\n        if (AutoNumericHelper.isUndefinedOrNullOrEmpty(this.settings.styleRules) || this.rawValue === '') {\n            return;\n        }\n\n        // 'positive' attribute\n        if (!AutoNumericHelper.isUndefinedOrNullOrEmpty(this.settings.styleRules.positive)) {\n            if (this.rawValue >= 0) {\n                this._addCSSClass(this.settings.styleRules.positive);\n            } else {\n                this._removeCSSClass(this.settings.styleRules.positive);\n            }\n        }\n\n        // 'negative' attribute\n        if (!AutoNumericHelper.isUndefinedOrNullOrEmpty(this.settings.styleRules.negative)) {\n            if (this.rawValue < 0) {\n                this._addCSSClass(this.settings.styleRules.negative);\n            } else {\n                this._removeCSSClass(this.settings.styleRules.negative);\n            }\n        }\n\n        // 'ranges' attribute\n        if (!AutoNumericHelper.isUndefinedOrNullOrEmpty(this.settings.styleRules.ranges) && this.settings.styleRules.ranges.length !== 0) {\n            this.settings.styleRules.ranges.forEach(range => {\n                if (this.rawValue >= range.min && this.rawValue < range.max) {\n                    this._addCSSClass(range.class);\n                } else {\n                    this._removeCSSClass(range.class);\n                }\n            });\n        }\n\n        // 'userDefined' attribute\n        //TODO Also pass the old raw value as a parameter, and not only the new raw value\n        if (!AutoNumericHelper.isUndefinedOrNullOrEmpty(this.settings.styleRules.userDefined) && this.settings.styleRules.userDefined.length !== 0) {\n            this.settings.styleRules.userDefined.forEach(userObject => {\n                if (AutoNumericHelper.isFunction(userObject.callback)) {\n                    // Test for the type of the `classes` attribute, which changes the function behavior\n                    if (AutoNumericHelper.isString(userObject.classes)) {\n                        // If 'classes' is a string, set it if `true`, remove it if `false`\n                        if (userObject.callback(this.rawValue)) {\n                            this._addCSSClass(userObject.classes);\n                        } else {\n                            this._removeCSSClass(userObject.classes);\n                        }\n                    } else if (AutoNumericHelper.isArray(userObject.classes)) {\n                        if (userObject.classes.length === 2) {\n                            // If 'classes' is an array with only 2 elements, set the first class if `true`, the second if `false`\n                            if (userObject.callback(this.rawValue)) {\n                                this._addCSSClass(userObject.classes[0]);\n                                this._removeCSSClass(userObject.classes[1]);\n                            } else {\n                                this._removeCSSClass(userObject.classes[0]);\n                                this._addCSSClass(userObject.classes[1]);\n                            }\n                        } else if (userObject.classes.length > 2) {\n                            // The callback returns an array of indexes to use on the `classes` array\n                            const callbackResult = userObject.callback(this.rawValue);\n                            if (AutoNumericHelper.isArray(callbackResult)) {\n                                // If multiple indexes are returned\n                                userObject.classes.forEach((userClass, index) => {\n                                    if (AutoNumericHelper.isInArray(index, callbackResult)) {\n                                        this._addCSSClass(userClass);\n                                    } else {\n                                        this._removeCSSClass(userClass);\n                                    }\n                                });\n                            } else if (AutoNumericHelper.isInt(callbackResult)) {\n                                // If only one index is returned\n                                userObject.classes.forEach((userClass, index) => {\n                                    if (index === callbackResult) {\n                                        this._addCSSClass(userClass);\n                                    } else {\n                                        this._removeCSSClass(userClass);\n                                    }\n                                });\n                            } else if (AutoNumericHelper.isNull(callbackResult)) {\n                                // Remove all the classes\n                                userObject.classes.forEach(userClass => {\n                                    this._removeCSSClass(userClass);\n                                });\n                            } else {\n                                AutoNumericHelper.throwError(`The callback result is not an array nor a valid array index, ${typeof callbackResult} given.`);\n                            }\n                        } else {\n                            AutoNumericHelper.throwError('The classes attribute is not valid for the `styleRules` option.');\n                        }\n                    } else if (AutoNumericHelper.isUndefinedOrNullOrEmpty(userObject.classes)) {\n                        // If 'classes' is `undefined` or `null`, then the callback is called with the AutoNumeric object passed as a parameter\n                        userObject.callback(this);\n                    } else {\n                        AutoNumericHelper.throwError('The callback/classes structure is not valid for the `styleRules` option.');\n                    }\n                } else {\n                    AutoNumericHelper.warning(`The given \\`styleRules\\` callback is not a function, ${typeof userObject.callback} given.`, this.settings.showWarnings);\n                }\n            });\n        }\n    }\n\n    /**\n     * Add the given CSS class to the DOM element.\n     *\n     * @param {string} cssClassName\n     * @private\n     */\n    _addCSSClass(cssClassName) {\n        this.domElement.classList.add(cssClassName);\n    }\n\n    /**\n     * Remove the given CSS class from the DOM element.\n     *\n     * @param {string} cssClassName\n     * @private\n     */\n    _removeCSSClass(cssClassName) {\n        this.domElement.classList.remove(cssClassName);\n    }\n\n    // Those are the public function available on each autoNumeric-managed element\n\n    /**\n     * Method that updates the AutoNumeric settings, and immediately format the element accordingly.\n     * The options passed as parameter(s) is either one or many objects that each contains some settings, i.e. :\n     * {\n     *     digitGroupSeparator: \".\",\n     *     decimalCharacter: \",\",\n     *     currencySymbol: '€ ',\n     * }\n     * If multiple options are passed, the latter overwrite the previous ones.\n     *\n     * Note: If the new settings are not validated, or the call to `set()` fails, then the previous valid settings are reverted back to.\n     *\n     * @example anElement.update({ options }) // Updates the settings\n     * @example anElement.update({ options1 }, { options2 }) // Updates the settings with multiple option objects\n     * @example anElement.update([{ options1 }, { options2 }]) // Updates the settings with multiple option objects in a single array\n     *\n     * @param {object|string|array} newOptions\n     * @returns {AutoNumeric}\n     */\n    update(...newOptions) {\n        if (Array.isArray(newOptions) && Array.isArray(newOptions[0])) {\n            // Allows to pass a single array of options\n            newOptions = newOptions[0];\n        }\n\n        // Keep a copy of the original settings before changing them, in case they do not validate correctly, so we can switch back to them\n        const originalSettings = AutoNumericHelper.cloneObject(this.settings); //TODO Check that the `styleRules` option is correctly cloned (due to depth cloning limitation)\n\n        // Store the current unformatted input value\n        const numericString = this.rawValue;\n\n        // Generate a single option object with the settings from the latter overwriting those from the former\n        let optionsToUse = {};\n        if (AutoNumericHelper.isUndefinedOrNullOrEmpty(newOptions) || newOptions.length === 0) {\n            optionsToUse = null;\n        } else if (newOptions.length >= 1) {\n            newOptions.forEach(optionObject => {\n                if (this.constructor._isPreDefinedOptionValid(optionObject)) {\n                    // The option object is a predefined option name (i.e. 'euro')\n                    optionObject = this.constructor._getOptionObject(optionObject);\n                }\n\n                Object.assign(optionsToUse, optionObject);\n            });\n        }\n\n        // Update the settings\n        try {\n            this._setSettings(optionsToUse, true);\n            this._setWritePermissions(); // Update the read/write permissions\n            this._updateEventListeners();\n\n            // Reformat the input value with the new settings\n            // Note: we always `set`, even when `numericString` is the empty string '', since `emptyInputBehavior` (set to `always` or `zero`) can change how the empty input is formatted\n            this.set(numericString);\n        } catch (error) {\n            // If the settings validation fails, then we switch back to the previous valid settings\n            this._setSettings(originalSettings, true); // `_setSettings()` is used here instead of directly doing `this.settings = originalSettings;` since lots of side variables are calculated from the settings, and we need to get those back to their previous state. Note: `_setSettings()` is called in the 'update' mode in order to correctly set back the `originalDecimalPlacesRawValue` value.\n            AutoNumericHelper.throwError(`Unable to update the settings, those are invalid: [${error}]`);\n\n            return this;\n        }\n\n        return this;\n    }\n\n    /**\n     * Return the options object containing all the current autoNumeric settings in effect.\n     * You can then directly access each option by using its name : `anElement.getSettings().optionNameAutoCompleted`.\n     *\n     * @example\n     * anElement.getSettings()\n     * anElement.getSettings().decimalCharacter // Return the decimalCharacter setting as a string - any valid option name can be used\n     *\n     * @returns {object}\n     */\n    getSettings() {\n        return this.settings;\n    }\n\n    /**\n     * Set the given element value, and format it immediately.\n     * Additionally, this `set()` method can accept options that will be merged into the current AutoNumeric element, taking precedence over any previous settings.\n     *\n     * @example anElement.set('12345.67') // Formats the value\n     * @example anElement.set(12345.67) // Formats the value\n     * @example anElement.set(12345.67, { decimalCharacter : ',' }) // Update the settings and formats the value in one go\n     * @example anElement.northAmerican().set('$12,345.67') // Set an already formatted value (this does not _exactly_ respect the currency symbol/negative placements, but only remove all non-numbers characters, according to the ones given in the settings)\n     * @example anElement.set(null) // Set the rawValue and element value to `null`\n     *\n     * @param {number|string|null} newValue The value must be a Number, a numeric string or `null` (if `emptyInputBehavior` is set to `'null'`)\n     * @param {object} options A settings object that will override the current settings. Note: the update is done only if the `newValue` is defined.\n     * @param {boolean} saveChangeToHistory If set to `true`, then the change is recorded in the history table\n     * @returns {AutoNumeric}\n     * @throws\n     */\n    set(newValue, options = null, saveChangeToHistory = true) {\n        //TODO Add the `saveSettings` options. If `true`, then when `options` is passed, then it overwrite the current `this.settings`. If `false` the `options` are only used once and `this.settings` is not modified\n        if (AutoNumericHelper.isUndefined(newValue)) {\n            AutoNumericHelper.warning(`You are trying to set an 'undefined' value ; an error could have occurred.`, this.settings.showWarnings);\n            return this;\n        }\n\n        // The options update is done only if the `newValue` is not `undefined`\n        if (!AutoNumericHelper.isNull(options)) {\n            this._setSettings(options, true); // We do not call `update` here since this would call `set` too\n        }\n\n        if (newValue === null && this.settings.emptyInputBehavior !== AutoNumeric.options.emptyInputBehavior.null) {\n            AutoNumericHelper.warning(`You are trying to set the \\`null\\` value while the \\`emptyInputBehavior\\` option is set to ${this.settings.emptyInputBehavior}. If you want to be able to set the \\`null\\` value, you need to change the 'emptyInputBehavior' option to \\`'null'\\`.`, this.settings.showWarnings);\n            return this;\n        }\n\n        let value;\n        if (newValue === null) {\n            //TODO Merge this into a global `if (newValue === null) {` test, with the test above\n            // Here this.settings.emptyInputBehavior === AutoNumeric.options.emptyInputBehavior.null\n            this._setElementAndRawValue(null, null, saveChangeToHistory);\n            this._saveValueToPersistentStorage();\n\n            return this;\n        }\n\n        value = this.constructor._toNumericValue(newValue, this.settings);\n        if (isNaN(Number(value))) {\n            //TODO Do not modify the element value if the newValue results in `NaN`. Make sure the settings, if modified, are revert back too.\n            AutoNumericHelper.warning(`The value you are trying to set results in \\`NaN\\`. The element value is set to the empty string instead.`, this.settings.showWarnings);\n            this.setValue('', saveChangeToHistory);\n\n            return this;\n        }\n\n        if (value === '') {\n            switch (this.settings.emptyInputBehavior) {\n                case AutoNumeric.options.emptyInputBehavior.zero:\n                    value = 0;\n                    break;\n                case AutoNumeric.options.emptyInputBehavior.min:\n                    value = this.settings.minimumValue;\n                    break;\n                case AutoNumeric.options.emptyInputBehavior.max:\n                    value = this.settings.maximumValue;\n                    break;\n                default:\n                    if (AutoNumericHelper.isNumber(this.settings.emptyInputBehavior)) {\n                        value = Number(this.settings.emptyInputBehavior);\n                    }\n            }\n        }\n\n        if (value !== '') {\n            const [minTest, maxTest] = this.constructor._checkIfInRangeWithOverrideOption(value, this.settings);\n\n            // Modify the formatted value if the rawValue is found in the `valuesToStrings` option\n            if (minTest && maxTest && this.settings.valuesToStrings && this._checkValuesToStrings(value)) {\n                // Set the raw value normally, and the formatted value with the corresponding string\n                this._setElementAndRawValue(this.settings.valuesToStrings[value], value, saveChangeToHistory);\n                this._saveValueToPersistentStorage();\n\n                return this;\n            }\n\n            // This test is needed by the `showPositiveSign` option\n            const isZero = AutoNumericHelper.isZeroOrHasNoValue(value);\n            if (isZero) {\n                value = '0';\n            }\n\n            if (minTest && maxTest) {\n                let forcedRawValue = this.constructor._roundRawValue(value, this.settings);\n                forcedRawValue = this._trimLeadingAndTrailingZeros(forcedRawValue.replace(this.settings.decimalCharacter, '.')); // Move the `setRawValue` call after the `setElementValue` one\n                value = this._getRawValueToFormat(value); // Multiply the raw value to obtain the formatted value\n\n                // Round the given value according to the object state (focused/unfocused)\n                if (this.isFocused) {\n                    value = this.constructor._roundFormattedValueShownOnFocus(value, this.settings);\n                } else {\n                    if (this.settings.divisorWhenUnfocused) {\n                        value = value / this.settings.divisorWhenUnfocused;\n                        value = value.toString();\n                    }\n\n                    value = this.constructor._roundFormattedValueShownOnBlur(value, this.settings);\n                }\n\n                value = this.constructor._modifyNegativeSignAndDecimalCharacterForFormattedValue(value, this.settings);\n                value = this.constructor._addGroupSeparators(value, this.settings, this.isFocused, this.rawValue, forcedRawValue);\n                if (!this.isFocused && this.settings.symbolWhenUnfocused) {\n                    value = `${value}${this.settings.symbolWhenUnfocused}`;\n                }\n\n                if (this.settings.decimalPlacesShownOnFocus || this.settings.divisorWhenUnfocused) {\n                    this._saveValueToPersistentStorage();\n                }\n\n                this._setElementAndRawValue(value, forcedRawValue, saveChangeToHistory);\n\n                // Special case when the user is allowed to enter invalid numbers outside the min/max range\n                this._setValidOrInvalidState(forcedRawValue);\n\n                return this;\n            } else {\n                this._triggerRangeEvents(minTest, maxTest);\n                AutoNumericHelper.throwError(`The value [${value}] being set falls outside of the minimumValue [${this.settings.minimumValue}] and maximumValue [${this.settings.maximumValue}] range set for this element`);\n\n                this._removeValueFromPersistentStorage();\n                this.setValue('', saveChangeToHistory); //TODO Shouldn't we just drop that faulty newValue and keep the previous one? This is behind a `throwError()` call anyway..\n\n                return this;\n            }\n        } else {\n            // Here, `value` equal the empty string `''`\n            let result;\n            if (this.settings.emptyInputBehavior === AutoNumeric.options.emptyInputBehavior.always) {\n                // Keep the currency symbol as per emptyInputBehavior\n                result = this.settings.currencySymbol;\n            } else {\n                result = '';\n            }\n\n            this._setElementAndRawValue(result, '', saveChangeToHistory);\n\n            return this;\n        }\n    }\n\n    /**\n     * Set the given value directly as the DOM element value, without formatting it beforehand.\n     * You can also set the value and update the setting in one go (the value will again not be formatted immediately).\n     *\n     * @param {number|string} value\n     * @param {object} options\n     * @returns {AutoNumeric}\n     * @throws\n     */\n    setUnformatted(value, options = null) {\n        //TODO Should we use `AutoNumeric.unformat()` here and set the unformatted result in case `value` is formatted?\n        if (value === null || AutoNumericHelper.isUndefined(value)) {\n            return this;\n        }\n\n        // The options update is done only if the `value` is not null\n        if (!AutoNumericHelper.isNull(options)) {\n            this._setSettings(options, true); // We do not call `update` here since this would call `set` too\n        }\n\n        const strippedValue = this.constructor._removeBrackets(value, this.settings);\n        const normalizedValue = this.constructor._stripAllNonNumberCharacters(strippedValue, this.settings, true, this.isFocused);\n        if (!AutoNumericHelper.isNumber(normalizedValue)) {\n            AutoNumericHelper.throwError(`The value is not a valid one, it's not a numeric string nor a recognized currency.`);\n        }\n\n        if (this.constructor._isWithinRangeWithOverrideOption(normalizedValue, this.settings)) {\n            // If the `normalizedValue` is in the range\n            this.setValue(value);\n        } else {\n            AutoNumericHelper.throwError(`The value is out of the range limits [${this.settings.minimumValue}, ${this.settings.maximumValue}].`);\n        }\n\n        return this;\n    }\n\n    /**\n     * Set the given value directly as the DOM element value, without formatting it beforehand, and without checking its validity.\n     * This also updates the `rawValue` with the given `newValue`, without checking it too ; if it's not formatted like a number recognized by Javascript, this *will* likely make other AutoNumeric methods fail.\n     *\n     * @param {string|number|null} newValue The new value to set on the element\n     * @param {boolean} saveChangeToHistory If set to `true`, then the change is recorded in the history array, otherwise it is not\n     * @returns {AutoNumeric}\n     */\n    setValue(newValue, saveChangeToHistory = true) {\n        this._setElementAndRawValue(newValue, saveChangeToHistory);\n\n        return this;\n    }\n\n    /**\n     * Save the raw value inside the AutoNumeric object.\n     *\n     * @param {number|string|null} rawValue The numeric value as understood by Javascript like a `Number`\n     * @param {boolean} saveChangeToHistory If set to `true`, then the change is recorded in the history array, otherwise it is not\n     * @private\n     */\n    _setRawValue(rawValue, saveChangeToHistory = true) {\n        // Only set the raw value if the given value is different from the current one\n        if (this.rawValue !== rawValue) { //TODO Manage the case where one value is a string while the other is a number?\n            const oldRawValue = this.rawValue;\n            // Update the raw value\n            this.rawValue = rawValue; // By default, if the `rawValue` is changed programmatically\n\n            if ((!AutoNumericHelper.isNull(this.settings.rawValueDivisor) && this.settings.rawValueDivisor !== 0) && // Only divide if the `rawValueDivisor` option is set\n                rawValue !== '' && rawValue !== null && // Do not modify the `rawValue` if it's an empty string or null\n                this._isUserManuallyEditingTheValue()) { // If the user is manually changing the element value\n                this.rawValue /= this.settings.rawValueDivisor;\n            }\n\n            // Broadcast the `rawValueModified` event since the `rawValue` has been modified\n            this._triggerEvent(AutoNumeric.events.rawValueModified, this.domElement, {\n                oldRawValue,\n                newRawValue: this.rawValue,\n                isPristine : this.isPristine(true),\n                error      : null,\n                aNElement  : this,\n            });\n\n            // Change the element style or use the relevant callbacks\n            this._parseStyleRules();\n\n            if (saveChangeToHistory) {\n                // Save in the history the last known raw value and formatted result selection\n                window.requestAnimationFrame(() => this._historyTableAdd()); // The use of `requestAnimationFrame` fixes PR #731 by avoiding \"Forced reflow\"\n            }\n        }\n    }\n\n    /**\n     * Set the given value on the DOM element, without affecting the `rawValue`.\n     * This sends an 'autoNumeric:formatted' event if the new value is different from the old one.\n     *\n     * @param {number|string} newElementValue\n     * @param {boolean} sendFormattedEvent If set to `true`, then the `AutoNumeric.events.formatted` event is sent if the value has changed\n     * @returns {AutoNumeric}\n     * @private\n     */\n    _setElementValue(newElementValue, sendFormattedEvent = true) {\n        //TODO Use an internal attribute to track the current value of the element `formattedValue` (like its counterpart `rawValue`). This would allow us to avoid calling `getElementValue` many times\n        const oldElementValue = AutoNumericHelper.getElementValue(this.domElement);\n\n        // Only update the value if it's different from the current one\n        if (newElementValue !== oldElementValue) {\n            this.internalModification = true;\n            AutoNumericHelper.setElementValue(this.domElement, newElementValue);\n            this.internalModification = false;\n\n            if (sendFormattedEvent) {\n                this._triggerEvent(AutoNumeric.events.formatted, this.domElement, {\n                    oldValue   : oldElementValue,\n                    newValue   : newElementValue,\n                    oldRawValue: this.rawValue,\n                    newRawValue: this.rawValue,\n                    isPristine : this.isPristine(false),\n                    error      : null,\n                    aNElement  : this,\n                });\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Set the given value on the DOM element, and the raw value on `this.rawValue`, if both are given.\n     * If only one value is given, then both the DOM element value and the raw value are set with that value.\n     * The third argument `saveChangeToHistory` defines if the change should be recorded in the history array.\n     * Note: if the second argument `rawValue` is a boolean, we consider that is really is the `saveChangeToHistory` argument.\n     *\n     * @param {number|string|null} newElementValue\n     * @param {number|string|null|boolean} rawValue\n     * @param {boolean} saveChangeToHistory\n     * @returns {AutoNumeric}\n     * @private\n     */\n    _setElementAndRawValue(newElementValue, rawValue = null, saveChangeToHistory = true) {\n        if (AutoNumericHelper.isNull(rawValue)) {\n            rawValue = newElementValue;\n        } else if (AutoNumericHelper.isBoolean(rawValue)) {\n            saveChangeToHistory = rawValue;\n            rawValue = newElementValue;\n        }\n\n        //XXX The order here is important ; the value should first be set on the element, then and only then we should update the raw value\n        // In the `set()` function, we make sure to call `_setRawValue` *after* `setElementValue` so that if `_setRawValue` calls a callback that modify the `rawValue`, then the new value is set correctly (after `setElementValue` briefly set its value first)\n        this._setElementValue(newElementValue);\n        this._setRawValue(rawValue, saveChangeToHistory);\n\n        return this;\n    }\n\n    /**\n     * Return the multiplied raw value with the `rawValueDivisor`.\n     * This is used to display different values between the raw and formatted values.\n     *\n     * @param {number|string|null} rawValue The numeric value as understood by Javascript like a `Number`\n     * @returns {number|string|null}\n     * @private\n     */\n    _getRawValueToFormat(rawValue) {\n        let rawValueForTheElementValue;\n        if ((!AutoNumericHelper.isNull(this.settings.rawValueDivisor) && this.settings.rawValueDivisor !== 0) && // Only multiply if the `rawValueDivisor` option is set\n            rawValue !== '' && rawValue !== null) { // Do not modify the `rawValue` if it's an empty string or null\n            // !this._isUserManuallyEditingTheValue()) { // If the user is NOT manually changing the element value, but that is done programmatically\n            rawValueForTheElementValue = rawValue * this.settings.rawValueDivisor;\n        } else {\n            rawValueForTheElementValue = rawValue;\n        }\n\n        return rawValueForTheElementValue;\n    }\n\n    /**\n     * Check if the given value has a corresponding key in the `valuesToStrings` option object.\n     *\n     * @param {number|string} value\n     * @returns {boolean} Returns `true` if such a key is found.\n     * @private\n     */\n    _checkValuesToStrings(value) {\n        return this.constructor._checkValuesToStringsArray(value, this.valuesToStringsKeys);\n    }\n\n    /**\n     * Check if the given value has a corresponding key in the `stringsArray` array.\n     *\n     * @param {number|string} key\n     * @param {array} stringsArray Array where the `key` is checked against its keys\n     * @returns {boolean} Returns `true` if such a key is found.\n     * @private\n     */\n    static _checkValuesToStringsArray(key, stringsArray) {\n        return AutoNumericHelper.isInArray(String(key), stringsArray);\n    }\n\n    /**\n     * Static helper for checking if the given `key` is found in the settings' `valuesToStrings` option object.\n     *\n     * @param {number|string} key\n     * @param {object} settings\n     * @returns {boolean}\n     * @private\n     */\n    static _checkValuesToStringsSettings(key, settings) {\n        return this._checkValuesToStringsArray(key, Object.keys(settings.valuesToStrings));\n    }\n\n    /**\n     * Static helper for checking if the given `value` is found in the settings' `valuesToStrings` option object.\n     *\n     * @param {number|string} value\n     * @param {object} settings\n     * @returns {boolean}\n     * @private\n     */\n    static _checkStringsToValuesSettings(value, settings) {\n        return this._checkValuesToStringsArray(value, Object.values(settings.valuesToStrings));\n    }\n\n    /**\n     * Return `true` if the user is currently modifying the element value manually.\n     *\n     * @returns {boolean}\n     * @private\n     */\n    _isUserManuallyEditingTheValue() {\n        // return (this.isFocused && this.isEditing) || this.isWheelEvent || this.isDropEvent;\n        return (this.isFocused && this.isEditing) || this.isDropEvent;\n    }\n\n    /**\n     * Execute the given callback function using the given result as its first parameter, and the AutoNumeric object as its second.\n     *\n     * @param {number|string|Array|null} result\n     * @param {function|null} callback If a callback is passed, then the result is passed to it as its first argument, and the AutoNumeric object has its second\n     * @private\n     */\n    _executeCallback(result, callback) {\n        if (!AutoNumericHelper.isNull(callback) && AutoNumericHelper.isFunction(callback)) {\n            callback(result, this);\n        }\n    }\n\n    /**\n     * Trigger the given event on the given element with the given detail.\n     * This takes into account the `eventBubbles` and `eventIsCancelable` options.\n     *\n     * @param {string} eventName\n     * @param {HTMLElement|HTMLDocument|EventTarget} element\n     * @param {object} detail\n     * @private\n     */\n    _triggerEvent(eventName, element = document, detail = null) {\n        AutoNumericHelper.triggerEvent(eventName, element, detail, this.settings.eventBubbles, this.settings.eventIsCancelable);\n    }\n\n    /**\n     * Alias of the `getNumericString()` function.\n     * Developers should use one of the more explicit function names to get what they want :\n     * - a numeric string : `getNumericString()`\n     * - a formatted string : `getFormatted()`\n     * - a number : `getNumber()`, or\n     * - a localized numeric string : `getLocalized()`\n     *\n     * @usage anElement.get();\n     *\n     * @param {function|null} callback If a callback is passed, then the result is passed to it as its first argument, and the AutoNumeric object has its second\n     *\n     * @deprecated\n     * @returns {string|null}\n     */\n    get(callback = null) {\n        return this.getNumericString(callback);\n    }\n\n    /**\n     * Return the unformatted value as a string.\n     * This can also return `null` if `rawValue` is null.\n     *\n     * @usage anElement.getNumericString();\n     *\n     * @param {function|null} callback If a callback is passed, then the result is passed to it as its first argument, and the AutoNumeric object has its second\n     *\n     * @returns {string|null}\n     */\n    getNumericString(callback = null) {\n        let result;\n        if (AutoNumericHelper.isNull(this.rawValue)) {\n            result = null;\n        } else {\n            // Always return a numeric string\n            // The following statement gets rid of the trailing zeros in the decimal places since the current method does not pad decimals\n            result = AutoNumericHelper.trimPaddedZerosFromDecimalPlaces(this.rawValue);\n        }\n\n        this._executeCallback(result, callback);\n\n        return result;\n    }\n\n    /**\n     * Return the current formatted value of the AutoNumeric element as a string\n     *\n     * @usage anElement.getFormatted()\n     *\n     * @param {function|null} callback If a callback is passed, then the result is passed to it as its first argument, and the AutoNumeric object has its second\n     *\n     * @returns {string}\n     */\n    getFormatted(callback = null) {\n        if (!('value' in this.domElement || 'textContent' in this.domElement)) {\n            // Make sure `.value` or `.textContent` exists before trying to access those properties\n            AutoNumericHelper.throwError('Unable to get the formatted string from the element.');\n        }\n\n        const result = AutoNumericHelper.getElementValue(this.domElement);\n        this._executeCallback(result, callback);\n\n        return result;\n    }\n\n    /**\n     * Return the element unformatted value as a real Javascript number.\n     * Warning: This can lead to precision problems with big numbers that should be stored as strings.\n     *\n     * @usage anElement.getNumber()\n     *\n     * @param {function|null} callback If a callback is passed, then the result is passed to it as its first argument, and the AutoNumeric object has its second\n     *\n     * @returns {number|null}\n     */\n    getNumber(callback = null) {\n        let result;\n        if (this.rawValue === null) {\n            result = null;\n        } else {\n            result = this.constructor._toLocale(this.getNumericString(), 'number', this.settings);\n        }\n\n        this._executeCallback(result, callback);\n\n        return result;\n    }\n\n    /**\n     * Returns the unformatted value, but following the `outputFormat` setting, which means the output can either be :\n     * - a string (that could or could not represent a number (i.e. \"12345,67-\")), or\n     * - a plain number (if the setting 'number' is used).\n     *\n     * By default, the returned values are an ISO numeric string \"1234.56\" or \"-1234.56\" where the decimal character is a period.\n     * Check the \"outputFormat\" option definition for more details.\n     *\n     * @usage anElement.getLocalized();\n     *\n     * @param {null|string|function} forcedOutputFormat If set to something different from `null`, then this is used as an overriding outputFormat option\n     * @param {function|null} callback If a callback is passed, then the result is passed to it as its first argument, and the AutoNumeric object has its second\n     *\n     * @returns {*}\n     */\n    getLocalized(forcedOutputFormat = null, callback = null) {\n        // First, check if only a callback has been passed, and if so, sanitize the parameters\n        if (AutoNumericHelper.isFunction(forcedOutputFormat) && AutoNumericHelper.isNull(callback)) {\n            callback = forcedOutputFormat;\n            forcedOutputFormat = null;\n        }\n\n        // Then get the localized value\n        let value;\n        if (AutoNumericHelper.isEmptyString(this.rawValue)) {\n            value = '';\n        } else {\n            // Here I use `this.rawValue` instead of `this.getNumericString()` since the current input value could be unformatted with a localization (i.e. '1234567,89-').\n            // I also convert the rawValue to a number, then back to a string in order to drop the decimal part if the rawValue is an integer.\n            value = ''+Number(this.rawValue);\n        }\n\n        if (value !== '' && Number(value) === 0 && this.settings.leadingZero !== AutoNumeric.options.leadingZero.keep) {\n            value = '0';\n        }\n\n        let outputFormatToUse;\n        if (AutoNumericHelper.isNull(forcedOutputFormat)) {\n            outputFormatToUse = this.settings.outputFormat;\n        } else {\n            outputFormatToUse = forcedOutputFormat;\n        }\n\n        const result = this.constructor._toLocale(value, outputFormatToUse, this.settings);\n        this._executeCallback(result, callback);\n\n        return result;\n    }\n\n    /**\n     * Force the element to reformat its value again (just in case the formatting has been lost).\n     * This can be used right after a form submission for instance (after a previous call to `unformat`).\n     *\n     * @example anElement.reformat()\n     *\n     * @returns {AutoNumeric}\n     */\n    reformat() {\n        // `this.rawValue` is used instead of `this.domElement.value` because when the content is `unformatLocalized`, it can become a string that cannot be converted to a number easily\n        this.set(this.rawValue);\n\n        return this;\n    }\n\n    /**\n     * Remove the formatting and keep only the raw unformatted value in the element (as a numericString)\n     * Note: this is loosely based on the previous 'unSet()' function\n     *\n     * By default, values are returned as ISO numeric strings (i.e. \"1234.56\" or \"-1234.56\"), where the decimal character is a period.\n     * @example anElement.unformat()\n     *\n     * @returns {AutoNumeric}\n     */\n    unformat() {\n        this._setElementValue(this.getNumericString());\n\n        return this;\n    }\n\n    /**\n     * Remove the formatting and keep only the localized unformatted value in the element, with the option to override the default outputFormat if needed\n     *\n     * Locale formats are supported \"1234.56-\" or \"1234,56\" or \"-1234,56 or \"1234,56-\", or even plain numbers.\n     * Take a look at the `outputFormat` option definition in the default settings for more details.\n     *\n     * @param {null|string} forcedOutputFormat If set to something different from `null`, then this is used as an overriding outputFormat option\n     * @returns {AutoNumeric}\n     */\n    unformatLocalized(forcedOutputFormat = null) {\n        this._setElementValue(this.getLocalized(forcedOutputFormat));\n\n        return this;\n    }\n\n    /**\n     * Return `true` if the current value is the same as when the element got initialized.\n     * Note: By default, this returns `true` if the raw unformatted value is still the same even if the formatted one has changed (due to a configuration update for instance).\n     * In order to test if the formatted value is the same (which means neither the raw value nor the settings have been changed), then you must pass `false` as its argument.\n     *\n     * @param {boolean} checkOnlyRawValue If set to `true`, the pristine value is done on the raw unformatted value, not the formatted one.  If set to `false`, this also checks that the formatted value hasn't changed.\n     * @returns {boolean}\n     */\n    isPristine(checkOnlyRawValue = true) {\n        let result;\n        if (checkOnlyRawValue) {\n            result = this.initialValue === this.getNumericString();\n        } else {\n            result = this.initialValueHtmlAttribute === this.getFormatted();\n        }\n\n        return result;\n    }\n\n    /**\n     * Select the formatted element content, based on the `selectNumberOnly` option\n     *\n     * @returns {AutoNumeric}\n     */\n    select() {\n        if (this.settings.selectNumberOnly) {\n            this.selectNumber();\n        } else {\n            this._defaultSelectAll();\n        }\n\n        return this;\n    }\n\n    /**\n     * Select the whole element content (including the currency symbol).\n     * @private\n     */\n    _defaultSelectAll() {\n        AutoNumericHelper.setElementSelection(this.domElement, 0, AutoNumericHelper.getElementValue(this.domElement).length);\n    }\n\n    /**\n     * Select only the numbers in the formatted element content, leaving out the currency symbol, whatever the value of the `selectNumberOnly` option\n     *\n     * @returns {AutoNumeric}\n     */\n    selectNumber() {\n        //TODO Make sure the selection is ok when showPositiveSign is set to `true` (select the negative sign, but not the positive one)\n        const unformattedValue = AutoNumericHelper.getElementValue(this.domElement);\n        const valueLen = unformattedValue.length;\n        const currencySymbolSize = this.settings.currencySymbol.length;\n        const currencySymbolPlacement = this.settings.currencySymbolPlacement;\n        const negLen = (!AutoNumericHelper.isNegative(unformattedValue, this.settings.negativeSignCharacter))?0:1;\n        const suffixTextLen = this.settings.suffixText.length;\n\n        let start;\n        if (currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.suffix) {\n            start = 0;\n        } else if (this.settings.negativePositiveSignPlacement === AutoNumeric.options.negativePositiveSignPlacement.left &&\n            negLen === 1 && currencySymbolSize > 0) {\n            start = currencySymbolSize + 1;\n        } else {\n            start = currencySymbolSize;\n        }\n\n        let end;\n        if (currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.prefix) {\n            end = valueLen - suffixTextLen;\n        } else {\n            switch (this.settings.negativePositiveSignPlacement) {\n                case AutoNumeric.options.negativePositiveSignPlacement.left:\n                    end = valueLen - (suffixTextLen + currencySymbolSize);\n                    break;\n                case AutoNumeric.options.negativePositiveSignPlacement.right:\n                    if (currencySymbolSize > 0) {\n                        end = valueLen - (currencySymbolSize + negLen + suffixTextLen);\n                    } else {\n                        end = valueLen - (currencySymbolSize + suffixTextLen);\n                    }\n                    break;\n                default :\n                    end = valueLen - (currencySymbolSize + suffixTextLen);\n            }\n        }\n\n        AutoNumericHelper.setElementSelection(this.domElement, start, end);\n\n        return this;\n    }\n\n    /**\n     * Select only the integer part in the formatted element content, whatever the value of `selectNumberOnly`\n     *\n     * @returns {AutoNumeric}\n     */\n    selectInteger() {\n        let start = 0;\n        const isPositive = this.rawValue >= 0;\n\n        // Negative or positive sign, if any\n        if (this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.prefix ||\n            (this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.suffix &&\n            (this.settings.negativePositiveSignPlacement === AutoNumeric.options.negativePositiveSignPlacement.prefix ||\n            this.settings.negativePositiveSignPlacement === AutoNumeric.options.negativePositiveSignPlacement.none))) {\n            if ((this.settings.showPositiveSign && isPositive) ||  // This only exclude the positive sign from being selected\n                (!isPositive && this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.prefix && this.settings.negativePositiveSignPlacement === AutoNumeric.options.negativePositiveSignPlacement.left)) { // And this excludes the negative sign from being selected in this special case : '-€ 1.234,57suffixText'\n                start = start + 1;\n            }\n        }\n\n        // Currency symbol\n        if (this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.prefix) {\n            start = start + this.settings.currencySymbol.length;\n        }\n\n        // Calculate the selection end position\n        const elementValue = AutoNumericHelper.getElementValue(this.domElement);\n        let end = elementValue.indexOf(this.settings.decimalCharacter);\n        if (end === -1) {\n            // No decimal character found\n            if (this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.suffix) {\n                end = elementValue.length - this.settings.currencySymbol.length;\n            } else {\n                end = elementValue.length;\n            }\n\n            // Trailing negative sign\n            if (!isPositive &&\n                (this.settings.negativePositiveSignPlacement === AutoNumeric.options.negativePositiveSignPlacement.suffix ||\n                this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.suffix)) {\n                end = end - 1;\n            }\n\n            // Avoid selecting the suffix test\n            end = end - this.settings.suffixText.length;\n        }\n\n        AutoNumericHelper.setElementSelection(this.domElement, start, end);\n\n        return this;\n    }\n\n    /**\n     * Select only the decimal part in the formatted element content, whatever the value of `selectNumberOnly`\n     * Multiple cases are possible :\n     * +1.234,57suffixText\n     *\n     * € +1.234,57suffixText\n     * +€ 1.234,57suffixText\n     * € 1.234,57+suffixText\n     *\n     * 1.234,57+ €suffixText\n     * 1.234,57 €+suffixText\n     * +1.234,57 €suffixText\n     *\n     * @returns {AutoNumeric}\n     */\n    selectDecimal() {\n        let start = AutoNumericHelper.getElementValue(this.domElement).indexOf(this.settings.decimalCharacter);\n        let end;\n\n        if (start === -1) {\n            // The decimal character has not been found, we deselect all\n            start = 0;\n            end = 0;\n        } else {\n            // A decimal character has been found\n            start = start + 1; // We add 1 to exclude the decimal character from the selection\n\n            let decimalCount;\n            if (this.isFocused) {\n                decimalCount = this.settings.decimalPlacesShownOnFocus;\n            } else {\n                decimalCount = this.settings.decimalPlacesShownOnBlur;\n            }\n\n            end = start + Number(decimalCount);\n        }\n\n        AutoNumericHelper.setElementSelection(this.domElement, start, end);\n\n        return this;\n    }\n\n    /**\n     * Return the DOM element reference of the autoNumeric-managed element\n     *\n     * @returns {HTMLElement|HTMLInputElement}\n     */\n    node() {\n        return this.domElement;\n    }\n\n    /**\n     * Return the DOM element reference of the parent node of the autoNumeric-managed element\n     *\n     * @returns {HTMLElement|HTMLInputElement|Node}\n     */\n    parent() {\n        return this.domElement.parentNode;\n    }\n\n    /**\n     * Detach the current AutoNumeric element from the shared local 'init' list.\n     * This means any changes made on that local shared list will not be transmitted to that element anymore.\n     * Note : The user can provide another AutoNumeric element, and detach this one instead of the current one.\n     *\n     * @param {AutoNumeric} otherAnElement\n     * @returns {AutoNumeric}\n     */\n    detach(otherAnElement = null) { //FIXME test this\n        let domElementToDetach;\n        if (!AutoNumericHelper.isNull(otherAnElement)) {\n            domElementToDetach = otherAnElement.node();\n        } else {\n            domElementToDetach = this.domElement;\n        }\n\n        this._removeFromLocalList(domElementToDetach); //FIXME What happens if the selected dom element does not exist in the list?\n\n        return this;\n    }\n\n    /**\n     * Attach the given AutoNumeric element to the shared local 'init' list.\n     * When doing that, by default the DOM content is left untouched.\n     * The user can force a reformat with the new shared list options by passing a second argument to `true`.\n     *\n     * @param {AutoNumeric} otherAnElement\n     * @param {boolean} reFormat\n     * @returns {AutoNumeric}\n     */\n    attach(otherAnElement, reFormat = true) { //FIXME test this\n        this._addToLocalList(otherAnElement.node()); //FIXME Should we make sure the element is not already in the list?\n        if (reFormat) {\n            otherAnElement.update(this.settings);\n        }\n\n        return this;\n    }\n\n    /**\n     * Format and return the given value, or set the formatted value into the given DOM element if one is passed as an argument.\n     * By default, this use the current element settings.\n     * The user can override any option of its choosing by passing an option object.\n     *\n     * @param {number|HTMLElement|HTMLInputElement} valueOrElement\n     * @param {null|object} optionOverride\n     * @returns {string|null}\n     */\n    formatOther(valueOrElement, optionOverride = null) { //FIXME test this\n        return this._formatOrUnformatOther(true, valueOrElement, optionOverride);\n    }\n\n    /**\n     * Unformat and return the raw numeric string corresponding to the given value, or directly set the unformatted value into the given DOM element if one is passed as an argument.\n     * By default, this use the current element settings.\n     * The user can override any option of its choosing by passing an option object.\n\n     * @param {string|HTMLElement|HTMLInputElement} stringOrElement\n     * @param {null|object} optionOverride\n     * @returns {string|null}\n     */\n    unformatOther(stringOrElement, optionOverride = null) { //FIXME test this\n        return this._formatOrUnformatOther(false, stringOrElement, optionOverride);\n    }\n\n    /**\n     * Method that either format or unformat the value of another element.\n     *\n     * - Format and return the given value, or set the formatted value into the given DOM element if one is passed as an argument.\n     * - Unformat and return the raw numeric string corresponding to the given value, or directly set the unformatted value into the given DOM element if one is passed as an argument.\n     *\n     * By default, this use the current element settings.\n     * The user can override any option of its choosing by passing an option object.\n     *\n     * @param {boolean} isFormatting If set to `true`, then the method formats, otherwise if set to `false`, it unformats\n     * @param {number|string|HTMLElement|HTMLInputElement} valueOrStringOrElement\n     * @param {null|object} optionOverride\n     * @returns {string|null}\n     * @private\n     */\n    _formatOrUnformatOther(isFormatting, valueOrStringOrElement, optionOverride = null) { //FIXME test this\n        // If the user wants to override the current element settings temporarily\n        let settingsToUse;\n        if (!AutoNumericHelper.isNull(optionOverride)) {\n            settingsToUse = this._cloneAndMergeSettings(optionOverride);\n        } else {\n            settingsToUse = this.settings;\n        }\n\n        // Then the unformatting is done...\n        let result;\n        if (AutoNumericHelper.isElement(valueOrStringOrElement)) {\n            // ...either directly on the DOM element value\n            const elementValue = AutoNumericHelper.getElementValue(valueOrStringOrElement);\n            if (isFormatting) {\n                result = AutoNumeric.format(elementValue, settingsToUse);\n            }\n            else {\n                result = AutoNumeric.unformat(elementValue, settingsToUse);\n            }\n\n            AutoNumericHelper.setElementValue(valueOrStringOrElement, result); //TODO Use `unformatAndSet` and `formatAndSet`instead\n\n            return null;\n        }\n\n        // ...or on the given value\n        if (isFormatting) {\n            result = AutoNumeric.format(valueOrStringOrElement, settingsToUse);\n        }\n        else {\n            result = AutoNumeric.unformat(valueOrStringOrElement, settingsToUse);\n        }\n\n        return result;\n    }\n\n    /**\n     * Use the current AutoNumeric element settings to initialize the DOM element(s) given as a parameter.\n     * Doing so will *link* the AutoNumeric elements together since they will share the same local AutoNumeric element list.\n     * (cf. prototype pattern : https://en.wikipedia.org/wiki/Prototype_pattern)\n     *\n     * You can `init` either a single DOM element (in that case an AutoNumeric object will be returned), or an array of DOM elements or a string that will be used as a CSS selector. In the latter cases, an array of AutoNumeric objects will then be returned (or an empty array if nothing gets selected by the CSS selector).\n     *\n     * Use case : Once you have an AutoNumeric element already setup correctly with the right options, you can use it as many times you want to initialize as many other DOM elements as needed.\n     * Note : this works only on elements that can be managed by autoNumeric.\n     *\n     * @param {HTMLElement|HTMLInputElement|Array<HTMLElement|HTMLInputElement>|string} domElementOrArrayOrString\n     * @param {boolean} attached If set to `false`, then the newly generated AutoNumeric element will not share the same local element list\n     * @returns {AutoNumeric|[AutoNumeric]}\n     */\n    init(domElementOrArrayOrString, attached = true) {\n        let returnASingleAutoNumericObject = false; // By default, this function returns an array of AutoNumeric objects\n        let domElementsArray = [];\n        if (AutoNumericHelper.isString(domElementOrArrayOrString)) {\n            domElementsArray = [...document.querySelectorAll(domElementOrArrayOrString)]; // Convert a NodeList to an Array\n        } else if (AutoNumericHelper.isElement(domElementOrArrayOrString)) {\n            domElementsArray.push(domElementOrArrayOrString);\n            returnASingleAutoNumericObject = true; // Special case when only one DOM element is passed as a parameter\n        } else if (AutoNumericHelper.isArray(domElementOrArrayOrString)) {\n            domElementsArray = domElementOrArrayOrString;\n        } else {\n            AutoNumericHelper.throwError(`The given parameters to the 'init' function are invalid.`);\n        }\n\n        if (domElementsArray.length === 0) {\n            AutoNumericHelper.warning(`No valid DOM elements were given hence no AutoNumeric object were instantiated.`, true);\n\n            return [];\n        }\n\n        const currentLocalList = this._getLocalList();\n        const autoNumericObjectsArray = [];\n\n        // Instantiate (and link depending on `attached`) each AutoNumeric objects\n        domElementsArray.forEach(domElement => {\n            // Initialize the new AutoNumeric element\n            const originalCreateLocalListSetting = this.settings.createLocalList;\n            if (attached) {\n                // Temporary variable to know if we should create the local list during the initialization (since we'll remove it afterward)\n                this.settings.createLocalList = false;\n            }\n\n            const newAutoNumericElement =  new AutoNumeric(domElement, AutoNumericHelper.getElementValue(domElement), this.settings);\n\n            // Set the common shared local list if needed\n            // If the user wants to create a detached new AutoNumeric element, then skip the following step that bind the two elements together by default\n            if (attached) {\n                // 1) Set the local list reference to point to the initializer's one\n                newAutoNumericElement._setLocalList(currentLocalList);\n\n                // 2) Add the new element to that existing list\n                this._addToLocalList(domElement, newAutoNumericElement); // Here we use the *new* AutoNumeric object reference to add to the local list, since we'll need the reference to `this` in the methods to points to that new AutoNumeric object.\n                this.settings.createLocalList = originalCreateLocalListSetting;\n            }\n\n            autoNumericObjectsArray.push(newAutoNumericElement);\n        });\n\n        if (returnASingleAutoNumericObject) {\n            // If a single DOM element was used as the parameter, then we return an AutoNumeric object directly\n            return autoNumericObjectsArray[0];\n        }\n\n        // ...otherwise we return an Array of AutoNumeric objects\n        return autoNumericObjectsArray;\n    }\n\n    /**\n     * Reset the element value either to the empty string '', or the currency sign, depending on the `emptyInputBehavior` option value.\n     * If you set the `forceClearAll` argument to `true`, then the `emptyInputBehavior` option is overridden and the whole input is clear, including any currency sign.\n     *\n     * @param {boolean} forceClearAll\n     * @returns {AutoNumeric}\n     */\n    clear(forceClearAll = false) {\n        if (forceClearAll) {\n            const temporaryForcedOptions = {\n                emptyInputBehavior: AutoNumeric.options.emptyInputBehavior.focus,\n            };\n            this.set('', temporaryForcedOptions);\n        } else {\n            this.set('');\n        }\n\n        return this;\n    }\n\n    /**\n     * Remove the autoNumeric data and event listeners from the element, but keep the element content intact.\n     * This also clears the value from sessionStorage (or cookie, depending on browser supports).\n     * Note: this does not remove the formatting.\n     *\n     * @example anElement.remove()\n     */\n    remove() {\n        this._removeValueFromPersistentStorage();\n        this._removeEventListeners();\n        this._removeWatcher();\n\n        // Also remove the element from the local AutoNumeric list\n        this._removeFromLocalList(this.domElement);\n        // Also remove the element from the global AutoNumeric list\n        this.constructor._removeFromGlobalList(this);\n    }\n\n    /**\n     * Remove the autoNumeric data and event listeners from the element, and reset its value to the empty string ''.\n     * This also clears the value from sessionStorage (or cookie, depending on browser supports).\n     *\n     * @example anElement.wipe()\n     */\n    wipe() {\n        this._setElementValue('', false); // Do not send the 'AutoNumeric.events.formatted' event when wiping an AutoNumeric object\n        this.remove();\n    }\n\n    /**\n     * Remove the autoNumeric data and event listeners from the element, and delete the DOM element altogether\n     */\n    nuke() {\n        this.remove();\n        // Remove the element from the DOM\n        this.domElement.parentNode.removeChild(this.domElement);\n    }\n\n\n    // Special functions that really work on the parent <form> element, instead of the <input> element itself\n\n    /**\n     * Return a reference to the parent <form> element if it exists, otherwise return `null`.\n     * If the parent form element as already been found, this directly return a reference to it.\n     * However, you can force AutoNumeric to search again for its reference by passing `true` as a parameter to this method.\n     * This method updates the `this.parentForm` attribute.\n     *\n     * In either case, whenever a new parent form is set for the current AutoNumeric element, we make sure to update the anCount and anFormHandler attributes on both the old form and the new one (for instance in case the user moved the input elements with `appendChild()` since AutoNumeric cannot not detect that).\n     *\n     * @param {boolean} forceSearch If set to `true`, the parent form is searched again, even if `this.parentForm` is already set.\n     *\n     * @returns {HTMLFormElement|null}\n     */\n    form(forceSearch = false) {\n        if (forceSearch || AutoNumericHelper.isUndefinedOrNullOrEmpty(this.parentForm)) {\n            const newParentForm = this._getParentForm();\n            if (!AutoNumericHelper.isNull(newParentForm) && newParentForm !== this.parentForm) {\n                // If the current parent form exists and is different from the previous parent form\n\n                // Search for all the AutoNumeric elements in the old parent form\n                const oldANChildren = this._getFormAutoNumericChildren(this.parentForm);\n                // Update the anCount with the correct number of AutoNumeric elements\n                this.parentForm.dataset.anCount = oldANChildren.length;\n\n                // Check if the new parent form already has a anFormHandler name\n                if (this._hasFormHandlerFunction(newParentForm)) {\n                    this._incrementParentFormCounter(newParentForm); // Increment its counter\n                } else {\n                    // Create one and set the anCount to 1\n                    this._storeFormHandlerFunction(newParentForm);\n                    this._initializeFormCounterToOne(newParentForm);\n                }\n            }\n\n            this.parentForm = newParentForm;\n        }\n\n        return this.parentForm;\n    }\n\n    /**\n     * Returns an array of the AutoNumeric-managed elements for the given form element is passed, otherwise for the current `this.parentForm` element.\n     * This search for <input> elements, as well as contenteditable non-input tag ones. This also search for elements outside the `form` elements.\n     *\n     * @param {HTMLFormElement|null} formElement\n     *\n     * @returns {Array.<HTMLInputElement>}\n     * @private\n     */\n    _getFormAutoNumericChildren(formElement) {\n        // Search for all the child AutoNumeric elements in that parent form\n        const inputElementsList = [...formElement.elements]; //XXX `.elements` here only returns the form's inputs, not the other child elements that could be contenteditable\n        const nonInputContentEditableElementsList = this._getContenteditableElements(formElement); // Get the contenteditable elements inside and outside the form element\n        const elementsList = AutoNumericHelper.arrayUnique(inputElementsList, nonInputContentEditableElementsList);\n\n        return elementsList.filter(element => this.constructor.isManagedByAutoNumeric(element));\n    }\n\n    /**\n     * Returns an array of the non-input contenteditable elements linked to the given form element.\n     * Two types of elements are possible, either located inside the form element, or outside.\n     * For the outside elements, this only works if the form element has a defined id and that id is referenced on the non-input element as the `form` attribute.\n     * If no elements can be found, then an empty array is returned.\n     *\n     * @param {HTMLFormElement|null} formElement\n     *\n     * @returns {Array.<HTMLInputElement>}\n     * @private\n     */\n    _getContenteditableElements(formElement) {\n        if (AutoNumericHelper.isUndefinedOrNullOrEmpty(formElement) || !formElement.hasAttribute('id')) {\n            return [];\n        }\n        const elementsInside = [...formElement.querySelectorAll('[contenteditable=true]')];\n        const elementsOutside = [...document.querySelectorAll(`*:not(input)[form=${formElement.getAttribute('id')}][contenteditable=true]`)];\n\n        return AutoNumericHelper.arrayUnique(elementsInside, elementsOutside);\n    }\n\n    /**\n     * Returns a reference to the parent <form> element if it exists, otherwise return `null`.\n     *\n     * @returns {HTMLFormElement|null}\n     * @private\n     */\n    _getParentForm() {\n        if (!AutoNumericHelper.isUndefined(this.domElement.form)) return this.domElement.form; // This catches input elements outside the form element\n\n        if (this.domElement.tagName.toLowerCase() === 'body') {\n            return null;\n        }\n\n        let node = this.domElement;\n        let tagName;\n        do {\n            node = node.parentNode;\n            if (AutoNumericHelper.isNull(node)) {\n                // Special case when using templates with frameworks like Vue.js, where the input element can be 'detached' when initializing the DOM structure\n                return null;\n            }\n\n            if (node.tagName) {\n                tagName = node.tagName.toLowerCase();\n            } else {\n                tagName = '';\n            }\n\n            if (tagName === 'body') {\n                // Get out of the loop if we get up to the `<body>` element\n                break;\n            }\n        } while (tagName !== 'form');\n\n        if (tagName === 'form') {\n            return node;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Return a string in standard URL-encoded notation with the form input values being unformatted.\n     * This string can be used as a query for instance.\n     *\n     * @returns {string}\n     */\n    formNumericString() {\n        return this.constructor._serializeNumericString(this.form(), this.settings.serializeSpaces);\n    }\n\n    /**\n     * Return a string in standard URL-encoded notation with the form input values being formatted.\n     *\n     * @returns {string}\n     */\n    formFormatted() {\n        return this.constructor._serializeFormatted(this.form(), this.settings.serializeSpaces);\n    }\n\n    /**\n     * Return a string in standard URL-encoded notation with the form input values, with localized values.\n     * The default output format can be overridden by passing the option as a parameter.\n     *\n     * @param {null|string} forcedOutputFormat If set to something different from `null`, then this is used as an overriding outputFormat option\n     * @returns {string}\n     */\n    formLocalized(forcedOutputFormat = null) {\n        let outputFormatToUse;\n        if (AutoNumericHelper.isNull(forcedOutputFormat)) {\n            outputFormatToUse = this.settings.outputFormat;\n        } else {\n            outputFormatToUse = forcedOutputFormat;\n        }\n\n        return this.constructor._serializeLocalized(this.form(), this.settings.serializeSpaces, outputFormatToUse);\n    }\n\n    /**\n     * Return an array containing an object for each form <input> element.\n     * Those objects are of the following structure `{ name: foo, value: '42' }`, where the `name` is the DOM element name, and the `value` is an unformatted numeric string.\n     *\n     * @returns {Array}\n     */\n    formArrayNumericString() {\n        return this.constructor._serializeNumericStringArray(this.form(), this.settings.serializeSpaces);\n    }\n\n    /**\n     * Return an array containing an object for each form <input> element.\n     * Those objects are of the following structure `{ name: foo, value: '42' }`, where the `name` is the DOM element name, and the `value` is the formatted string.\n     *\n     * @returns {Array}\n     */\n    formArrayFormatted() {\n        return this.constructor._serializeFormattedArray(this.form(), this.settings.serializeSpaces);\n    }\n\n    /**\n     * Return an array containing an object for each form <input> element.\n     * Those objects are of the following structure `{ name: foo, value: '42' }`, where the `name` is the DOM element name, and the `value` is the localized numeric string.\n     *\n     * @param {null|string} forcedOutputFormat If set to something different from `null`, then this is used as an overriding outputFormat option\n     * @returns {Array}\n     */\n    formArrayLocalized(forcedOutputFormat = null) {\n        let outputFormatToUse;\n        if (AutoNumericHelper.isNull(forcedOutputFormat)) {\n            outputFormatToUse = this.settings.outputFormat;\n        } else {\n            outputFormatToUse = forcedOutputFormat;\n        }\n\n        return this.constructor._serializeLocalizedArray(this.form(), this.settings.serializeSpaces, outputFormatToUse);\n    }\n\n    /**\n     * Return a JSON string containing an object representing the form input values.\n     * This is based on the result of the `formArrayNumericString()` function.\n     *\n     * @returns {string}\n     */\n    formJsonNumericString() {\n        return JSON.stringify(this.formArrayNumericString());\n    }\n\n    /**\n     * Return a JSON string containing an object representing the form input values.\n     * This is based on the result of the `formArrayFormatted()` function.\n     *\n     * @returns {string}\n     */\n    formJsonFormatted() {\n        return JSON.stringify(this.formArrayFormatted());\n    }\n\n    /**\n     * Return a JSON string containing an object representing the form input values.\n     * This is based on the result of the `formArrayLocalized()` function.\n     *\n     * @param {null|string} forcedOutputFormat If set to something different from `null`, then this is used as an overriding outputFormat option\n     * @returns {string}\n     */\n    formJsonLocalized(forcedOutputFormat = null) {\n        return JSON.stringify(this.formArrayLocalized(forcedOutputFormat));\n    }\n\n    /**\n     * Unformat all the autoNumeric-managed elements that are a child of the parent <form> element of this DOM element, to numeric strings\n     *\n     * @returns {AutoNumeric}\n     */\n    formUnformat() { //FIXME test this\n        const inputs = this.constructor._getChildANInputElement(this.form());\n        inputs.forEach(input => {\n            AutoNumeric.getAutoNumericElement(input).unformat();\n        });\n\n        return this;\n    }\n\n    /**\n     * Unformat all the autoNumeric-managed elements that are a child of the parent <form> element of this DOM element, to localized strings\n     *\n     * @returns {AutoNumeric}\n     */\n    formUnformatLocalized() { //FIXME test this\n        const inputs = this.constructor._getChildANInputElement(this.form());\n        inputs.forEach(input => {\n            AutoNumeric.getAutoNumericElement(input).unformatLocalized();\n        });\n\n        return this;\n    }\n\n    /**\n     * Reformat all the autoNumeric-managed elements that are a child of the parent <form> element of this DOM element\n     *\n     * @returns {AutoNumeric}\n     */\n    formReformat() { //FIXME test this\n        const inputs = this.constructor._getChildANInputElement(this.form());\n        inputs.forEach(input => {\n            AutoNumeric.getAutoNumericElement(input).reformat();\n        });\n\n        return this;\n    }\n\n    /**\n     * Convert the input values to numeric strings, submit the form, then reformat those back.\n     * The function can either take a callback, or not. If it doesn't, the default `form.submit()` function will be called.\n     * Otherwise, it runs `callback(value)` with `value` being equal to the result of `formNumericString()`.\n     *\n     * @param {function|null} callback\n     * @returns {AutoNumeric}\n     */\n    formSubmitNumericString(callback = null) { //FIXME test this\n        if (AutoNumericHelper.isNull(callback)) {\n            this.formUnformat();\n            this.form().submit();\n            this.formReformat();\n        } else if (AutoNumericHelper.isFunction(callback)) {\n            callback(this.formNumericString());\n        } else {\n            AutoNumericHelper.throwError(`The given callback is not a function.`);\n        }\n\n        return this;\n    }\n\n    /**\n     * Submit the form with the current formatted values.\n     * The function can either take a callback, or not. If it doesn't, the default `form.submit()` function will be called.\n     * Otherwise, it runs `callback(value)` with `value` being equal to the result of `formFormatted()`.\n     *\n     * @param {function|null} callback\n     * @returns {AutoNumeric}\n     */\n    formSubmitFormatted(callback = null) { //FIXME test this\n        if (AutoNumericHelper.isNull(callback)) {\n            this.form().submit();\n        } else if (AutoNumericHelper.isFunction(callback)) {\n            callback(this.formFormatted());\n        } else {\n            AutoNumericHelper.throwError(`The given callback is not a function.`);\n        }\n\n        return this;\n    }\n\n    /**\n     * Convert the input values to localized strings, submit the form, then reformat those back.\n     * The function can either take a callback, or not. If it doesn't, the default `form.submit()` function will be called.\n     * Otherwise, it runs `callback(value)` with `value` being equal to the result of `formLocalized()`.\n     *\n     * @param {null|string} forcedOutputFormat If set to something different from `null`, then this is used as an overriding outputFormat option\n     * @param {function|null} callback\n     * @returns {AutoNumeric}\n     */\n    formSubmitLocalized(forcedOutputFormat = null, callback = null) { //FIXME test this\n        if (AutoNumericHelper.isNull(callback)) {\n            this.formUnformatLocalized();\n            this.form().submit();\n            this.formReformat();\n        } else if (AutoNumericHelper.isFunction(callback)) {\n            callback(this.formLocalized(forcedOutputFormat));\n        } else {\n            AutoNumericHelper.throwError(`The given callback is not a function.`);\n        }\n\n        return this;\n    }\n\n    /**\n     * Generate an array of numeric strings from the `<input>` elements, and pass it to the given callback.\n     * Under the hood, the array is generated via a call to `formArrayNumericString()`.\n     *\n     * @param {function} callback\n     * @returns {AutoNumeric}\n     */\n    formSubmitArrayNumericString(callback) { //FIXME test this\n        if (AutoNumericHelper.isFunction(callback)) {\n            callback(this.formArrayNumericString());\n        } else {\n            AutoNumericHelper.throwError(`The given callback is not a function.`);\n        }\n\n        return this;\n    }\n\n    /**\n     * Generate an array of the current formatted values from the `<input>` elements, and pass it to the given callback.\n     * Under the hood, the array is generated via a call to `formArrayFormatted()`.\n     *\n     * @param {function} callback\n     * @returns {AutoNumeric}\n     */\n    formSubmitArrayFormatted(callback) { //FIXME test this\n        if (AutoNumericHelper.isFunction(callback)) {\n            callback(this.formArrayFormatted());\n        } else {\n            AutoNumericHelper.throwError(`The given callback is not a function.`);\n        }\n\n        return this;\n    }\n\n    /**\n     * Generate an array of localized strings from the `<input>` elements, and pass it to the given callback.\n     * Under the hood, the array is generated via a call to `formArrayLocalized()`.\n     *\n     * @param {function} callback\n     * @param {null|string} forcedOutputFormat If set to something different from `null`, then this is used as an overriding outputFormat option\n     * @returns {AutoNumeric}\n     */\n    formSubmitArrayLocalized(callback, forcedOutputFormat = null) { //FIXME test this\n        if (AutoNumericHelper.isFunction(callback)) {\n            callback(this.formArrayLocalized(forcedOutputFormat));\n        } else {\n            AutoNumericHelper.throwError(`The given callback is not a function.`);\n        }\n\n        return this;\n    }\n\n    /**\n     * Generate a JSON string with the numeric strings values from the `<input>` elements, and pass it to the given callback.\n     * Under the hood, the array is generated via a call to `formJsonNumericString()`.\n     *\n     * @param {function} callback\n     * @returns {AutoNumeric}\n     */\n    formSubmitJsonNumericString(callback) { //FIXME test this\n        if (AutoNumericHelper.isFunction(callback)) {\n            callback(this.formJsonNumericString());\n        } else {\n            AutoNumericHelper.throwError(`The given callback is not a function.`);\n        }\n\n        return this;\n    }\n\n    /**\n     * Generate a JSON string with the current formatted values from the `<input>` elements, and pass it to the given callback.\n     * Under the hood, the array is generated via a call to `formJsonFormatted()`.\n     *\n     * @param {function} callback\n     * @returns {AutoNumeric}\n     */\n    formSubmitJsonFormatted(callback) { //FIXME test this\n        if (AutoNumericHelper.isFunction(callback)) {\n            callback(this.formJsonFormatted());\n        } else {\n            AutoNumericHelper.throwError(`The given callback is not a function.`);\n        }\n\n        return this;\n    }\n\n    /**\n     * Generate a JSON string with the localized strings values from the `<input>` elements, and pass it to the given callback.\n     * Under the hood, the array is generated via a call to `formJsonLocalized()`.\n     *\n     * @param {function} callback\n     * @param {null|string} forcedOutputFormat If set to something different from `null`, then this is used as an overriding outputFormat option\n     * @returns {AutoNumeric}\n     */\n    formSubmitJsonLocalized(callback, forcedOutputFormat = null) { //FIXME test this\n        if (AutoNumericHelper.isFunction(callback)) {\n            callback(this.formJsonLocalized(forcedOutputFormat));\n        } else {\n            AutoNumericHelper.throwError(`The given callback is not a function.`);\n        }\n\n        return this;\n    }\n\n    /**\n     * Unformat the given AutoNumeric element, and update the `hoveredWithAlt` variable.\n     *\n     * @param {AutoNumeric} anElement\n     * @private\n     */\n    static _unformatAltHovered(anElement) {\n        anElement.hoveredWithAlt = true;\n        anElement.unformat();\n    }\n\n    /**\n     * Reformat the given AutoNumeric element, and update the `hoveredWithAlt` variable.\n     *\n     * @param {AutoNumeric} anElement\n     * @private\n     */\n    static _reformatAltHovered(anElement) {\n        anElement.hoveredWithAlt = false;\n        anElement.reformat();\n    }\n\n    /**\n     * Return an array of autoNumeric elements, child of the <form> element passed as a parameter.\n     *\n     * @param {HTMLElement} formNode\n     * @returns {Array}\n     * @private\n     */\n    static _getChildANInputElement(formNode) { //FIXME test this\n        const inputList = formNode.getElementsByTagName('input');\n\n        // Loop this list and keep only the inputs that are managed by AutoNumeric\n        const autoNumericInputs = [];\n        const inputElements = Array.prototype.slice.call(inputList, 0);\n        inputElements.forEach(input => {\n            if (this.test(input)) {\n                autoNumericInputs.push(input);\n            }\n        });\n\n        return autoNumericInputs;\n    }\n\n    // Static methods\n    /**\n     * Test if the given DOM element, or the element selected by the given selector string is already managed by AutoNumeric (if it has been initialized on the current page).\n     *\n     * @param {HTMLElement|string} domElementOrSelector Accepts either directly a DOM element to test, or a string selector (that will return one and only one element, if any)\n     * @returns {boolean}\n     */\n    static test(domElementOrSelector) {\n        return this._isInGlobalList(AutoNumericHelper.domElement(domElementOrSelector));\n    }\n\n    /**\n     * Create a WeakMap with the given name.\n     *\n     * @param {string} weakMapName\n     * @private\n     */\n    static _createWeakMap(weakMapName) {\n        window[weakMapName] = new WeakMap();\n    }\n\n    /**\n     * Create a list of all the AutoNumeric elements that are initialized on the current page.\n     * This is needed in order to determine if a given dom element is already managed by autoNumeric.\n     * This uses a WeakMap in order to limit potential garbage collection problems.\n     * (cf. my tests on http://codepen.io/AnotherLinuxUser/pen/pRQGaM?editors=1011)\n     * @private\n     */\n    static _createGlobalList() {\n        // The check that this global list does not exist already is done in the add and remove functions already\n        this.autoNumericGlobalListName = 'autoNumericGlobalList'; //XXX This looks weird to set a variable on `this.` in a static method, but that really declare that variable like a static property\n        // Note: I should not get any memory leaks for referencing the DOM element in the `value`, this DOM element also being the `key`, according to the spec : http://www.ecma-international.org/ecma-262/6.0/#sec-weakmap-objects\n        this._createWeakMap(this.autoNumericGlobalListName);\n    }\n\n    /**\n     * Return `true` if the global AutoNumeric element list exists.\n     *\n     * @returns {boolean}\n     * @private\n     */\n    static _doesGlobalListExists() {\n        const type = typeof window[this.autoNumericGlobalListName];\n        return type !== 'undefined' &&\n               type === 'object';\n    }\n\n    /**\n     * Add the given object to the global AutoNumeric element list.\n     *\n     * @param {AutoNumeric} autoNumericObject\n     * @private\n     */\n    static _addToGlobalList(autoNumericObject) {\n        if (!this._doesGlobalListExists()) {\n            this._createGlobalList();\n        }\n\n        const domElement = autoNumericObject.node();\n        // This checks if the object is not already in the global list before adding it.\n        // This could happen if an AutoNumeric element is initialized, then the DOM element is removed directly via `removeChild` (hence the reference does not get removed from the global list), then it get recreated and initialized again\n        if (this._isInGlobalList(domElement)) {\n            if (this._getFromGlobalList(domElement) === this) {\n                // Do not add this AutoNumeric object again since it's already in that global list\n                return;\n            } else {\n                // Print a warning to warn that the domElement already has a reference in the global map (but we cannot for sure starts deleting those old references since they could still be used by another AutoNumeric object)\n                AutoNumericHelper.warning(`A reference to the DOM element you just initialized already exists in the global AutoNumeric element list. Please make sure to not initialize the same DOM element multiple times.`, autoNumericObject.getSettings().showWarnings);\n            }\n        }\n\n        window[this.autoNumericGlobalListName].set(domElement, autoNumericObject);\n    }\n\n    /**\n     * Remove the given object from the global AutoNumeric element list.\n     *\n     * @param {AutoNumeric} autoNumericObject\n     * @private\n     */\n    static _removeFromGlobalList(autoNumericObject) { //FIXME test this\n        if (this._doesGlobalListExists()) {\n            window[this.autoNumericGlobalListName].delete(autoNumericObject.node());\n        }\n    }\n\n    /**\n     * Return the value associated to the key `domElement` passed as a parameter.\n     * The value is the AutoNumeric object that manages the DOM element `domElement`.\n     *\n     * @param {HTMLElement|HTMLInputElement} domElement\n     * @returns {null|AutoNumeric}\n     * @private\n     */\n    static _getFromGlobalList(domElement) { //FIXME test this\n        if (this._doesGlobalListExists()) {\n            return window[this.autoNumericGlobalListName].get(domElement);\n        }\n\n        return null;\n    }\n\n    /**\n     * Check if the given DOM element is in the global AutoNumeric element list.\n     *\n     * @param {HTMLElement|HTMLInputElement} domElement\n     * @returns {boolean}\n     * @private\n     */\n    static _isInGlobalList(domElement) { //FIXME test this\n        if (!this._doesGlobalListExists()) {\n            return false;\n        }\n\n        return window[this.autoNumericGlobalListName].has(domElement);\n    }\n\n    /**\n     * Create a `Map` that will store all the autoNumeric elements that are initialized from this current element.\n     * @private\n     */\n    _createLocalList() {\n        this.autoNumericLocalList = new Map();\n        this._addToLocalList(this.domElement);\n    }\n\n    /**\n     * In some rare cases, you could want to delete the local list generated during the element initialization (in order to use another one instead for instance).\n     * @private\n     */\n    _deleteLocalList() {\n        delete this.autoNumericLocalList;\n    }\n\n    /**\n     * Set the local list with the given Map object.\n     *\n     * @param {Map} localList\n     * @private\n     */\n    _setLocalList(localList) {\n        this.autoNumericLocalList = localList;\n    }\n\n    /**\n     * Return the local list Map object.\n     *\n     * @returns {*|Map}\n     * @private\n     */\n    _getLocalList() {\n        return this.autoNumericLocalList;\n    }\n\n    /**\n     * Return `true` if the AutoNumeric object has a local list defined already and has at least one element in it (itself usually).\n     *\n     * @returns {boolean}\n     * @private\n     */\n    _hasLocalList() {\n        return this.autoNumericLocalList instanceof Map && this.autoNumericLocalList.size !== 0;\n    }\n\n    /**\n     * Add the given object to the local autoNumeric element list.\n     * Note: in order to keep a coherent list, we only add DOM elements in it, not the autoNumeric object.\n     *\n     * @param {HTMLElement|HTMLInputElement} domElement\n     * @param {AutoNumeric} autoNumericObject A reference to the AutoNumeric object that manage the given DOM element\n     * @throws\n     * @private\n     */\n    _addToLocalList(domElement, autoNumericObject = null) {\n        if (AutoNumericHelper.isNull(autoNumericObject)) {\n            autoNumericObject = this;\n        }\n\n        if (!AutoNumericHelper.isUndefined(this.autoNumericLocalList)) {\n            this.autoNumericLocalList.set(domElement, autoNumericObject); // Use the DOM element as key, and the AutoNumeric object as the value\n        } else {\n            AutoNumericHelper.throwError(`The local list provided does not exists when trying to add an element. [${this.autoNumericLocalList}] given.`);\n        }\n    }\n\n    /**\n     * Remove the given object from the local autoNumeric element list.\n     *\n     * @param {HTMLElement|HTMLInputElement} domElement\n     * @private\n     */\n    _removeFromLocalList(domElement) {\n        if (!AutoNumericHelper.isUndefined(this.autoNumericLocalList)) {\n            this.autoNumericLocalList.delete(domElement);\n        } else if (this.settings.createLocalList) {\n            AutoNumericHelper.throwError(`The local list provided does not exists when trying to remove an element. [${this.autoNumericLocalList}] given.`);\n        }\n    }\n\n    /**\n     * Merge the `newSettings` given as parameters into the current element settings.\n     *\n     * WARNING: Using `Object.assign()` here means the merge is not recursive and only one depth is merged.\n     * cf. http://stackoverflow.com/a/39188108/2834898\n     * cf. tests on http://codepen.io/AnotherLinuxUser/pen/KaJORq?editors=0011\n     *\n     * @param {object} newSettings\n     * @private\n     */\n    _mergeSettings(...newSettings) {\n        Object.assign(this.settings, ...newSettings);\n    }\n\n    /**\n     * Return a new object with the current element settings merged with the new settings.\n     *\n     * @param {object} newSettings\n     * @returns {object}\n     * @private\n     */\n    _cloneAndMergeSettings(...newSettings) {\n        const result = {};\n        Object.assign(result, this.settings, ...newSettings);\n\n        return result;\n    }\n\n    /**\n     * Validate the given option object.\n     * If the options are valid, this function returns nothing, otherwise if the options are invalid, this function throws an error.\n     *\n     * This tests if the options are not conflicting and are well formatted.\n     * This function is lenient since it only tests the settings properties ; it ignores any other properties the options object could have.\n     *\n     * @param {*} userOptions\n     * @param {Boolean} shouldExtendDefaultOptions If `true`, then this function will extend the `userOptions` passed by the user, with the default options.\n     * @param {object|null} originalOptions The user can pass the original options (and not the one that are generated from the default settings and the various usability corrections), in order to add compatibility and conflicts checks.\n     * @throws Error This throws if the `userOptions` are not valid\n     */\n    static validate(userOptions, shouldExtendDefaultOptions = true, originalOptions = null) {\n        if (AutoNumericHelper.isUndefinedOrNullOrEmpty(userOptions) || !AutoNumericHelper.isObject(userOptions)) {\n            AutoNumericHelper.throwError(`The userOptions are invalid ; it should be a valid object, [${userOptions}] given.`);\n        }\n\n        const isOriginalOptionAnObject = AutoNumericHelper.isObject(originalOptions);\n        if (!isOriginalOptionAnObject && !AutoNumericHelper.isNull(originalOptions)) {\n            AutoNumericHelper.throwError(`The 'originalOptions' parameter is invalid ; it should either be a valid option object or \\`null\\`, [${userOptions}] given.`);\n        }\n\n        // If the user used old options, we convert them to new ones\n        if (!AutoNumericHelper.isNull(userOptions)) {\n            this._convertOldOptionsToNewOnes(userOptions);\n        }\n\n        // The user can choose if the `userOptions` has already been extended with the default options, or not\n        let options;\n        if (shouldExtendDefaultOptions) {\n            options = Object.assign({}, this.getDefaultConfig(), userOptions);\n        } else {\n            options = userOptions;\n        }\n\n        // First things first, we test that the `showWarnings` option is valid\n        if (!AutoNumericHelper.isTrueOrFalseString(options.showWarnings) && !AutoNumericHelper.isBoolean(options.showWarnings)) {\n            AutoNumericHelper.throwError(`The debug option 'showWarnings' is invalid ; it should be either 'true' or 'false', [${options.showWarnings}] given.`);\n        }\n\n        // Define the regular expressions needed for the following tests\n        const testPositiveInteger = /^[0-9]+$/;\n        const testNumericalCharacters = /[0-9]+/;\n        // const testFloatAndPossibleNegativeSign = /^-?[0-9]+(\\.?[0-9]+)$/;\n        const testFloatOrIntegerAndPossibleNegativeSign = /^-?[0-9]+(\\.?[0-9]+)?$/;\n        const testPositiveFloatOrInteger = /^[0-9]+(\\.?[0-9]+)?$/;\n\n        // Then tests the options individually\n        if (!AutoNumericHelper.isTrueOrFalseString(options.allowDecimalPadding) &&\n            !AutoNumericHelper.isBoolean(options.allowDecimalPadding) &&\n            options.allowDecimalPadding !== AutoNumeric.options.allowDecimalPadding.floats &&\n            !(AutoNumericHelper.isNumber(options.allowDecimalPadding) && options.allowDecimalPadding > 0)) {\n            AutoNumericHelper.throwError(`The decimal padding option 'allowDecimalPadding' is invalid ; it should either be \\`false\\`, \\`true\\`, \\`'floats'\\` or a positive integer superior to 0, [${options.allowDecimalPadding}] given.`);\n        }\n     \n        if (AutoNumericHelper.isNumber(options.allowDecimalPadding) && options.allowDecimalPadding > options.decimalPlaces) {\n            AutoNumericHelper.warning(`Setting 'allowDecimalPadding' to a number [${options.allowDecimalPadding}] superior to the current 'decimalPlaces' settings [${options.decimalPlaces}] is useless, since the padding will not be shown.`, options.showWarnings);\n        }\n\n        if ((options.allowDecimalPadding === AutoNumeric.options.allowDecimalPadding.never ||\n            options.allowDecimalPadding === 'false') &&\n            (options.decimalPlaces !== AutoNumeric.options.decimalPlaces.none ||\n            options.decimalPlacesShownOnBlur !== AutoNumeric.options.decimalPlacesShownOnBlur.none ||\n            options.decimalPlacesShownOnFocus !== AutoNumeric.options.decimalPlacesShownOnFocus.none)) {\n            AutoNumericHelper.warning(`Setting 'allowDecimalPadding' to [${options.allowDecimalPadding}] will override the current 'decimalPlaces*' settings [${options.decimalPlaces}, ${options.decimalPlacesShownOnBlur} and ${options.decimalPlacesShownOnFocus}].`, options.showWarnings);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.alwaysAllowDecimalCharacter) &&\n            !AutoNumericHelper.isBoolean(options.alwaysAllowDecimalCharacter)) {\n            AutoNumericHelper.throwError(`The option 'alwaysAllowDecimalCharacter' is invalid ; it should either be \\`true\\` or \\`false\\`, [${options.alwaysAllowDecimalCharacter}] given.`);\n        }\n\n        if (!AutoNumericHelper.isNull(options.caretPositionOnFocus) && !AutoNumericHelper.isInArray(options.caretPositionOnFocus, [\n            AutoNumeric.options.caretPositionOnFocus.start,\n            AutoNumeric.options.caretPositionOnFocus.end,\n            AutoNumeric.options.caretPositionOnFocus.decimalLeft,\n            AutoNumeric.options.caretPositionOnFocus.decimalRight,\n        ])) {\n            AutoNumericHelper.throwError(`The display on empty string option 'caretPositionOnFocus' is invalid ; it should either be \\`null\\`, 'focus', 'press', 'always' or 'zero', [${options.caretPositionOnFocus}] given.`);\n        }\n\n        // Special case here for `caretPositionOnFocus` and `selectOnFocus` where we need to check the original non-tempered version of the options in order to check for conflicts, since using the default settings remove those and would prevent us warning the user that his option object is not correct.\n        let optionsToUse;\n        if (isOriginalOptionAnObject) {\n            optionsToUse = originalOptions;\n        } else {\n            optionsToUse = this._correctCaretPositionOnFocusAndSelectOnFocusOptions(userOptions);\n        }\n\n        if (!AutoNumericHelper.isNull(optionsToUse) &&\n            ((optionsToUse.caretPositionOnFocus !== AutoNumeric.options.caretPositionOnFocus.doNoForceCaretPosition &&\n            optionsToUse.selectOnFocus === AutoNumeric.options.selectOnFocus.select))) {\n            AutoNumericHelper.warning(`The 'selectOnFocus' option is set to 'select', which is in conflict with the 'caretPositionOnFocus' which is set to '${optionsToUse.caretPositionOnFocus}'. As a result, if this has been called when instantiating an AutoNumeric object, the 'selectOnFocus' option is forced to 'doNotSelect'.`, options.showWarnings);\n        }\n\n        if (!AutoNumericHelper.isInArray(options.digitGroupSeparator, [\n            AutoNumeric.options.digitGroupSeparator.comma,\n            AutoNumeric.options.digitGroupSeparator.dot,\n            AutoNumeric.options.digitGroupSeparator.normalSpace,\n            AutoNumeric.options.digitGroupSeparator.thinSpace,\n            AutoNumeric.options.digitGroupSeparator.narrowNoBreakSpace,\n            AutoNumeric.options.digitGroupSeparator.noBreakSpace,\n            AutoNumeric.options.digitGroupSeparator.noSeparator,\n            AutoNumeric.options.digitGroupSeparator.apostrophe,\n            AutoNumeric.options.digitGroupSeparator.arabicThousandsSeparator,\n            AutoNumeric.options.digitGroupSeparator.dotAbove,\n            AutoNumeric.options.digitGroupSeparator.privateUseTwo,\n        ])) {\n            AutoNumericHelper.throwError(`The thousand separator character option 'digitGroupSeparator' is invalid ; it should be ',', '.', '٬', '˙', \"'\", '\\u0092', ' ', '\\u2009', '\\u202f', '\\u00a0' or empty (''), [${options.digitGroupSeparator}] given.`);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.showOnlyNumbersOnFocus) && !AutoNumericHelper.isBoolean(options.showOnlyNumbersOnFocus)) {\n            AutoNumericHelper.throwError(`The 'showOnlyNumbersOnFocus' option is invalid ; it should be either 'true' or 'false', [${options.showOnlyNumbersOnFocus}] given.`);\n        }\n\n        if (!AutoNumericHelper.isInArray(options.digitalGroupSpacing, [\n            AutoNumeric.options.digitalGroupSpacing.two,\n            AutoNumeric.options.digitalGroupSpacing.twoThree,\n            AutoNumeric.options.digitalGroupSpacing.twoScaled,\n            AutoNumeric.options.digitalGroupSpacing.three,\n            AutoNumeric.options.digitalGroupSpacing.four,\n        ]) && !(options.digitalGroupSpacing >= 2 && options.digitalGroupSpacing <= 4)) {\n            AutoNumericHelper.throwError(`The grouping separator option for thousands 'digitalGroupSpacing' is invalid ; it should be '2', '2t', '2s', '3', or '4', [${options.digitalGroupSpacing}] given.`);\n        }\n\n        if (!AutoNumericHelper.isInArray(options.decimalCharacter, [\n            AutoNumeric.options.decimalCharacter.comma,\n            AutoNumeric.options.decimalCharacter.dot,\n            AutoNumeric.options.decimalCharacter.middleDot,\n            AutoNumeric.options.decimalCharacter.arabicDecimalSeparator,\n            AutoNumeric.options.decimalCharacter.decimalSeparatorKeySymbol,\n        ])) {\n            AutoNumericHelper.throwError(`The decimal separator character option 'decimalCharacter' is invalid ; it should be '.', ',', '·', '⎖' or '٫', [${options.decimalCharacter}] given.`);\n        }\n\n        // Checks if the decimal and thousand characters are the same\n        if (options.decimalCharacter === options.digitGroupSeparator) {\n            AutoNumericHelper.throwError(`autoNumeric will not function properly when the decimal character 'decimalCharacter' [${options.decimalCharacter}] and the thousand separator 'digitGroupSeparator' [${options.digitGroupSeparator}] are the same character.`);\n        }\n\n        if (!AutoNumericHelper.isNull(options.decimalCharacterAlternative) && !AutoNumericHelper.isString(options.decimalCharacterAlternative)) {\n            AutoNumericHelper.throwError(`The alternate decimal separator character option 'decimalCharacterAlternative' is invalid ; it should be a string, [${options.decimalCharacterAlternative}] given.`);\n        }\n\n        if (options.currencySymbol !== '' && !AutoNumericHelper.isString(options.currencySymbol)) {\n            AutoNumericHelper.throwError(`The currency symbol option 'currencySymbol' is invalid ; it should be a string, [${options.currencySymbol}] given.`);\n        }\n\n        if (!AutoNumericHelper.isInArray(options.currencySymbolPlacement, [\n            AutoNumeric.options.currencySymbolPlacement.prefix,\n            AutoNumeric.options.currencySymbolPlacement.suffix,\n        ])) {\n            AutoNumericHelper.throwError(`The placement of the currency sign option 'currencySymbolPlacement' is invalid ; it should either be 'p' (prefix) or 's' (suffix), [${options.currencySymbolPlacement}] given.`);\n        }\n\n        if (!AutoNumericHelper.isInArray(options.negativePositiveSignPlacement, [\n            AutoNumeric.options.negativePositiveSignPlacement.prefix,\n            AutoNumeric.options.negativePositiveSignPlacement.suffix,\n            AutoNumeric.options.negativePositiveSignPlacement.left,\n            AutoNumeric.options.negativePositiveSignPlacement.right,\n            AutoNumeric.options.negativePositiveSignPlacement.none,\n        ])) {\n            AutoNumericHelper.throwError(`The placement of the negative sign option 'negativePositiveSignPlacement' is invalid ; it should either be 'p' (prefix), 's' (suffix), 'l' (left), 'r' (right) or 'null', [${options.negativePositiveSignPlacement}] given.`);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.showPositiveSign) && !AutoNumericHelper.isBoolean(options.showPositiveSign)) {\n            AutoNumericHelper.throwError(`The show positive sign option 'showPositiveSign' is invalid ; it should be either 'true' or 'false', [${options.showPositiveSign}] given.`);\n        }\n\n        if (!AutoNumericHelper.isString(options.suffixText) || (options.suffixText !== '' && (AutoNumericHelper.isNegative(options.suffixText, options.negativeSignCharacter) || testNumericalCharacters.test(options.suffixText)))) {\n            AutoNumericHelper.throwError(`The additional suffix option 'suffixText' is invalid ; it should not contains the negative sign '${options.negativeSignCharacter}' nor any numerical characters, [${options.suffixText}] given.`);\n        }\n\n        if (!AutoNumericHelper.isString(options.negativeSignCharacter) ||\n            options.negativeSignCharacter.length !== 1 ||\n            AutoNumericHelper.isUndefinedOrNullOrEmpty(options.negativeSignCharacter) ||\n            testNumericalCharacters.test(options.negativeSignCharacter)) {\n            AutoNumericHelper.throwError(`The negative sign character option 'negativeSignCharacter' is invalid ; it should be a single character, and cannot be any numerical characters, [${options.negativeSignCharacter}] given.`);\n        }\n\n        if (!AutoNumericHelper.isString(options.positiveSignCharacter) ||\n            options.positiveSignCharacter.length !== 1 ||\n            AutoNumericHelper.isUndefinedOrNullOrEmpty(options.positiveSignCharacter) ||\n            testNumericalCharacters.test(options.positiveSignCharacter)) {\n            AutoNumericHelper.throwError(`The positive sign character option 'positiveSignCharacter' is invalid ; it should be a single character, and cannot be any numerical characters, [${options.positiveSignCharacter}] given.\\nIf you want to show the positive sign character, you need to set the \\`showPositiveSign\\` option to \\`true\\`.`);\n        }\n\n        if (options.negativeSignCharacter === options.positiveSignCharacter) {\n            AutoNumericHelper.throwError(`The positive 'positiveSignCharacter' and negative 'negativeSignCharacter' sign characters cannot be identical ; [${options.negativeSignCharacter}] given.`);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.negativePositiveSignBehavior) && !AutoNumericHelper.isBoolean(options.negativePositiveSignBehavior)) {\n            AutoNumericHelper.throwError(`The option 'negativePositiveSignBehavior' is invalid ; it should be either 'true' or 'false', [${options.negativePositiveSignBehavior}] given.`);\n        }\n\n        const [leftBracket, rightBracket] = AutoNumericHelper.isNull(options.negativeBracketsTypeOnBlur)?['', '']:options.negativeBracketsTypeOnBlur.split(',');\n        if (AutoNumericHelper.contains(options.digitGroupSeparator, options.negativeSignCharacter) ||\n            AutoNumericHelper.contains(options.decimalCharacter, options.negativeSignCharacter) ||\n            AutoNumericHelper.contains(options.decimalCharacterAlternative, options.negativeSignCharacter) ||\n            AutoNumericHelper.contains(leftBracket, options.negativeSignCharacter) ||\n            AutoNumericHelper.contains(rightBracket, options.negativeSignCharacter) ||\n            AutoNumericHelper.contains(options.suffixText, options.negativeSignCharacter)) {\n            AutoNumericHelper.throwError(`The negative sign character option 'negativeSignCharacter' is invalid ; it should not be equal or a part of the digit separator, the decimal character, the decimal character alternative, the negative brackets or the suffix text, [${options.negativeSignCharacter}] given.`);\n        }\n\n        if (AutoNumericHelper.contains(options.digitGroupSeparator, options.positiveSignCharacter) ||\n            AutoNumericHelper.contains(options.decimalCharacter, options.positiveSignCharacter) ||\n            AutoNumericHelper.contains(options.decimalCharacterAlternative, options.positiveSignCharacter) ||\n            AutoNumericHelper.contains(leftBracket, options.positiveSignCharacter) ||\n            AutoNumericHelper.contains(rightBracket, options.positiveSignCharacter) ||\n            AutoNumericHelper.contains(options.suffixText, options.positiveSignCharacter)) {\n            AutoNumericHelper.throwError(`The positive sign character option 'positiveSignCharacter' is invalid ; it should not be equal or a part of the digit separator, the decimal character, the decimal character alternative, the negative brackets or the suffix text, [${options.positiveSignCharacter}] given.`);\n        }\n\n        if (!AutoNumericHelper.isNull(options.overrideMinMaxLimits) && !AutoNumericHelper.isInArray(options.overrideMinMaxLimits, [\n            AutoNumeric.options.overrideMinMaxLimits.ceiling,\n            AutoNumeric.options.overrideMinMaxLimits.floor,\n            AutoNumeric.options.overrideMinMaxLimits.ignore,\n            AutoNumeric.options.overrideMinMaxLimits.invalid,\n        ])) {\n            AutoNumericHelper.throwError(`The override min & max limits option 'overrideMinMaxLimits' is invalid ; it should either be 'ceiling', 'floor', 'ignore' or 'invalid', [${options.overrideMinMaxLimits}] given.`);\n        }\n\n        if ((options.overrideMinMaxLimits !== AutoNumeric.options.overrideMinMaxLimits.invalid && options.overrideMinMaxLimits !== AutoNumeric.options.overrideMinMaxLimits.ignore) &&\n            (options.minimumValue > 0 || options.maximumValue < 0)) {\n            AutoNumericHelper.warning(`You've set a \\`minimumValue\\` or a \\`maximumValue\\` excluding the value \\`0\\`. AutoNumeric will force the users to always have a valid value in the input, hence preventing them to clear the field. If you want to allow for temporary invalid values (i.e. out-of-range), you should use the 'invalid' option for the 'overrideMinMaxLimits' setting.`);\n        }\n\n        if (!AutoNumericHelper.isString(options.maximumValue) || !testFloatOrIntegerAndPossibleNegativeSign.test(options.maximumValue)) {\n            AutoNumericHelper.throwError(`The maximum possible value option 'maximumValue' is invalid ; it should be a string that represents a positive or negative number, [${options.maximumValue}] given.`);\n        }\n\n        if (!AutoNumericHelper.isString(options.minimumValue) || !testFloatOrIntegerAndPossibleNegativeSign.test(options.minimumValue)) {\n            AutoNumericHelper.throwError(`The minimum possible value option 'minimumValue' is invalid ; it should be a string that represents a positive or negative number, [${options.minimumValue}] given.`);\n        }\n\n        if (parseFloat(options.minimumValue) > parseFloat(options.maximumValue)) {\n            AutoNumericHelper.throwError(`The minimum possible value option is greater than the maximum possible value option ; 'minimumValue' [${options.minimumValue}] should be smaller than 'maximumValue' [${options.maximumValue}].`);\n        }\n\n        if (!((AutoNumericHelper.isInt(options.decimalPlaces) && options.decimalPlaces >= 0) || // If integer option\n            (AutoNumericHelper.isString(options.decimalPlaces) && testPositiveInteger.test(options.decimalPlaces))) // If string option\n        ) {\n            AutoNumericHelper.throwError(`The number of decimal places option 'decimalPlaces' is invalid ; it should be a positive integer, [${options.decimalPlaces}] given.`);\n        }\n\n        if (!(AutoNumericHelper.isNull(options.decimalPlacesRawValue) ||\n            (AutoNumericHelper.isInt(options.decimalPlacesRawValue) && options.decimalPlacesRawValue >= 0) || // If integer option\n            (AutoNumericHelper.isString(options.decimalPlacesRawValue) && testPositiveInteger.test(options.decimalPlacesRawValue))) // If string option\n        ) {\n            AutoNumericHelper.throwError(`The number of decimal places for the raw value option 'decimalPlacesRawValue' is invalid ; it should be a positive integer or \\`null\\`, [${options.decimalPlacesRawValue}] given.`);\n        }\n\n        // Checks if the number of decimal places for the raw value is lower than the `decimalPlaces`, `decimalPlacesShownOnFocus` and/or `decimalPlacesShownOnBlur` options\n        this._validateDecimalPlacesRawValue(options);\n\n        if (!AutoNumericHelper.isNull(options.decimalPlacesShownOnFocus) &&\n            !testPositiveInteger.test(String(options.decimalPlacesShownOnFocus))) {\n            AutoNumericHelper.throwError(`The number of expanded decimal places option 'decimalPlacesShownOnFocus' is invalid ; it should be a positive integer or \\`null\\`, [${options.decimalPlacesShownOnFocus}] given.`);\n        }\n\n        // Checks if the extended decimal places \"decimalPlacesShownOnFocus\" is greater than the decimal places number `decimalPlaces`\n        if (!AutoNumericHelper.isNull(options.decimalPlacesShownOnFocus) && Number(options.decimalPlaces) > Number(options.decimalPlacesShownOnFocus)) {\n            AutoNumericHelper.warning(`The extended decimal places 'decimalPlacesShownOnFocus' [${options.decimalPlacesShownOnFocus}] should be greater than the 'decimalPlaces' [${options.decimalPlaces}] value. Currently, this will limit the ability of your user to manually change some of the decimal places. Do you really want to do that?`, options.showWarnings);\n        }\n\n        if (!AutoNumericHelper.isNull(options.divisorWhenUnfocused) &&\n            !testPositiveFloatOrInteger.test(options.divisorWhenUnfocused) ||\n            options.divisorWhenUnfocused === 0 || options.divisorWhenUnfocused === '0' ||\n            options.divisorWhenUnfocused === 1 || options.divisorWhenUnfocused === '1') {\n            AutoNumericHelper.throwError(`The divisor option 'divisorWhenUnfocused' is invalid ; it should be a positive number higher than one, preferably an integer, [${options.divisorWhenUnfocused}] given.`);\n        }\n\n        if (!AutoNumericHelper.isNull(options.decimalPlacesShownOnBlur) && !testPositiveInteger.test(options.decimalPlacesShownOnBlur)) {\n            AutoNumericHelper.throwError(`The number of decimals shown when unfocused option 'decimalPlacesShownOnBlur' is invalid ; it should be a positive integer or \\`null\\`, [${options.decimalPlacesShownOnBlur}] given.`);\n        }\n\n        if (!AutoNumericHelper.isNull(options.symbolWhenUnfocused) && !AutoNumericHelper.isString(options.symbolWhenUnfocused)) {\n            AutoNumericHelper.throwError(`The symbol to show when unfocused option 'symbolWhenUnfocused' is invalid ; it should be a string, [${options.symbolWhenUnfocused}] given.`);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.saveValueToSessionStorage) && !AutoNumericHelper.isBoolean(options.saveValueToSessionStorage)) {\n            AutoNumericHelper.throwError(`The save to session storage option 'saveValueToSessionStorage' is invalid ; it should be either 'true' or 'false', [${options.saveValueToSessionStorage}] given.`);\n        }\n\n        if (!AutoNumericHelper.isInArray(options.onInvalidPaste, [\n            AutoNumeric.options.onInvalidPaste.error,\n            AutoNumeric.options.onInvalidPaste.ignore,\n            AutoNumeric.options.onInvalidPaste.clamp,\n            AutoNumeric.options.onInvalidPaste.truncate,\n            AutoNumeric.options.onInvalidPaste.replace,\n        ])) {\n            AutoNumericHelper.throwError(`The paste behavior option 'onInvalidPaste' is invalid ; it should either be 'error', 'ignore', 'clamp', 'truncate' or 'replace' (cf. documentation), [${options.onInvalidPaste}] given.`);\n        }\n\n        if (!AutoNumericHelper.isInArray(options.roundingMethod, [\n            AutoNumeric.options.roundingMethod.halfUpSymmetric,\n            AutoNumeric.options.roundingMethod.halfUpAsymmetric,\n            AutoNumeric.options.roundingMethod.halfDownSymmetric,\n            AutoNumeric.options.roundingMethod.halfDownAsymmetric,\n            AutoNumeric.options.roundingMethod.halfEvenBankersRounding,\n            AutoNumeric.options.roundingMethod.upRoundAwayFromZero,\n            AutoNumeric.options.roundingMethod.downRoundTowardZero,\n            AutoNumeric.options.roundingMethod.toCeilingTowardPositiveInfinity,\n            AutoNumeric.options.roundingMethod.toFloorTowardNegativeInfinity,\n            AutoNumeric.options.roundingMethod.toNearest05,\n            AutoNumeric.options.roundingMethod.toNearest05Alt,\n            AutoNumeric.options.roundingMethod.upToNext05,\n            AutoNumeric.options.roundingMethod.downToNext05,\n        ])) {\n            AutoNumericHelper.throwError(`The rounding method option 'roundingMethod' is invalid ; it should either be 'S', 'A', 's', 'a', 'B', 'U', 'D', 'C', 'F', 'N05', 'CHF', 'U05' or 'D05' (cf. documentation), [${options.roundingMethod}] given.`);\n        }\n\n        if (!AutoNumericHelper.isNull(options.negativeBracketsTypeOnBlur) && !AutoNumericHelper.isInArray(options.negativeBracketsTypeOnBlur, [\n            AutoNumeric.options.negativeBracketsTypeOnBlur.parentheses,\n            AutoNumeric.options.negativeBracketsTypeOnBlur.brackets,\n            AutoNumeric.options.negativeBracketsTypeOnBlur.chevrons,\n            AutoNumeric.options.negativeBracketsTypeOnBlur.curlyBraces,\n            AutoNumeric.options.negativeBracketsTypeOnBlur.angleBrackets,\n            AutoNumeric.options.negativeBracketsTypeOnBlur.japaneseQuotationMarks,\n            AutoNumeric.options.negativeBracketsTypeOnBlur.halfBrackets,\n            AutoNumeric.options.negativeBracketsTypeOnBlur.whiteSquareBrackets,\n            AutoNumeric.options.negativeBracketsTypeOnBlur.quotationMarks,\n            AutoNumeric.options.negativeBracketsTypeOnBlur.guillemets,\n        ])) {\n            AutoNumericHelper.throwError(`The brackets for negative values option 'negativeBracketsTypeOnBlur' is invalid ; it should either be '(,)', '[,]', '<,>', '{,}', '〈,〉', '｢,｣', '⸤,⸥', '⟦,⟧', '‹,›' or '«,»', [${options.negativeBracketsTypeOnBlur}] given.`);\n        }\n\n        if (!(AutoNumericHelper.isString(options.emptyInputBehavior) || AutoNumericHelper.isNumber(options.emptyInputBehavior)) ||\n            !(AutoNumericHelper.isInArray(options.emptyInputBehavior, [\n                AutoNumeric.options.emptyInputBehavior.focus,\n                AutoNumeric.options.emptyInputBehavior.press,\n                AutoNumeric.options.emptyInputBehavior.always,\n                AutoNumeric.options.emptyInputBehavior.min,\n                AutoNumeric.options.emptyInputBehavior.max,\n                AutoNumeric.options.emptyInputBehavior.zero,\n                AutoNumeric.options.emptyInputBehavior.null,\n            ]) || testFloatOrIntegerAndPossibleNegativeSign.test(options.emptyInputBehavior))) {\n            AutoNumericHelper.throwError(`The display on empty string option 'emptyInputBehavior' is invalid ; it should either be 'focus', 'press', 'always', 'min', 'max', 'zero', 'null', a number, or a string that represents a number, [${options.emptyInputBehavior}] given.`);\n        }\n\n        if (options.emptyInputBehavior === AutoNumeric.options.emptyInputBehavior.zero &&\n            (options.minimumValue > 0 || options.maximumValue < 0)) {\n            AutoNumericHelper.throwError(`The 'emptyInputBehavior' option is set to 'zero', but this value is outside of the range defined by 'minimumValue' and 'maximumValue' [${options.minimumValue}, ${options.maximumValue}].`);\n        }\n\n        if (testFloatOrIntegerAndPossibleNegativeSign.test(String(options.emptyInputBehavior))) {\n            if (!this._isWithinRangeWithOverrideOption(options.emptyInputBehavior, options)) {\n                AutoNumericHelper.throwError(`The 'emptyInputBehavior' option is set to a number or a string that represents a number, but its value [${options.emptyInputBehavior}] is outside of the range defined by the 'minimumValue' and 'maximumValue' options [${options.minimumValue}, ${options.maximumValue}].`);\n            }\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.eventBubbles) && !AutoNumericHelper.isBoolean(options.eventBubbles)) {\n            AutoNumericHelper.throwError(`The event bubbles option 'eventBubbles' is invalid ; it should be either 'true' or 'false', [${options.eventBubbles}] given.`);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.eventIsCancelable) && !AutoNumericHelper.isBoolean(options.eventIsCancelable)) {\n            AutoNumericHelper.throwError(`The event is cancelable option 'eventIsCancelable' is invalid ; it should be either 'true' or 'false', [${options.eventIsCancelable}] given.`);\n        }\n\n        if (AutoNumericHelper.isBoolean(options.invalidClass) || !/^-?[_a-zA-Z]+[_a-zA-Z0-9-]*$/.test(options.invalidClass)) { //TODO Make sure this covers all the CSS class names\n            AutoNumericHelper.throwError(`The name of the 'invalidClass' option is not a valid CSS class name ; it should not be empty, and should follow the '^-?[_a-zA-Z]+[_a-zA-Z0-9-]*$' regex, [${options.invalidClass}] given.`);\n        }\n\n        if (!AutoNumericHelper.isInArray(options.leadingZero, [\n            AutoNumeric.options.leadingZero.allow,\n            AutoNumeric.options.leadingZero.deny,\n            AutoNumeric.options.leadingZero.keep,\n        ])) {\n            AutoNumericHelper.throwError(`The leading zero behavior option 'leadingZero' is invalid ; it should either be 'allow', 'deny' or 'keep', [${options.leadingZero}] given.`);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.formatOnPageLoad) && !AutoNumericHelper.isBoolean(options.formatOnPageLoad)) {\n            AutoNumericHelper.throwError(`The format on initialization option 'formatOnPageLoad' is invalid ; it should be either 'true' or 'false', [${options.formatOnPageLoad}] given.`);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.formulaMode) && !AutoNumericHelper.isBoolean(options.formulaMode)) {\n            AutoNumericHelper.throwError(`The formula mode option 'formulaMode' is invalid ; it should be either 'true' or 'false', [${options.formulaMode}] given.`);\n        }\n\n        if (!testPositiveInteger.test(options.historySize) || options.historySize === 0) {\n            AutoNumericHelper.throwError(`The history size option 'historySize' is invalid ; it should be a positive integer, [${options.historySize}] given.`);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.selectNumberOnly) && !AutoNumericHelper.isBoolean(options.selectNumberOnly)) {\n            AutoNumericHelper.throwError(`The select number only option 'selectNumberOnly' is invalid ; it should be either 'true' or 'false', [${options.selectNumberOnly}] given.`);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.selectOnFocus) && !AutoNumericHelper.isBoolean(options.selectOnFocus)) {\n            AutoNumericHelper.throwError(`The select on focus option 'selectOnFocus' is invalid ; it should be either 'true' or 'false', [${options.selectOnFocus}] given.`);\n        }\n\n        if (!AutoNumericHelper.isNull(options.defaultValueOverride) && (options.defaultValueOverride !== '' && !testFloatOrIntegerAndPossibleNegativeSign.test(options.defaultValueOverride))) {\n            AutoNumericHelper.throwError(`The unformatted default value option 'defaultValueOverride' is invalid ; it should be a string that represents a positive or negative number, [${options.defaultValueOverride}] given.`);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.unformatOnSubmit) && !AutoNumericHelper.isBoolean(options.unformatOnSubmit)) {\n            AutoNumericHelper.throwError(`The remove formatting on submit option 'unformatOnSubmit' is invalid ; it should be either 'true' or 'false', [${options.unformatOnSubmit}] given.`);\n        }\n\n        if (!AutoNumericHelper.isNull(options.valuesToStrings) &&\n            !(AutoNumericHelper.isObject(options.valuesToStrings))) {\n            AutoNumericHelper.throwError(`The option 'valuesToStrings' is invalid ; it should be an object, ideally with 'key -> value' entries, [${options.valuesToStrings}] given.`);\n        }\n\n        if (!AutoNumericHelper.isNull(options.outputFormat) && !AutoNumericHelper.isInArray(options.outputFormat, [\n            AutoNumeric.options.outputFormat.string,\n            AutoNumeric.options.outputFormat.number,\n            AutoNumeric.options.outputFormat.dot,\n            AutoNumeric.options.outputFormat.negativeDot,\n            AutoNumeric.options.outputFormat.comma,\n            AutoNumeric.options.outputFormat.negativeComma,\n            AutoNumeric.options.outputFormat.dotNegative,\n            AutoNumeric.options.outputFormat.commaNegative,\n        ])) {\n            AutoNumericHelper.throwError(`The custom locale format option 'outputFormat' is invalid ; it should either be null, 'string', 'number', '.', '-.', ',', '-,', '.-' or ',-', [${options.outputFormat}] given.`);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.isCancellable) && !AutoNumericHelper.isBoolean(options.isCancellable)) {\n            AutoNumericHelper.throwError(`The cancellable behavior option 'isCancellable' is invalid ; it should be either 'true' or 'false', [${options.isCancellable}] given.`);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.modifyValueOnUpDownArrow) && !AutoNumericHelper.isBoolean(options.modifyValueOnUpDownArrow)) {\n            AutoNumericHelper.throwError(`The increment/decrement on up and down arrow keys 'modifyValueOnUpDownArrow' is invalid ; it should be either 'true' or 'false', [${options.modifyValueOnUpDownArrow}] given.`);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.modifyValueOnWheel) && !AutoNumericHelper.isBoolean(options.modifyValueOnWheel)) {\n            AutoNumericHelper.throwError(`The increment/decrement on mouse wheel option 'modifyValueOnWheel' is invalid ; it should be either 'true' or 'false', [${options.modifyValueOnWheel}] given.`);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.watchExternalChanges) && !AutoNumericHelper.isBoolean(options.watchExternalChanges)) {\n            AutoNumericHelper.throwError(`The option 'watchExternalChanges' is invalid ; it should be either 'true' or 'false', [${options.watchExternalChanges}] given.`);\n        }\n\n        if (!AutoNumericHelper.isInArray(options.wheelOn, [\n            AutoNumeric.options.wheelOn.focus,\n            AutoNumeric.options.wheelOn.hover,\n        ])) {\n            AutoNumericHelper.throwError(`The wheel behavior option 'wheelOn' is invalid ; it should either be 'focus' or 'hover', [${options.wheelOn}] given.`);\n        }\n\n        if (!(AutoNumericHelper.isString(options.upDownStep) || AutoNumericHelper.isNumber(options.upDownStep)) ||\n            (options.upDownStep !== 'progressive' && !testPositiveFloatOrInteger.test(options.upDownStep)) ||\n            Number(options.upDownStep) === 0) {\n            // A step equal to '0' is rejected\n            AutoNumericHelper.throwError(`The up/down arrow step value option 'upDownStep' is invalid ; it should either be the string 'progressive', or a number or a string that represents a positive number (excluding zero), [${options.upDownStep}] given.`);\n        }\n\n        if (!(AutoNumericHelper.isString(options.wheelStep) || AutoNumericHelper.isNumber(options.wheelStep)) ||\n            (options.wheelStep !== 'progressive' && !testPositiveFloatOrInteger.test(options.wheelStep)) ||\n            Number(options.wheelStep) === 0) {\n            // A step equal to '0' is rejected\n            AutoNumericHelper.throwError(`The wheel step value option 'wheelStep' is invalid ; it should either be the string 'progressive', or a number or a string that represents a positive number (excluding zero), [${options.wheelStep}] given.`);\n        }\n\n        if (!AutoNumericHelper.isInArray(options.serializeSpaces, [\n            AutoNumeric.options.serializeSpaces.plus,\n            AutoNumeric.options.serializeSpaces.percent,\n        ])) {\n            AutoNumericHelper.throwError(`The space replacement character option 'serializeSpaces' is invalid ; it should either be '+' or '%20', [${options.serializeSpaces}] given.`);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.noEventListeners) && !AutoNumericHelper.isBoolean(options.noEventListeners)) {\n            AutoNumericHelper.throwError(`The option 'noEventListeners' that prevent the creation of event listeners is invalid ; it should be either 'true' or 'false', [${options.noEventListeners}] given.`);\n        }\n\n        if (!AutoNumericHelper.isNull(options.styleRules) &&\n            !(AutoNumericHelper.isObject(options.styleRules) &&\n            ((Object.prototype.hasOwnProperty.call(options.styleRules, 'positive') ||\n            Object.prototype.hasOwnProperty.call(options.styleRules, 'negative') ||\n            Object.prototype.hasOwnProperty.call(options.styleRules, 'ranges') ||\n            Object.prototype.hasOwnProperty.call(options.styleRules, 'userDefined'))))) {\n            AutoNumericHelper.throwError(`The option 'styleRules' is invalid ; it should be a correctly structured object, with one or more 'positive', 'negative', 'ranges' or 'userDefined' attributes, [${options.styleRules}] given.`);\n        }\n\n        // Deeper tests of the `styleRules` object : Check that the callback, if defined, is a function\n        if (!AutoNumericHelper.isNull(options.styleRules) &&\n            Object.prototype.hasOwnProperty.call(options.styleRules, 'userDefined') &&\n            !AutoNumericHelper.isNull(options.styleRules.userDefined)) {\n            options.styleRules.userDefined.forEach(rule => {\n                if (Object.prototype.hasOwnProperty.call(rule, 'callback') && !AutoNumericHelper.isFunction(rule.callback)) {\n                    AutoNumericHelper.throwError(`The callback defined in the \\`userDefined\\` attribute is not a function, ${typeof rule.callback} given.`);\n                }\n            });\n        }\n\n        if (!AutoNumericHelper.isNull(options.rawValueDivisor) &&\n            !testPositiveFloatOrInteger.test(options.rawValueDivisor) ||\n            options.rawValueDivisor === 0 || options.rawValueDivisor === '0' ||\n            options.rawValueDivisor === 1 || options.rawValueDivisor === '1') {\n            AutoNumericHelper.throwError(`The raw value divisor option 'rawValueDivisor' is invalid ; it should be a positive number higher than one, preferably an integer, [${options.rawValueDivisor}] given.`);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.readOnly) && !AutoNumericHelper.isBoolean(options.readOnly)) {\n            AutoNumericHelper.throwError(`The option 'readOnly' is invalid ; it should be either 'true' or 'false', [${options.readOnly}] given.`);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.unformatOnHover) && !AutoNumericHelper.isBoolean(options.unformatOnHover)) {\n            AutoNumericHelper.throwError(`The option 'unformatOnHover' is invalid ; it should be either 'true' or 'false', [${options.unformatOnHover}] given.`);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.failOnUnknownOption) && !AutoNumericHelper.isBoolean(options.failOnUnknownOption)) {\n            AutoNumericHelper.throwError(`The debug option 'failOnUnknownOption' is invalid ; it should be either 'true' or 'false', [${options.failOnUnknownOption}] given.`);\n        }\n\n        if (!AutoNumericHelper.isTrueOrFalseString(options.createLocalList) && !AutoNumericHelper.isBoolean(options.createLocalList)) {\n            AutoNumericHelper.throwError(`The debug option 'createLocalList' is invalid ; it should be either 'true' or 'false', [${options.createLocalList}] given.`);\n        }\n    }\n\n    /**\n     * Check the `decimalPlaces*` options and output the relevant warnings if some of those will get overwritten during the initialization or settings update.\n     *\n     * @param {object} options\n     * @private\n     */\n    static _validateDecimalPlacesRawValue(options) {\n        // Checks if the number of decimal places for the raw value is lower than the `decimalPlaces`, `decimalPlacesShownOnFocus` and/or `decimalPlacesShownOnBlur` options\n        if (!AutoNumericHelper.isNull(options.decimalPlacesRawValue)) {\n            if (options.decimalPlacesRawValue < options.decimalPlaces) {\n                AutoNumericHelper.warning(`The number of decimal places to store in the raw value [${options.decimalPlacesRawValue}] is lower than the ones to display [${options.decimalPlaces}]. This will likely confuse your users.\nTo solve that, you'd need to either set \\`decimalPlacesRawValue\\` to \\`null\\`, or set a number of decimal places for the raw value equal of bigger than \\`decimalPlaces\\`.`, options.showWarnings);\n            }\n\n            if (options.decimalPlacesRawValue < options.decimalPlacesShownOnFocus) {\n                AutoNumericHelper.warning(`The number of decimal places to store in the raw value [${options.decimalPlacesRawValue}] is lower than the ones shown on focus [${options.decimalPlacesShownOnFocus}]. This will likely confuse your users.\nTo solve that, you'd need to either set \\`decimalPlacesRawValue\\` to \\`null\\`, or set a number of decimal places for the raw value equal of bigger than \\`decimalPlacesShownOnFocus\\`.`, options.showWarnings);\n            }\n\n            if (options.decimalPlacesRawValue < options.decimalPlacesShownOnBlur) {\n                AutoNumericHelper.warning(`The number of decimal places to store in the raw value [${options.decimalPlacesRawValue}] is lower than the ones shown when unfocused [${options.decimalPlacesShownOnBlur}]. This will likely confuse your users.\nTo solve that, you'd need to either set \\`decimalPlacesRawValue\\` to \\`null\\`, or set a number of decimal places for the raw value equal of bigger than \\`decimalPlacesShownOnBlur\\`.`, options.showWarnings);\n            }\n        }\n    }\n\n    /**\n     * Return `true` if the settings/options are valid, `false` otherwise.\n     *\n     * @param {object} options\n     * @returns {boolean}\n     */\n    static areSettingsValid(options) {\n        let isValid = true;\n        try {\n            this.validate(options, true);\n        } catch (error) {\n            isValid = false;\n        }\n\n        return isValid;\n    }\n\n    /**\n     * Return the default autoNumeric settings.\n     *\n     * @returns {object}\n     */\n    static getDefaultConfig() {\n        return AutoNumeric.defaultSettings;\n    }\n\n    /**\n     * Return all the predefined language options in one object.\n     * You can also access a specific language object directly by using `AutoNumeric.getPredefinedOptions().French` for instance.\n     *\n     * @returns {object}\n     */\n    static getPredefinedOptions() {\n        return AutoNumeric.predefinedOptions;\n    }\n\n    /**\n     * Analyse the given array `options` and return a single 'merged' option objet.\n     * `options` can be `null`, or an array of an option objects, or an array containing another array of option objects / strings (pre-defined option names)\n     *\n     * @param {null|Array<object|string|Array<string|object>>} options\n     * @returns {null|object}\n     * @private\n     */\n    static _generateOptionsObjectFromOptionsArray(options) {\n        let optionsResult;\n        if (AutoNumericHelper.isUndefinedOrNullOrEmpty(options) || options.length === 0) {\n            optionsResult = null;\n        } else {\n            optionsResult = {};\n            if (options.length === 1 && Array.isArray(options[0])) {\n                options[0].forEach(optionObject => {\n                    // Using `_getOptionObject()` allows using pre-defined names in the `options` array\n                    Object.assign(optionsResult, this._getOptionObject(optionObject));\n                });\n            } else if (options.length >= 1) {\n                options.forEach(optionObject => {\n                    Object.assign(optionsResult, this._getOptionObject(optionObject));\n                });\n            }\n        }\n\n        return optionsResult;\n    }\n\n    /**\n     * Format the given number (or numeric string) with the given options. This returns the formatted value as a string.\n     * This can also format the given DOM element value with the given options and returns the formatted value as a string.\n     * Note : This function does *not* update that element value with the newly formatted value.\n     * This basically allows to get the formatted value without first having to initialize an AutoNumeric object.\n     *\n     * @param {number|string|HTMLElement|HTMLInputElement} numericStringOrDomElement A number, or a string that represent a javascript number, or a DOM element\n     * @param {object|null} options Multiple objects can be passed, the latter overwriting the settings from the former ones\n     * @returns {string|null}\n     */\n    static format(numericStringOrDomElement, ...options) {\n        if (AutoNumericHelper.isUndefined(numericStringOrDomElement) || numericStringOrDomElement === null) {\n            return null;\n        }\n\n        // Retrieve the value to format\n        let value;\n        if (AutoNumericHelper.isElement(numericStringOrDomElement)) {\n            value = AutoNumericHelper.getElementValue(numericStringOrDomElement);\n        } else {\n            value = numericStringOrDomElement;\n        }\n\n        if (!AutoNumericHelper.isString(value) && !AutoNumericHelper.isNumber(value)) {\n            AutoNumericHelper.throwError(`The value \"${value}\" being \"set\" is not numeric and therefore cannot be used appropriately.`);\n        }\n\n        // Manage options\n        const optionsToUse = this._generateOptionsObjectFromOptionsArray(options);\n\n        // Initiate a very basic settings object\n        const settings = Object.assign({}, this.getDefaultConfig(), optionsToUse);\n        settings.isNegativeSignAllowed = value < 0;\n        settings.isPositiveSignAllowed = value >= 0;\n        this._setBrackets(settings);\n\n        const regex = {};\n        this._cachesUsualRegularExpressions(settings, regex); // This is needed by `_stripAllNonNumberCharactersExceptCustomDecimalChar` that uses those regex\n\n        // Check the validity of the `value` parameter\n        // Convert the value to a numeric string, stripping unnecessary characters in the process\n        let valueString = this._toNumericValue(value, settings);\n        if (isNaN(Number(valueString))) {\n            AutoNumericHelper.throwError(`The value [${valueString}] that you are trying to format is not a recognized number.`);\n        }\n\n        // Check if the given valueString is valid\n        if (!this._isWithinRangeWithOverrideOption(valueString, settings)) {\n            // Throw a custom event\n            AutoNumericHelper.triggerEvent(AutoNumeric.events.formatted, document, {\n                oldValue   : null,\n                newValue   : null,\n                oldRawValue: null,\n                newRawValue: null,\n                isPristine : null,\n                error      : 'Range test failed',\n                aNElement  : null,\n            }, true, true);\n            AutoNumericHelper.throwError(`The value [${valueString}] being set falls outside of the minimumValue [${settings.minimumValue}] and maximumValue [${settings.maximumValue}] range set for this element`);\n        }\n\n        // Directly format any `valuesToStrings` values, if found\n        if (settings.valuesToStrings && this._checkValuesToStringsSettings(value, settings)) {\n            return settings.valuesToStrings[value];\n        }\n\n        // Generate the `negativePositiveSignPlacement` option as needed\n        this._correctNegativePositiveSignPlacementOption(settings);\n        // Calculate the needed decimal places\n        this._calculateDecimalPlacesOnInit(settings);\n\n        // Multiply the raw value with `rawValueDivisor` if defined\n        if ((!AutoNumericHelper.isUndefinedOrNullOrEmpty(settings.rawValueDivisor) && settings.rawValueDivisor !== 0) && // Only divide if the `rawValueDivisor` option is set\n            valueString !== '' && valueString !== null) { // Do not modify the `valueString` if it's an empty string or null\n            valueString *= settings.rawValueDivisor;\n        }\n\n        // Everything is ok, proceed to rounding, formatting and grouping\n        valueString = this._roundFormattedValueShownOnFocus(valueString, settings);\n        valueString = this._modifyNegativeSignAndDecimalCharacterForFormattedValue(valueString, settings);\n        valueString = this._addGroupSeparators(valueString, settings, false, valueString);\n\n        return valueString;\n    }\n\n    /**\n     * Format the given DOM element value, and set the resulting value back as the element value.\n     *\n     * @param {HTMLElement|HTMLInputElement} domElement\n     * @param {object} options\n     * @returns {string|null}\n     */\n    static formatAndSet(domElement, options = null) { //FIXME test this\n        const formattedValue = this.format(domElement, options);\n        AutoNumericHelper.setElementValue(domElement, formattedValue);\n\n        return formattedValue;\n    }\n\n    /**\n     * Unformat the given formatted string with the given options. This returns a numeric string.\n     * It can also unformat the given DOM element value with the given options and returns the unformatted numeric string.\n     * Note: This does *not* update that element value.\n     * This basically allows to get the unformatted value without first having to initialize an AutoNumeric object.\n     *\n     * @param {string|number|HTMLElement|HTMLInputElement} numericStringOrDomElement A number, or a string that represent a javascript number, or a DOM element\n     * @param {object|null} options Multiple objects can be passed, the latter overwriting the settings from the former ones\n     * @returns {string|number|NaN}\n     */\n    static unformat(numericStringOrDomElement, ...options) {\n        if (AutoNumericHelper.isNumberStrict(numericStringOrDomElement)) {\n            // Giving an unformatted value should return the same unformatted value, whatever the options passed as a parameter\n            return numericStringOrDomElement;\n        }\n\n        // Retrieve the value to unformat\n        let value;\n        if (AutoNumericHelper.isElement(numericStringOrDomElement)) {\n            value = AutoNumericHelper.getElementValue(numericStringOrDomElement);\n        } else {\n            value = numericStringOrDomElement;\n        }\n\n        if (value === '') {\n            // This allows to be coherent when serializing forms with empty inputs. Fix issue #512.\n            return '';\n        }\n\n        if (AutoNumericHelper.isUndefined(value) || value === null) {\n            return null;\n        }\n\n        if (AutoNumericHelper.isArray(value) || AutoNumericHelper.isObject(value)) {\n            // Check the validity of the `value` parameter\n            AutoNumericHelper.throwError(`A number or a string representing a number is needed to be able to unformat it, [${value}] given.`);\n        }\n\n        // Manage options\n        const optionsToUse = this._generateOptionsObjectFromOptionsArray(options);\n\n        // Generate the settings\n        const settings = Object.assign({}, this.getDefaultConfig(), optionsToUse);\n        settings.isNegativeSignAllowed = false;\n        settings.isPositiveSignAllowed = true;\n        value = value.toString();\n\n        // Directly unformat any `valuesToStrings` values, if found\n        if (settings.valuesToStrings && this._checkStringsToValuesSettings(value, settings)) {\n            return AutoNumericHelper.objectKeyLookup(settings.valuesToStrings, value);\n        }\n\n        // This checks if a negative sign is anywhere in the `value`, not just on the very first character (i.e. '12345.67-')\n        if (AutoNumericHelper.isNegative(value, settings.negativeSignCharacter)) {\n            settings.isNegativeSignAllowed = true;\n            settings.isPositiveSignAllowed = false;\n        } else if (!AutoNumericHelper.isNull(settings.negativeBracketsTypeOnBlur)) {\n            [settings.firstBracket, settings.lastBracket] = settings.negativeBracketsTypeOnBlur.split(',');\n            if (value.charAt(0) === settings.firstBracket &&\n                value.charAt(value.length - 1) === settings.lastBracket) {\n                settings.isNegativeSignAllowed = true;\n                settings.isPositiveSignAllowed = false;\n                value = this._removeBrackets(value, settings, false);\n            }\n        }\n\n        value = this._convertToNumericString(value, settings);\n        if (AutoNumericHelper.isNumber(Number(value))) { // In case of numbers with the scientific notation (#757)\n            value = AutoNumericHelper.scientificToDecimal(value);\n        }\n\n        const unwantedCharacters = new RegExp(`[^+-0123456789.]`, 'gi');\n        if (unwantedCharacters.test(value)) {\n            return NaN;\n        }\n\n        // Generate the `negativePositiveSignPlacement` option as needed\n        this._correctNegativePositiveSignPlacementOption(settings);\n        // Calculate the needed decimal places\n        if (settings.decimalPlacesRawValue) { // `originalDecimalPlacesRawValue` needs to be defined\n            settings.originalDecimalPlacesRawValue = settings.decimalPlacesRawValue;\n        } else {\n            settings.originalDecimalPlacesRawValue = settings.decimalPlaces;\n        }\n\n        this._calculateDecimalPlacesOnInit(settings);\n\n        // Divide the raw value with `rawValueDivisor` if defined\n        if ((!AutoNumericHelper.isUndefinedOrNullOrEmpty(settings.rawValueDivisor) && settings.rawValueDivisor !== 0) && // Only divide if the `rawValueDivisor` option is set\n            value !== '' && value !== null) { // Do not modify the `value` if it's an empty string or null\n            value /= settings.rawValueDivisor;\n        }\n\n        value = this._roundRawValue(value, settings);\n        value = value.replace(settings.decimalCharacter, '.'); // Here we need to convert back the decimal character to a period since `_roundValue` adds it in some cases\n        value = this._toLocale(value, settings.outputFormat, settings);\n\n        return value;\n    }\n\n    /**\n     * Unformat the given DOM element value, and set the resulting value back as the element value.\n     *\n     * @param {HTMLElement|HTMLInputElement} domElement\n     * @param {object} options\n     * @returns {*}\n     */\n    static unformatAndSet(domElement, options = null) { //FIXME test this\n        const unformattedValue = this.unformat(domElement, options);\n        AutoNumericHelper.setElementValue(domElement, unformattedValue);\n\n        return unformattedValue;\n    }\n\n    /**\n     * Unformat and localize the given formatted string with the given options. This returns a numeric string.\n     * It can also unformat and localize the given DOM element value with the given options and returns the unformatted numeric string.\n     * Note: This does *not* update that element value.\n     * This basically allows to get the localized value without first having to initialize an AutoNumeric object.\n     *\n     * @param {string|number|HTMLElement|HTMLInputElement} numericStringOrDomElement\n     * @param {object} settings\n     * @returns {*}\n     */\n    static localize(numericStringOrDomElement, settings = null) {\n        let value;\n        if (AutoNumericHelper.isElement(numericStringOrDomElement)) {\n            value = AutoNumericHelper.getElementValue(numericStringOrDomElement);\n        } else {\n            value = numericStringOrDomElement;\n        }\n\n        if (value === '') {\n            // This allows to be coherent when serializing forms with empty inputs. Fix issue #512.\n            return '';\n        }\n\n        if (AutoNumericHelper.isNull(settings)) {\n            settings = AutoNumeric.defaultSettings;\n        }\n\n        value = this.unformat(value, settings);\n\n        //XXX The following code is pretty close to the one you can find in `getLocalized()`, but different enough so we won't refactor it.\n        if (Number(value) === 0 && settings.leadingZero !== AutoNumeric.options.leadingZero.keep) {\n            value = '0';\n        }\n\n        let outputFormatToUse;\n        if (AutoNumericHelper.isNull(settings)) {\n            outputFormatToUse = settings.outputFormat;\n        } else {\n            outputFormatToUse = AutoNumeric.defaultSettings.outputFormat;\n        }\n\n        return this._toLocale(value, outputFormatToUse, settings);\n    }\n\n    static localizeAndSet(domElement, options = null) { //FIXME test this\n        const localizedValue = this.localize(domElement, options);\n        AutoNumericHelper.setElementValue(domElement, localizedValue);\n\n        return localizedValue;\n    }\n\n    /**\n     * Return `true` if the given DOM element has an AutoNumeric object that manages it.\n     * This function also accepts a selector string.\n     *\n     * @param {HTMLElement|string} domElementOrSelector Accepts either directly a DOM element to test, or a string selector (that will return one and only one element, if any)\n     * @returns {boolean}\n     */\n    static isManagedByAutoNumeric(domElementOrSelector) { //FIXME test this\n        return this._isInGlobalList(AutoNumericHelper.domElement(domElementOrSelector));\n    }\n\n    /**\n     * Return the AutoNumeric object that manages the given DOM element.\n     * This function also accepts a selector string.\n     *\n     * @param {HTMLElement|string} domElementOrSelector Accepts either directly a DOM element to test, or a string selector (that will return one and only one element, if any)\n     * @returns {null|AutoNumeric}\n     */\n    static getAutoNumericElement(domElementOrSelector) {\n        const domElement = AutoNumericHelper.domElement(domElementOrSelector);\n\n        if (!this.isManagedByAutoNumeric(domElement)) {\n            return null;\n        }\n\n        return this._getFromGlobalList(domElement);\n    }\n\n    /**\n     * Set the given element value, and format it immediately.\n     * Return `null` if no AutoNumeric object is found, else, return the AutoNumeric object.\n     *\n     * @param {HTMLElement|string} domElementOrSelector Either a DOM element reference, or a selector string can be used\n     * @param {number|string|null} newValue The value must be a Number, a numeric string or `null` (if `emptyInputBehavior` is set to `'null'`)\n     * @param {object} options A settings object that will override the current settings. Note: the update is done only if the `newValue` is defined.\n     * @param {boolean} saveChangeToHistory If set to `true`, then the change is recorded in the history table\n     * @returns {AutoNumeric|null}\n     */\n    static set(domElementOrSelector, newValue, options = null, saveChangeToHistory = true) {\n        const domElement = AutoNumericHelper.domElement(domElementOrSelector);\n\n        if (!this.isManagedByAutoNumeric(domElement)) {\n            let showWarnings;\n            if (!AutoNumericHelper.isNull(options) && Object.prototype.hasOwnProperty.call(options, 'showWarnings')) {\n                showWarnings = options.showWarnings;\n            } else {\n                showWarnings = true;\n            }\n\n            AutoNumericHelper.warning(`Impossible to find an AutoNumeric object for the given DOM element or selector.`, showWarnings);\n\n            return null;\n        }\n\n        return this.getAutoNumericElement(domElement).set(newValue, options, saveChangeToHistory);\n    }\n\n    /**\n     * Return the unformatted value as a string from the given DOM element or query selector.\n     * This can also return `null` if `rawValue` is null.\n     *\n     * @param {HTMLElement|string} domElementOrSelector\n     * @param {function|null} callback\n     * @returns {string|null}\n     */\n    static getNumericString(domElementOrSelector, callback = null) {\n        return this._get(domElementOrSelector, 'getNumericString', callback);\n    }\n\n    /**\n     * Return the current formatted value of the AutoNumeric element as a string, from the given DOM element or query selector.\n     *\n     * @param {HTMLElement|string} domElementOrSelector\n     * @param {function|null} callback\n     * @returns {string}\n     */\n    static getFormatted(domElementOrSelector, callback = null) {\n        return this._get(domElementOrSelector, 'getFormatted', callback);\n    }\n\n    /**\n     * Return the element unformatted value as a real Javascript number, from the given DOM element or query selector.\n     * Warning: This can lead to precision problems with big numbers that should be stored as strings.\n     *\n     * @param {HTMLElement|string} domElementOrSelector\n     * @param {function|null} callback\n     * @returns {number|null}\n     */\n    static getNumber(domElementOrSelector, callback = null) {\n        return this._get(domElementOrSelector, 'getNumber', callback);\n    }\n\n    /**\n     * DRY the code between the static `get*` functions\n     *\n     * @param {HTMLElement|string} domElementOrSelector\n     * @param {string} getFunction The name of the non-static `get*` function as a string\n     * @param {function|null} callback\n     * @returns {*}\n     * @private\n     */\n    static _get(domElementOrSelector, getFunction, callback = null) {\n        const domElement = AutoNumericHelper.domElement(domElementOrSelector);\n\n        if (!this.isManagedByAutoNumeric(domElement)) {\n            AutoNumericHelper.throwError(`Impossible to find an AutoNumeric object for the given DOM element or selector.`);\n        }\n\n        return this.getAutoNumericElement(domElement)[getFunction](callback);\n    }\n\n    /**\n     * Returns the unformatted value following the `outputFormat` setting, from the given DOM element or query selector.\n     * See the non-static `getLocalized()` method documentation for more details.\n     *\n     * @param {HTMLElement|string} domElementOrSelector\n     * @param {null|string|function} forcedOutputFormat\n     * @param {function|null} callback\n     * @returns {*}\n     */\n    static getLocalized(domElementOrSelector, forcedOutputFormat = null, callback = null) {\n        const domElement = AutoNumericHelper.domElement(domElementOrSelector);\n\n        if (!this.isManagedByAutoNumeric(domElement)) {\n            AutoNumericHelper.throwError(`Impossible to find an AutoNumeric object for the given DOM element or selector.`);\n        }\n\n        return this.getAutoNumericElement(domElement).getLocalized(forcedOutputFormat, callback);\n    }\n\n    // Pre-defined options can be called to update the current default options with their specificities\n    //XXX A better way would be to not initialize first, but that's not possible since `new` is called first and we do not pass the language options (i.e. `French`) to the constructor\n\n    /**\n     * Update the AutoNumeric object with the predefined options, and possibly some option overrides.\n     *\n     * @param {object} predefinedOption\n     * @param {object} optionOverride\n     * @private\n     * @returns {AutoNumeric}\n     */\n    _updatePredefinedOptions(predefinedOption, optionOverride = null) {\n        if (!AutoNumericHelper.isNull(optionOverride)) {\n            this._mergeSettings(predefinedOption, optionOverride);\n            this.update(this.settings);\n        } else {\n            this.update(predefinedOption);\n        }\n\n        return this;\n    }\n\n    /**\n     * Update the settings to use the French pre-defined language options.\n     * Those pre-defined options can be overridden by passing an option object as a parameter.\n     *\n     * @param {object} optionOverride\n     * @returns {AutoNumeric}\n     */\n    french(optionOverride = null) {\n        this._updatePredefinedOptions(AutoNumeric.getPredefinedOptions().French, optionOverride);\n\n        return this;\n    }\n\n    /**\n     * Update the settings to use the North American pre-defined language options.\n     * Those pre-defined options can be overridden by passing an option object as a parameter.\n     *\n     * @param {object} optionOverride\n     * @returns {AutoNumeric}\n     */\n    northAmerican(optionOverride = null) {\n        this._updatePredefinedOptions(AutoNumeric.getPredefinedOptions().NorthAmerican, optionOverride);\n\n        return this;\n    }\n\n    /**\n     * Update the settings to use the British pre-defined language options.\n     * Those pre-defined options can be overridden by passing an option object as a parameter.\n     *\n     * @param {object} optionOverride\n     * @returns {AutoNumeric}\n     */\n    british(optionOverride = null) {\n        this._updatePredefinedOptions(AutoNumeric.getPredefinedOptions().British, optionOverride);\n\n        return this;\n    }\n\n    /**\n     * Update the settings to use the Swiss pre-defined language options.\n     * Those pre-defined options can be overridden by passing an option object as a parameter.\n     *\n     * @param {object} optionOverride\n     * @returns {AutoNumeric}\n     */\n    swiss(optionOverride = null) {\n        this._updatePredefinedOptions(AutoNumeric.getPredefinedOptions().Swiss, optionOverride);\n\n        return this;\n    }\n\n    /**\n     * Update the settings to use the Japanese pre-defined language options.\n     * Those pre-defined options can be overridden by passing an option object as a parameter.\n     *\n     * @param {object} optionOverride\n     * @returns {AutoNumeric}\n     */\n    japanese(optionOverride = null) {\n        this._updatePredefinedOptions(AutoNumeric.getPredefinedOptions().Japanese, optionOverride);\n\n        return this;\n    }\n\n    /**\n     * Update the settings to use the Spanish pre-defined language options.\n     * Those pre-defined options can be overridden by passing an option object as a parameter.\n     *\n     * @param {object} optionOverride\n     * @returns {AutoNumeric}\n     */\n    spanish(optionOverride = null) {\n        this._updatePredefinedOptions(AutoNumeric.getPredefinedOptions().Spanish, optionOverride);\n\n        return this;\n    }\n\n    /**\n     * Update the settings to use the Chinese pre-defined language options.\n     * Those pre-defined options can be overridden by passing an option object as a parameter.\n     *\n     * @param {object} optionOverride\n     * @returns {AutoNumeric}\n     */\n    chinese(optionOverride = null) {\n        this._updatePredefinedOptions(AutoNumeric.getPredefinedOptions().Chinese, optionOverride);\n\n        return this;\n    }\n\n    /**\n     * Update the settings to use the Brazilian pre-defined language options.\n     * Those pre-defined options can be overridden by passing an option object as a parameter.\n     *\n     * @param {object} optionOverride\n     * @returns {AutoNumeric}\n     */\n    brazilian(optionOverride = null) {\n        this._updatePredefinedOptions(AutoNumeric.getPredefinedOptions().Brazilian, optionOverride);\n\n        return this;\n    }\n\n\n    // Internal private functions\n    /**\n     * Run any callbacks found in the settings object in order to set the settings value back.\n     * Any parameter can have a callback defined.\n     * The callback takes the current AutoNumeric element as the first argument, and the key name as the second.\n     * @example callback(this, 'currencySymbol')\n     */\n    _runCallbacksFoundInTheSettingsObject() { //FIXME test this\n        // Loops through the this.settings object (option array) to find the following\n        for (const key in this.settings) {\n            if (Object.prototype.hasOwnProperty.call(this.settings, key)) {\n                const value = this.settings[key];\n\n                if (typeof value === 'function') {\n                    this.settings[key] = value(this, key);\n                } else {\n                    // Calls the attached function from the html5 data. For instance: <tag data-currency-symbol=\"functionName\"></tag>\n                    let htmlAttribute = '';\n                    if (key in this.domElement.dataset) {\n                        htmlAttribute = this.domElement.dataset[key];\n                    }\n\n                    htmlAttribute = AutoNumericHelper.camelize(htmlAttribute);\n                    if (typeof this.settings[htmlAttribute] === 'function') {\n                        this.settings[key] = htmlAttribute(this, key);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Keep track if the settings configuration leads to a trailing negative sign (only when the raw value is negative), so we do not have to test the settings values every time we need to know that.\n     * `isTrailingNegative` is set to `true` if the settings result in a trailing negative character, `false` otherwise.\n     * Note: This returns `true` even if the raw value is positive.\n     * @private\n     */\n    _setTrailingNegativeSignInfo() {\n        this.isTrailingNegative = (this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.prefix && this.settings.negativePositiveSignPlacement === AutoNumeric.options.negativePositiveSignPlacement.suffix) ||\n        (this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.suffix &&\n        (this.settings.negativePositiveSignPlacement === AutoNumeric.options.negativePositiveSignPlacement.left || this.settings.negativePositiveSignPlacement === AutoNumeric.options.negativePositiveSignPlacement.right));\n    }\n\n    /**\n     * Strip all the unwanted non-number characters.\n     * However, it does not reorder the localized negative sign.\n     *\n     * @param {string} s\n     * @param {object} settings\n     * @param {boolean} stripZeros If set to `false`, then the leading zero(s) are not stripped, otherwise if set to `true`, the `leadingZero` option is followed\n     * @param {boolean} isFocused If the element is focused, then this is `true`\n     * @returns {string}\n     * @private\n     */\n    static _stripAllNonNumberCharacters(s, settings, stripZeros, isFocused) {\n        return this._stripAllNonNumberCharactersExceptCustomDecimalChar(s, settings, stripZeros, isFocused).replace(settings.decimalCharacter, '.');\n    }\n\n    /**\n     * Strip all unwanted non-number characters except the custom decimal character.\n     *\n     * It converts the custom negative sign and removes the positive sign (custom or not).\n     * This keeps :\n     * - the numbers,\n     * - the normal negative sign '-' if any,\n     * - and the *custom* decimal character.\n     *\n     * @param {string} s\n     * @param {object} settings\n     * @param {boolean} stripZeros If set to `false`, then the leading zero(s) are not stripped, otherwise if set to `true`, the `leadingZero` option is followed\n     * @param {boolean} isFocused If the element is focused, then this is `true`\n     * @returns {string|*}\n     */\n    static _stripAllNonNumberCharactersExceptCustomDecimalChar(s, settings, stripZeros, isFocused) {\n        //XXX Note; this function is static since we need to pass a `settings` object when calling the static `AutoNumeric.format()` method\n        //TODO This function is called 10 times (sic!) on each key input, couldn't we lower that number? cf. issue #325\n        s = this._normalizeCurrencySuffixAndNegativeSignCharacters(s, settings);\n\n        // Then remove all the characters that are not numbers, the normal negative sign '-', or the custom decimal character (note: this also remove any custom positive sign)\n        s = s.replace(settings.allowedAutoStrip, '');\n\n        // Get only number string\n        const m = s.match(settings.numRegAutoStrip);\n        s = m ? [m[1], m[2], m[3]].join('') : '';\n\n        if (settings.leadingZero === AutoNumeric.options.leadingZero.allow || settings.leadingZero === AutoNumeric.options.leadingZero.keep) {\n            let negativeSign = '';\n            const [integerPart, decimalPart] = s.split(settings.decimalCharacter);\n            let modifiedIntegerPart = integerPart;\n            if (AutoNumericHelper.contains(modifiedIntegerPart, settings.negativeSignCharacter)) {\n                negativeSign = settings.negativeSignCharacter;\n                modifiedIntegerPart = modifiedIntegerPart.replace(settings.negativeSignCharacter, '');\n            }\n\n            // Strip leading zero on positive value if needed\n            if (negativeSign === '' && modifiedIntegerPart.length > settings.mIntPos && modifiedIntegerPart.charAt(0) === '0') {\n                modifiedIntegerPart = modifiedIntegerPart.slice(1);\n            }\n\n            // Strip leading zero on negative value if needed\n            if (negativeSign !== '' && modifiedIntegerPart.length > settings.mIntNeg && modifiedIntegerPart.charAt(0) === '0') {\n                modifiedIntegerPart = modifiedIntegerPart.slice(1);\n            }\n\n            s = `${negativeSign}${modifiedIntegerPart}${AutoNumericHelper.isUndefined(decimalPart)?'':settings.decimalCharacter + decimalPart}`;\n        }\n\n        if ((stripZeros && settings.leadingZero === AutoNumeric.options.leadingZero.deny) ||\n            (!isFocused && settings.leadingZero === AutoNumeric.options.leadingZero.allow)) {\n            s = s.replace(settings.stripReg, '$1$2');\n        }\n\n        return s;\n    }\n\n    /**\n     * Sets or removes brackets on negative values, depending on the focus state, which is passed as `isFocused`.\n     * The focus state is 'stored' in that object property.\n     *\n     * @param {string} value\n     * @param {object} settings\n     * @param {boolean} isFocused\n     * @returns {*}\n     */\n    static _toggleNegativeBracket(value, settings, isFocused) {\n        //XXX Note; this function is static since we need to pass a `settings` object when calling the static `AutoNumeric.format()` method\n        let result;\n        if (isFocused) {\n            result = this._removeBrackets(value, settings);\n        } else {\n            result = this._addBrackets(value, settings);\n        }\n\n        return result;\n    }\n\n    /**\n     * Add the bracket types specified in the `settings` object, to the given string `value`.\n     *\n     * @param {string} value\n     * @param {object} settings\n     * @returns {string}\n     * @private\n     */\n    static _addBrackets(value, settings) {\n        if (AutoNumericHelper.isNull(settings.negativeBracketsTypeOnBlur)) {\n            return value;\n        }\n\n        return `${settings.firstBracket}${value.replace(settings.negativeSignCharacter, '')}${settings.lastBracket}`;\n    }\n\n    /**\n     * Remove the bracket types specified in the `settings` object, from the given string `value`.\n     *\n     * @param {string} value\n     * @param {object} settings\n     * @param {boolean} rearrangeSignsAndValueOrder If set to `true`, then only the brackets are remove and a negative sign is added, without reordering the negative sign, currency symbol and value according to the settings.\n     * @returns {string}\n     * @private\n     */\n    static _removeBrackets(value, settings, rearrangeSignsAndValueOrder = true) {\n        let result;\n        if (!AutoNumericHelper.isNull(settings.negativeBracketsTypeOnBlur) && value.charAt(0) === settings.firstBracket) {\n            // Remove the brackets if they are present\n            result = value.replace(settings.firstBracket, '');\n            result = result.replace(settings.lastBracket, '');\n\n            // Add back the negative sign at the right place\n            if (rearrangeSignsAndValueOrder) {\n                // First we need to remove the currency symbol from the value, since we want to be able to add back the negative sign at the right place (including between the value and the currency sign)\n                result = result.replace(settings.currencySymbol, '');\n                result = this._mergeCurrencySignNegativePositiveSignAndValue(result, settings, true, false); //TODO This assume the value is negative and non-empty. Is this always the case?\n            } else {\n                // Here we only want to add the negative sign since we removed the brackets, without reordering\n                result = `${settings.negativeSignCharacter}${result}`;\n            }\n        } else {\n            result = value;\n        }\n\n        return result;\n    }\n\n    /**\n     * Analyze the `negativeBracketsTypeOnBlur` options and keep track of the first and last bracket characters to use.\n     *\n     * @param {object} settings\n     * @private\n     */\n    static _setBrackets(settings) {\n        if (AutoNumericHelper.isNull(settings.negativeBracketsTypeOnBlur)) {\n            settings.firstBracket = '';\n            settings.lastBracket  = '';\n        } else {\n            // Use temporary variables to fix the MS Edge destructuring issue (see pull request #564)\n            const [firstBracket, lastBracket] = settings.negativeBracketsTypeOnBlur.split(',');\n            settings.firstBracket = firstBracket;\n            settings.lastBracket = lastBracket;\n        }\n    }\n\n    /**\n     * Return a number as a numeric string that can be typecast to a Number that Javascript will understand.\n     *\n     * This function returns the given string by stripping:\n     * - the currency sign (currencySymbol),\n     * - the grouping separators (digitalGroupSpacing),\n     * - the suffix text (suffixText),\n     * - the positive sign (positiveSignCharacter),\n     * - the brackets if any,\n     * - by replacing the negative sign character with a hyphen,\n     * - and by replacing the decimal character (decimalCharacter) by a dot.\n     *\n     * Lastly, it also put the negative sign back to its normal position if needed.\n     * Bonus; it converts any arabic numbers found to the latin ones.\n     *\n     * @param {string} s\n     * @param {object} settings\n     * @returns {string|void|*}\n     */\n    static _convertToNumericString(s, settings) {\n        // Remove the custom brackets\n        s = this._removeBrackets(s, settings, false);\n        s = this._normalizeCurrencySuffixAndNegativeSignCharacters(s, settings);\n\n        // Remove the grouping separators (thousands separators usually)\n        s = s.replace(new RegExp(`[${settings.digitGroupSeparator}]`, 'g'), '');\n\n        // Replace the decimal character by a dot\n        if (settings.decimalCharacter !== '.') {\n            s = s.replace(settings.decimalCharacter, '.');\n        }\n\n        // Move the trailing negative sign, if any, to the usual leftmost position\n        if (AutoNumericHelper.isNegative(s) && s.lastIndexOf('-') === s.length - 1) {\n            s = s.replace('-', '');\n            s = `-${s}`;\n        }\n\n        // Replace the custom positive sign\n        if (settings.showPositiveSign) {\n            s = s.replace(settings.positiveSignCharacter, '');\n        }\n\n        // Convert arabic numbers to latin ones, if any\n        const convertToNumber = settings.leadingZero !== AutoNumeric.options.leadingZero.keep;\n        const temp = AutoNumericHelper.arabicToLatinNumbers(s, convertToNumber, false, false);\n        if (!isNaN(temp)) {\n            s = temp.toString();\n        }\n\n        return s;\n    }\n\n    /**\n     * Removes the currency symbol and the suffix text from the given string, and replace the custom negative sign with a hyphen.\n     *\n     * @param {string} s\n     * @param {object} settings\n     * @returns {string | *}\n     * @private\n     */\n    static _normalizeCurrencySuffixAndNegativeSignCharacters(s, settings) {\n        s = String(s); // Typecast to a string, in case that the given value is a number\n\n        // Remove the currency symbol\n        if (settings.currencySymbol !== AutoNumeric.options.currencySymbol.none) {\n            s = s.replace(settings.currencySymbol, '');\n        }\n\n        // Remove the suffixText\n        if (settings.suffixText !== AutoNumeric.options.suffixText.none) {\n            s = s.replace(settings.suffixText, '');\n        }\n\n        // Replace the custom negative sign with a hyphen\n        if (settings.negativeSignCharacter !== AutoNumeric.options.negativeSignCharacter.hyphen) {\n            s = s.replace(settings.negativeSignCharacter, '-');\n        }\n\n        return s;\n    }\n\n    /**\n     * Converts the ISO numeric string to the locale decimal and minus sign placement.\n     * See the \"outputFormat\" option definition for more details.\n     * Note: If the `outputFormat` is set to a number, the custom `negativeSignCharacter` is ignored.\n     *\n     * @param {string|null} value The unformatted value\n     * @param {string|null} locale\n     * @param {object} settings\n     * @returns {*}\n     */\n    static _toLocale(value, locale, settings) {\n        if (AutoNumericHelper.isNull(locale) || locale === AutoNumeric.options.outputFormat.string) {\n            return value;\n        }\n\n        let result;\n        switch (locale) {\n            case AutoNumeric.options.outputFormat.number:\n                result = Number(value);\n                break;\n            case AutoNumeric.options.outputFormat.dotNegative:\n                result = AutoNumericHelper.isNegative(value) ? value.replace('-', '') + '-' : value;\n                break;\n            case AutoNumeric.options.outputFormat.comma:\n            case AutoNumeric.options.outputFormat.negativeComma:\n                result = value.replace('.', ',');\n                break;\n            case AutoNumeric.options.outputFormat.commaNegative:\n                result = value.replace('.', ',');\n                result = AutoNumericHelper.isNegative(result) ? result.replace('-', '') + '-' : result;\n                break;\n            // The default case\n            case AutoNumeric.options.outputFormat.dot:\n            case AutoNumeric.options.outputFormat.negativeDot:\n                result = value;\n                break;\n            default :\n                AutoNumericHelper.throwError(`The given outputFormat [${locale}] option is not recognized.`);\n        }\n\n        if (locale !== AutoNumeric.options.outputFormat.number && settings.negativeSignCharacter !== '-') {\n            // Modify the default minus sign with the custom one, if any\n            result = result.replace('-', settings.negativeSignCharacter);\n        }\n\n        return result;\n    }\n\n    /**\n     * Modify the negative sign and the decimal character of the given string value to a hyphen (-) and a dot (.) in order to make that value 'typecastable' to a real number.\n     *\n     * @param {string} s The formatted value\n     * @returns {string} The value with the 'normal' minus sign and decimal character\n     */\n    _modifyNegativeSignAndDecimalCharacterForRawValue(s) {\n        if (this.settings.decimalCharacter !== '.') {\n            s = s.replace(this.settings.decimalCharacter, '.');\n        }\n\n        if (this.settings.negativeSignCharacter !== '-' && this.settings.isNegativeSignAllowed) {\n            s = s.replace(this.settings.negativeSignCharacter, '-');\n        }\n\n        if (!s.match(/\\d/)) {\n            // The default value returned by `get` is not formatted with decimals\n            s += '0';\n        }\n\n        return s;\n    }\n\n    /**\n     * Modify the negative sign and the decimal character to use those defined in the settings.\n     *\n     * @param {string} s\n     * @param {object} settings\n     * @returns {string}\n     */\n    static _modifyNegativeSignAndDecimalCharacterForFormattedValue(s, settings) {\n        //XXX Note; this function is static since we need to pass a `settings` object when calling the static `AutoNumeric.format()` method\n        if (settings.negativeSignCharacter !== '-') {\n            s = s.replace('-', settings.negativeSignCharacter);\n        }\n\n        if (settings.decimalCharacter !== '.') {\n            s = s.replace('.', settings.decimalCharacter);\n        }\n\n        return s;\n    }\n\n    /**\n     * Return `true` if the given value is empty or is equal to the negative sign character defined in the given settings.\n     *\n     * @param {string} value\n     * @param {object} settings\n     * @returns {boolean}\n     * @private\n     */\n    static _isElementValueEmptyOrOnlyTheNegativeSign(value, settings) {\n        return value === '' || value === settings.negativeSignCharacter;\n    }\n\n    /**\n     * Return the value with the currency symbol and the suffix text ordered according to the given settings.\n     *\n     * @param {string} value\n     * @param {object} settings\n     * @param {boolean} signOnEmpty\n     * @returns {*}\n     * @private\n     */\n    static _orderValueCurrencySymbolAndSuffixText(value, settings, signOnEmpty) {\n        let result;\n        if (settings.emptyInputBehavior === AutoNumeric.options.emptyInputBehavior.always || signOnEmpty) {\n            switch (settings.negativePositiveSignPlacement) {\n                case AutoNumeric.options.negativePositiveSignPlacement.left:\n                case AutoNumeric.options.negativePositiveSignPlacement.prefix:\n                case AutoNumeric.options.negativePositiveSignPlacement.none:\n                    result = value + settings.currencySymbol + settings.suffixText;\n                    break;\n                default :\n                    result = settings.currencySymbol + value + settings.suffixText;\n            }\n        } else {\n            result = value;\n        }\n\n        return result;\n    }\n\n    /**\n     * Modify the input value by adding the group separators, as defined in the settings, and the negative brackets if needed.\n     *\n     * @param {string} inputValue The formatted value (i.e. with the `decimalCharacter` defined in the settings, not the raw value)\n     * @param {object} settings\n     * @param {boolean} isFocused\n     * @param {number|string|null} currentRawValue The object current raw value (`this.rawValue`)\n     * @param {number|string|null} forcedRawValue If this is set, then this rawValue is used instead of the one passed through the `settings` object. This is useful is some very specific cases where we need to set the raw value *after* settings the formatted value, using the `_addGroupSeparators()` method.\n     * @returns {*}\n     */\n    static _addGroupSeparators(inputValue, settings, isFocused, currentRawValue, forcedRawValue = null) {\n        //TODO Test if `inputValue` === '', and return '' directly if that's the case,\n        //XXX Note; this function is static since we need to pass a `settings` object when calling the static `AutoNumeric.format()` method\n        let isValueNegative;\n        if (!AutoNumericHelper.isNull(forcedRawValue)) {\n            // Prefer directly testing if the raw value is negative in order for the test to be more performant than manipulating the formatted value\n            isValueNegative = forcedRawValue < 0;\n        } else {\n            isValueNegative = AutoNumericHelper.isNegative(inputValue, settings.negativeSignCharacter) || AutoNumericHelper.isNegativeWithBrackets(inputValue, settings.firstBracket, settings.lastBracket); // Test if the value is negative before removing the negative sign\n        }\n\n        inputValue = this._stripAllNonNumberCharactersExceptCustomDecimalChar(inputValue, settings, false, isFocused);\n\n        if (this._isElementValueEmptyOrOnlyTheNegativeSign(inputValue, settings)) {\n            return this._orderValueCurrencySymbolAndSuffixText(inputValue, settings, true);\n        }\n\n        const isZeroOrHasNoValue = AutoNumericHelper.isZeroOrHasNoValue(inputValue);\n\n        // Temporarily remove the negative sign if present\n        if (isValueNegative) {\n            inputValue = inputValue.replace('-', ''); // At this point the `inputValue` has been normalized with a 'normal' negative sign `'-'` //TODO Check that comment validity, since `_stripAllNonNumberCharactersExceptCustomDecimalChar` *does not* convert the negative sign\n        }\n\n        // Splits the string at the decimal string\n        let [integerPart, decimalPart] = inputValue.split(settings.decimalCharacter);\n        if (settings.decimalCharacterAlternative && AutoNumericHelper.isUndefined(decimalPart)) {\n            [integerPart, decimalPart] = inputValue.split(settings.decimalCharacterAlternative);\n        }\n\n        if (settings.digitGroupSeparator !== '') {\n            settings.digitalGroupSpacing = settings.digitalGroupSpacing.toString();\n            let digitalGroup;\n            switch (settings.digitalGroupSpacing) {\n                case AutoNumeric.options.digitalGroupSpacing.twoThree:\n                    digitalGroup = /(\\d)((\\d)(\\d{2}?)+)$/;\n                    break;\n                case AutoNumeric.options.digitalGroupSpacing.twoScaled:\n                    digitalGroup = /(\\d)((?:\\d{2}){0,2}\\d{3}(?:(?:\\d{2}){2}\\d{3})*?)$/;\n                    break;\n                case AutoNumeric.options.digitalGroupSpacing.two:\n                case AutoNumeric.options.digitalGroupSpacing.three:\n                case AutoNumeric.options.digitalGroupSpacing.four:\n                default :\n                    digitalGroup = new RegExp(`(\\\\d)((\\\\d{${settings.digitalGroupSpacing}}?)+)$`);\n            }\n\n            // Re-inserts the thousand separator via a regular expression\n            while (digitalGroup.test(integerPart)) {\n                integerPart = integerPart.replace(digitalGroup, `$1${settings.digitGroupSeparator}$2`);\n            }\n        }\n\n        // Find out how many decimal places should be kept, depending on the object state (isFocused)\n        let decimalPlacesToRoundTo;\n        if (isFocused) {\n            decimalPlacesToRoundTo = settings.decimalPlacesShownOnFocus;\n        } else {\n            decimalPlacesToRoundTo = settings.decimalPlacesShownOnBlur;\n        }\n\n        if (decimalPlacesToRoundTo !== 0 && !AutoNumericHelper.isUndefined(decimalPart)) {\n            if (decimalPart.length > decimalPlacesToRoundTo) {\n                // Trim the excessive number of decimal places\n                decimalPart = decimalPart.substring(0, decimalPlacesToRoundTo);\n            }\n\n            // Joins the whole number with the decimal value\n            inputValue = `${integerPart}${settings.decimalCharacter}${decimalPart}`;\n        } else {\n            // Otherwise if it's an integer\n            inputValue = integerPart;\n        }\n\n        // Add back the negative/positive sign and the currency symbol, at the right positions\n        inputValue = AutoNumeric._mergeCurrencySignNegativePositiveSignAndValue(inputValue, settings, isValueNegative, isZeroOrHasNoValue); //TODO this function is called again in `_toggleNegativeBracket` if the brackets are removed; let's DRY this\n\n        if (AutoNumericHelper.isNull(forcedRawValue)) {\n            // If the raw value is not forced, use the default one from the settings object\n            forcedRawValue = currentRawValue;\n        }\n\n        // Toggle the negative sign and brackets\n        if (settings.negativeBracketsTypeOnBlur !== null && (forcedRawValue < 0 || AutoNumericHelper.isNegativeStrict(inputValue, settings.negativeSignCharacter))) {\n            inputValue = this._toggleNegativeBracket(inputValue, settings, isFocused);\n        }\n\n        let result;\n        if (settings.suffixText) {\n            result = `${inputValue}${settings.suffixText}`;\n        } else {\n            result = inputValue;\n        }\n\n        return result;\n    }\n\n    /**\n     * Return a semi-formatted string where the input value, the negative or positive sign, and the currency symbol are stitched together at the right positions, using the options set in the `settings` object.\n     * Note : the `inputValue` is usually not a numeric string since the grouping symbols are already added to it at this point.\n     *\n     * @param {string} inputValue\n     * @param {object} settings\n     * @param {boolean} isValueNegative\n     * @param {boolean} isZeroOrHasNoValue\n     * @returns {*}\n     * @throws\n     * @private\n     */\n    static _mergeCurrencySignNegativePositiveSignAndValue(inputValue, settings, isValueNegative, isZeroOrHasNoValue) {\n        let signToUse = '';\n        if (isValueNegative) {\n            signToUse = settings.negativeSignCharacter;\n        } else if (settings.showPositiveSign && !isZeroOrHasNoValue) {\n            signToUse = settings.positiveSignCharacter;\n        }\n\n        let result;\n        if (settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.prefix) {\n            if (settings.negativePositiveSignPlacement !== AutoNumeric.options.negativePositiveSignPlacement.none &&\n                (isValueNegative || (!isValueNegative && settings.showPositiveSign && !isZeroOrHasNoValue))) {\n                switch (settings.negativePositiveSignPlacement) {\n                    case AutoNumeric.options.negativePositiveSignPlacement.prefix:\n                    case AutoNumeric.options.negativePositiveSignPlacement.left:\n                        result = `${signToUse}${settings.currencySymbol}${inputValue}`;\n                        break;\n                    case AutoNumeric.options.negativePositiveSignPlacement.right:\n                        result = `${settings.currencySymbol}${signToUse}${inputValue}`;\n                        break;\n                    case AutoNumeric.options.negativePositiveSignPlacement.suffix:\n                        result = `${settings.currencySymbol}${inputValue}${signToUse}`;\n                        break;\n                }\n            } else {\n                result = settings.currencySymbol + inputValue;\n            }\n        } else if (settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.suffix) {\n            if (settings.negativePositiveSignPlacement !== AutoNumeric.options.negativePositiveSignPlacement.none &&\n                (isValueNegative || (!isValueNegative && settings.showPositiveSign && !isZeroOrHasNoValue))) {\n                switch (settings.negativePositiveSignPlacement) {\n                    case AutoNumeric.options.negativePositiveSignPlacement.suffix:\n                    case AutoNumeric.options.negativePositiveSignPlacement.right:\n                        result = `${inputValue}${settings.currencySymbol}${signToUse}`;\n                        break;\n                    case AutoNumeric.options.negativePositiveSignPlacement.left:\n                        result = `${inputValue}${signToUse}${settings.currencySymbol}`;\n                        break;\n                    case AutoNumeric.options.negativePositiveSignPlacement.prefix:\n                        result = `${signToUse}${inputValue}${settings.currencySymbol}`;\n                        break;\n                }\n            } else {\n                result = inputValue + settings.currencySymbol;\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Calculate where to put the caret position on focus if the element content is not selected.\n     * This calculation is affected by the `caretPositionOnFocus` option which can be either `null`, `'start'`, `'end'`, `'decimalLeft'` or 'decimalRight'`, and will decide where to put the caret (on the left or right of the value or the decimal character, respectively) :\n     * - `null` : the caret position is not forced\n     * - `'start'` : the caret is positioned on the left hand side of the value\n     * - `'end'` : the caret is positioned on the right hand side of the value\n     * - `'decimalLeft'` : the caret is positioned on the left side of the decimal character\n     * - `'decimalRight'` : the caret is positioned on the right side of the decimal character\n     *\n     * @param {string} value The formatted string stripped of the currency symbol and negative/positive sign\n     * @returns {number}\n     * @throws\n     * @private\n     */\n    _initialCaretPosition(value) {\n        if (AutoNumericHelper.isNull(this.settings.caretPositionOnFocus) &&\n            this.settings.selectOnFocus === AutoNumeric.options.selectOnFocus.doNotSelect) {\n            AutoNumericHelper.throwError('`_initialCaretPosition()` should never be called when the `caretPositionOnFocus` option is `null`.');\n        }\n\n        const isValueNegative = this.rawValue < 0;\n        const isZeroOrHasNoValue = AutoNumericHelper.isZeroOrHasNoValue(value);\n        const totalLength = value.length;\n\n        let valueSize = 0;\n        let integerSize = 0;\n        let hasDecimalChar = false;\n        let offsetDecimalChar = 0;\n        if (this.settings.caretPositionOnFocus !== AutoNumeric.options.caretPositionOnFocus.start) {\n            value = value.replace(this.settings.negativeSignCharacter, '');\n            value = value.replace(this.settings.positiveSignCharacter, '');\n            value = value.replace(this.settings.currencySymbol, '');\n            valueSize = value.length;\n            hasDecimalChar = AutoNumericHelper.contains(value, this.settings.decimalCharacter);\n\n            if (this.settings.caretPositionOnFocus === AutoNumeric.options.caretPositionOnFocus.decimalLeft ||\n                this.settings.caretPositionOnFocus === AutoNumeric.options.caretPositionOnFocus.decimalRight) {\n                if (hasDecimalChar) {\n                    integerSize = value.indexOf(this.settings.decimalCharacter);\n                    offsetDecimalChar = this.settings.decimalCharacter.length;\n                } else {\n                    integerSize = valueSize;\n                    offsetDecimalChar = 0;\n                }\n            }\n        }\n\n        let signToUse = '';\n        if (isValueNegative) {\n            signToUse = this.settings.negativeSignCharacter;\n        } else if (this.settings.showPositiveSign && !isZeroOrHasNoValue) {\n            signToUse = this.settings.positiveSignCharacter;\n        }\n\n        const positiveNegativeSignSize = signToUse.length;\n        const currencySymbolSize = this.settings.currencySymbol.length;\n\n        // Calculate the caret position based on `currencySymbolPlacement`, `negativePositiveSignPlacement` and `caretPositionOnFocus`\n        let caretPosition;\n        if (this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.prefix) {\n            if (this.settings.caretPositionOnFocus === AutoNumeric.options.caretPositionOnFocus.start) {\n                if (this.settings.negativePositiveSignPlacement !== AutoNumeric.options.negativePositiveSignPlacement.none &&\n                    (isValueNegative || (!isValueNegative && this.settings.showPositiveSign && !isZeroOrHasNoValue))) {\n                    switch (this.settings.negativePositiveSignPlacement) {\n                        case AutoNumeric.options.negativePositiveSignPlacement.prefix: // +€|12.34\n                        case AutoNumeric.options.negativePositiveSignPlacement.left:   // +€|12.34\n                        case AutoNumeric.options.negativePositiveSignPlacement.right:  // €+|12.34\n                            caretPosition = positiveNegativeSignSize + currencySymbolSize;\n                            break;\n                        case AutoNumeric.options.negativePositiveSignPlacement.suffix: // €|12.34+\n                            caretPosition = currencySymbolSize;\n                            break;\n                    }\n                } else {                                                               // €|12.34\n                    caretPosition = currencySymbolSize;\n                }\n            } else if (this.settings.caretPositionOnFocus === AutoNumeric.options.caretPositionOnFocus.end) {\n                if (this.settings.negativePositiveSignPlacement !== AutoNumeric.options.negativePositiveSignPlacement.none &&\n                    (isValueNegative || (!isValueNegative && this.settings.showPositiveSign && !isZeroOrHasNoValue))) {\n                    switch (this.settings.negativePositiveSignPlacement) {\n                        case AutoNumeric.options.negativePositiveSignPlacement.prefix: // +€12.34|\n                        case AutoNumeric.options.negativePositiveSignPlacement.left:   // +€12.34|\n                        case AutoNumeric.options.negativePositiveSignPlacement.right:  // €+12.34|\n                            caretPosition = totalLength;\n                            break;\n                        case AutoNumeric.options.negativePositiveSignPlacement.suffix: // €12.34|+\n                            caretPosition = currencySymbolSize + valueSize;\n                            break;\n                    }\n                } else {                                                               // €12.34|\n                    caretPosition = totalLength;\n                }\n            } else if (this.settings.caretPositionOnFocus === AutoNumeric.options.caretPositionOnFocus.decimalLeft) {\n                if (this.settings.negativePositiveSignPlacement !== AutoNumeric.options.negativePositiveSignPlacement.none &&\n                    (isValueNegative || (!isValueNegative && this.settings.showPositiveSign && !isZeroOrHasNoValue))) {\n                    switch (this.settings.negativePositiveSignPlacement) {\n                        case AutoNumeric.options.negativePositiveSignPlacement.prefix: // +€12|.34\n                        case AutoNumeric.options.negativePositiveSignPlacement.left:   // +€12|.34\n                        case AutoNumeric.options.negativePositiveSignPlacement.right:  // €+12|.34\n                            caretPosition = positiveNegativeSignSize + currencySymbolSize + integerSize;\n                            break;\n                        case AutoNumeric.options.negativePositiveSignPlacement.suffix: // €12|.34+\n                            caretPosition = currencySymbolSize + integerSize;\n                            break;\n                    }\n                } else {                                                               // €12|.34\n                    caretPosition = currencySymbolSize + integerSize;\n                }\n            } else if (this.settings.caretPositionOnFocus === AutoNumeric.options.caretPositionOnFocus.decimalRight) {\n                if (this.settings.negativePositiveSignPlacement !== AutoNumeric.options.negativePositiveSignPlacement.none &&\n                    (isValueNegative || (!isValueNegative && this.settings.showPositiveSign && !isZeroOrHasNoValue))) {\n                    switch (this.settings.negativePositiveSignPlacement) {\n                        case AutoNumeric.options.negativePositiveSignPlacement.prefix: // +€12.|34\n                        case AutoNumeric.options.negativePositiveSignPlacement.left:   // +€12.|34\n                        case AutoNumeric.options.negativePositiveSignPlacement.right:  // €+12.|34\n                            caretPosition = positiveNegativeSignSize + currencySymbolSize + integerSize + offsetDecimalChar;\n                            break;\n                        case AutoNumeric.options.negativePositiveSignPlacement.suffix: // €12.|34+\n                            caretPosition = currencySymbolSize + integerSize + offsetDecimalChar;\n                            break;\n                    }\n                } else {                                                               // €12.|34\n                    caretPosition = currencySymbolSize + integerSize + offsetDecimalChar;\n                }\n            }\n        } else if (this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.suffix) {\n            if (this.settings.caretPositionOnFocus === AutoNumeric.options.caretPositionOnFocus.start) {\n                if (this.settings.negativePositiveSignPlacement !== AutoNumeric.options.negativePositiveSignPlacement.none &&\n                    (isValueNegative || (!isValueNegative && this.settings.showPositiveSign && !isZeroOrHasNoValue))) {\n                    switch (this.settings.negativePositiveSignPlacement) {\n                        case AutoNumeric.options.negativePositiveSignPlacement.suffix: // |12.34€+\n                        case AutoNumeric.options.negativePositiveSignPlacement.right:  // |12.34€+\n                        case AutoNumeric.options.negativePositiveSignPlacement.left:   // |12.34+€\n                            caretPosition = 0;\n                            break;\n                        case AutoNumeric.options.negativePositiveSignPlacement.prefix: // +|12.34€\n                            caretPosition = positiveNegativeSignSize;\n                            break;\n                    }\n                } else {                                                               // |12.34€\n                    caretPosition = 0;\n                }\n            } else if (this.settings.caretPositionOnFocus === AutoNumeric.options.caretPositionOnFocus.end) {\n                if (this.settings.negativePositiveSignPlacement !== AutoNumeric.options.negativePositiveSignPlacement.none &&\n                    (isValueNegative || (!isValueNegative && this.settings.showPositiveSign && !isZeroOrHasNoValue))) {\n                    switch (this.settings.negativePositiveSignPlacement) {\n                        case AutoNumeric.options.negativePositiveSignPlacement.suffix: // 12.34|€+\n                        case AutoNumeric.options.negativePositiveSignPlacement.right:  // 12.34|€+\n                        case AutoNumeric.options.negativePositiveSignPlacement.left:   // 12.34|+€\n                            caretPosition = valueSize;\n                            break;\n                        case AutoNumeric.options.negativePositiveSignPlacement.prefix: // +12.34|€\n                            caretPosition = positiveNegativeSignSize + valueSize;\n                            break;\n                    }\n                } else {                                                               // 12.34|€\n                    caretPosition = valueSize;\n                }\n            } else if (this.settings.caretPositionOnFocus === AutoNumeric.options.caretPositionOnFocus.decimalLeft) {\n                if (this.settings.negativePositiveSignPlacement !== AutoNumeric.options.negativePositiveSignPlacement.none &&\n                    (isValueNegative || (!isValueNegative && this.settings.showPositiveSign && !isZeroOrHasNoValue))) {\n                    switch (this.settings.negativePositiveSignPlacement) {\n                        case AutoNumeric.options.negativePositiveSignPlacement.suffix: // 12|.34€+\n                        case AutoNumeric.options.negativePositiveSignPlacement.right:  // 12|.34€+\n                        case AutoNumeric.options.negativePositiveSignPlacement.left:   // 12|.34+€\n                            caretPosition = integerSize;\n                            break;\n                        case AutoNumeric.options.negativePositiveSignPlacement.prefix: // +12|.34€\n                            caretPosition = positiveNegativeSignSize + integerSize;\n                            break;\n                    }\n                } else {                                                               // 12|.34€\n                    caretPosition = integerSize;\n                }\n            } else if (this.settings.caretPositionOnFocus === AutoNumeric.options.caretPositionOnFocus.decimalRight) {\n                if (this.settings.negativePositiveSignPlacement !== AutoNumeric.options.negativePositiveSignPlacement.none &&\n                    (isValueNegative || (!isValueNegative && this.settings.showPositiveSign && !isZeroOrHasNoValue))) {\n                    switch (this.settings.negativePositiveSignPlacement) {\n                        case AutoNumeric.options.negativePositiveSignPlacement.suffix: // 12.|34€+\n                        case AutoNumeric.options.negativePositiveSignPlacement.right:  // 12.|34€+\n                        case AutoNumeric.options.negativePositiveSignPlacement.left:   // 12.|34+€\n                            caretPosition = integerSize + offsetDecimalChar;\n                            break;\n                        case AutoNumeric.options.negativePositiveSignPlacement.prefix: // +12.|34€\n                            caretPosition = positiveNegativeSignSize + integerSize + offsetDecimalChar;\n                            break;\n                    }\n                } else {                                                               // 12.|34€\n                    caretPosition = integerSize + offsetDecimalChar;\n                }\n            }\n        }\n\n        return caretPosition;\n    }\n\n    /**\n     * Truncate the trailing zeroes to the given number of decimal places\n     *\n     * @param {string} roundedInputValue\n     * @param {int} decimalPlacesNeeded The number of decimal places to keep\n     * @returns {string}\n     */\n    static _truncateZeros(roundedInputValue, decimalPlacesNeeded) {\n        let regex;\n        switch (decimalPlacesNeeded) {\n            case 0:\n                // Prevents padding - removes trailing zeros until the first significant digit is encountered\n                regex = /(\\.(?:\\d*[1-9])?)0*$/;\n                break;\n            case 1:\n                // Allows padding when decimalPlacesNeeded equals one - leaves one zero trailing the decimal character\n                regex = /(\\.\\d(?:\\d*[1-9])?)0*$/;\n                break;\n            default :\n                // Removes superfluous zeros after the decimalPlacesNeeded length\n                regex = new RegExp(`(\\\\.\\\\d{${decimalPlacesNeeded}}(?:\\\\d*[1-9])?)0*`);\n        }\n\n        // If there are no decimal places, we don't need a decimal point at the end\n        roundedInputValue = roundedInputValue.replace(regex, '$1');\n        if (decimalPlacesNeeded === 0) {\n            roundedInputValue = roundedInputValue.replace(/\\.$/, '');\n        }\n\n        return roundedInputValue;\n    }\n\n    /**\n     * Round the given `value` with the number of decimal places to keep for the raw value.\n     *\n     * @param {string|null} value An unformatted numeric value\n     * @param {object} settings\n     * @returns {*}\n     * @private\n     */\n    static _roundRawValue(value, settings) {\n        return this._roundValue(value, settings, settings.decimalPlacesRawValue);\n    }\n\n    /**\n     * Round the given `value` with the number of decimal places to show for the element if focused.\n     *\n     * @param {string|null} value An unformatted numeric value\n     * @param {object} settings\n     * @returns {*}\n     * @private\n     */\n    static _roundFormattedValueShownOnFocus(value, settings) {\n        return this._roundValue(value, settings, Number(settings.decimalPlacesShownOnFocus));\n    }\n\n    /**\n     * Round the given `value` with the number of decimal places to show for the element if unfocused.\n     *\n     * @param {string|null} value An unformatted numeric value\n     * @param {object} settings\n     * @returns {*}\n     * @private\n     */\n    static _roundFormattedValueShownOnBlur(value, settings) {\n        return this._roundValue(value, settings, Number(settings.decimalPlacesShownOnBlur));\n    }\n\n    /**\n     * Round the given `value` with the number of decimal places to show for the element based on the value of isFocused.\n     *\n     * @param {string|null} value An unformatted numeric value\n     * @param {object} settings\n     * @param {boolean} isFocused\n     * @returns {*}\n     * @private\n     */\n    static _roundFormattedValueShownOnFocusOrBlur(value, settings, isFocused) {\n        if (isFocused) {\n            return this._roundFormattedValueShownOnFocus(value, settings);\n        } else {\n            return this._roundFormattedValueShownOnBlur(value, settings);\n        }\n    }\n\n    /**\n     * Round the input value using the rounding method defined in the settings.\n     * This function accepts multiple rounding methods. See the documentation for more details about those.\n     *\n     * Note : This is handled as text since JavaScript math functions can return inaccurate values.\n     *\n     * @param {string|null} inputValue An unformatted numeric value\n     * @param {object} settings\n     * @param {int} decimalPlacesToRoundTo\n     * @returns {*}\n     */\n    static _roundValue(inputValue, settings, decimalPlacesToRoundTo) {\n        //XXX Note; this function is static since we need to pass a `settings` object when calling the static `AutoNumeric.format()` method\n        if (AutoNumericHelper.isNull(inputValue)) {\n            // Prevent rounding a `null` value\n            return inputValue;\n        }\n\n        //TODO Divide this function to make it easier to understand\n        inputValue = (inputValue === '') ? '0' : inputValue.toString();\n        if (settings.roundingMethod === AutoNumeric.options.roundingMethod.toNearest05 ||\n            settings.roundingMethod === AutoNumeric.options.roundingMethod.toNearest05Alt ||\n            settings.roundingMethod === AutoNumeric.options.roundingMethod.upToNext05 ||\n            settings.roundingMethod === AutoNumeric.options.roundingMethod.downToNext05) {\n            return this._roundCloseTo05(inputValue, settings);\n        }\n\n        const [negativeSign, preparedValue] = AutoNumeric._prepareValueForRounding(inputValue, settings);\n        inputValue = preparedValue;\n\n        const decimalCharacterPosition = inputValue.lastIndexOf('.');\n        const inputValueHasNoDot = decimalCharacterPosition === -1; // No dot character is found in the `inputValue`\n        const [integerPart, decimalPart] = inputValue.split('.'); // Here the decimal character is always a period '.'\n        const hasDecimals = decimalPart > 0;\n\n        // If no decimals are detected\n        if (!hasDecimals &&\n            (settings.allowDecimalPadding === AutoNumeric.options.allowDecimalPadding.never ||\n            settings.allowDecimalPadding === AutoNumeric.options.allowDecimalPadding.floats)) {\n            // If the value decimalPart is only one or more zeroes, then it needs to be removed from the resulting string (cf. issue #652)\n            return (Number(inputValue) === 0) ? integerPart : `${negativeSign}${integerPart}`;\n        }\n\n        // Else there are some decimal places that may need to be rounded\n        // Sets the truncate zero method\n        let temporaryDecimalPlacesOverride;\n        if (settings.allowDecimalPadding === AutoNumeric.options.allowDecimalPadding.always ||\n            settings.allowDecimalPadding === AutoNumeric.options.allowDecimalPadding.floats) {\n            temporaryDecimalPlacesOverride = decimalPlacesToRoundTo;\n        } else if (settings.allowDecimalPadding > 0) {\n            temporaryDecimalPlacesOverride = settings.allowDecimalPadding;\n        } else {\n            temporaryDecimalPlacesOverride = 0;\n        }\n\n        // Define the decimal position to use (use the very last position if there are no dot in the initial inputValue)\n        const decimalPositionToUse = inputValueHasNoDot ? inputValue.length - 1 : decimalCharacterPosition;\n        // Checks decimal places to determine if rounding is required\n        let checkDecimalPlaces = (inputValue.length - 1) - decimalPositionToUse;\n        let inputValueRounded = '';\n\n        // Check if no rounding is required\n        if (checkDecimalPlaces <= decimalPlacesToRoundTo) {\n            // Check if we need to pad with zeros\n            inputValueRounded = inputValue;\n            if (checkDecimalPlaces < temporaryDecimalPlacesOverride) {\n                if (inputValueHasNoDot) {\n                    inputValueRounded = `${inputValueRounded}${settings.decimalCharacter}`;\n                }\n\n                let zeros = '000000'; //TODO Change that string with a longer one to prevent having to loop numerous times in the next `while` statement?\n                while (checkDecimalPlaces < temporaryDecimalPlacesOverride) {\n                    zeros = zeros.substring(0, temporaryDecimalPlacesOverride - checkDecimalPlaces);\n                    inputValueRounded += zeros;\n                    checkDecimalPlaces += zeros.length;\n                }\n            } else if (checkDecimalPlaces > temporaryDecimalPlacesOverride) {\n                inputValueRounded = this._truncateZeros(inputValueRounded, temporaryDecimalPlacesOverride);\n            } else if (checkDecimalPlaces === 0 && temporaryDecimalPlacesOverride === 0) {\n                // Remove any trailing dot, if any\n                inputValueRounded = inputValueRounded.replace(/\\.$/, '');\n            }\n\n            return (Number(inputValueRounded) === 0) ? inputValueRounded : `${negativeSign}${inputValueRounded}`;\n        }\n\n        // Rounded length of the string after rounding\n        let roundedStrLength;\n        if (inputValueHasNoDot) {\n            roundedStrLength = decimalPlacesToRoundTo - 1;\n        } else {\n            roundedStrLength = Number(decimalPlacesToRoundTo) + Number(decimalCharacterPosition);\n        }\n\n        const lastDigit = Number(inputValue.charAt(roundedStrLength + 1));\n        let inputValueArray = inputValue.substring(0, roundedStrLength + 1).split('');\n        let odd;\n        if (inputValue.charAt(roundedStrLength) === '.') {\n            odd = inputValue.charAt(roundedStrLength - 1) % 2;\n        } else {\n            odd = inputValue.charAt(roundedStrLength) % 2;\n        }\n\n        if (this._shouldRoundUp(lastDigit, settings, negativeSign, odd)) {\n            // Round up the last digit if required, and continue until no more 9's are found\n            for (let i = (inputValueArray.length - 1); i >= 0; i -= 1) {\n                if (inputValueArray[i] !== '.') {\n                    inputValueArray[i] = +inputValueArray[i] + 1;\n                    if (inputValueArray[i] < 10) {\n                        break;\n                    }\n\n                    if (i > 0) {\n                        inputValueArray[i] = '0';\n                    }\n                }\n            }\n        }\n\n        // Reconstruct the string, converting any 10's to 0's\n        inputValueArray = inputValueArray.slice(0, roundedStrLength + 1);\n\n        // Return the rounded value\n        inputValueRounded = this._truncateZeros(inputValueArray.join(''), temporaryDecimalPlacesOverride);\n\n        return (Number(inputValueRounded) === 0) ? inputValueRounded : `${negativeSign}${inputValueRounded}`;\n    }\n\n    /**\n     * Round the `value` when the rounding method deals with '.05'\n     *\n     * @param {string} value\n     * @param {object} settings\n     * @returns {string}\n     * @private\n     */\n    static _roundCloseTo05(value, settings) {\n        switch (settings.roundingMethod) {\n            case AutoNumeric.options.roundingMethod.toNearest05:\n            case AutoNumeric.options.roundingMethod.toNearest05Alt:\n                value = (Math.round(value * 20) / 20).toString();\n                break;\n            case AutoNumeric.options.roundingMethod.upToNext05:\n                value = (Math.ceil(value * 20) / 20).toString();\n                break;\n            default :\n                value = (Math.floor(value * 20) / 20).toString();\n        }\n\n        let result;\n        if (!AutoNumericHelper.contains(value, '.')) {\n            result = value + '.00';\n        } else if (value.length - value.indexOf('.') < 3) {\n            result = value + '0';\n        } else {\n            result = value;\n        }\n\n        return result;\n    }\n\n    /**\n     * Modify the given `value` in order to make it usable for the rest of the rounding function.\n     * This convert the `value` to a positive one, trim any leading zeros and make sure it does not start with a leading dot.\n     *\n     * @param {string} value The unformatted value\n     * @param {object} settings\n     * @returns {[string, string]}\n     * @private\n     */\n    static _prepareValueForRounding(value, settings) {\n        // Checks if `inputValue` is a negative value\n        let negativeSign = '';\n        if (AutoNumericHelper.isNegativeStrict(value, '-')) { // The value being unformatted, we check for the minus sign\n            negativeSign = '-';\n\n            // Removes the negative sign that will be added back later if required\n            value = value.replace('-', '');\n        }\n\n        // Append a zero if the first character is not a digit (then it is likely a dot)\n        if (!value.match(/^\\d/)) {\n            value = `0${value}`;\n        }\n\n        // Determines if the value is equal to zero. If it is, remove the negative sign\n        if (Number(value) === 0) {\n            negativeSign = '';\n        }\n\n        // Trims leading zero's as needed\n        if ((Number(value) > 0 && settings.leadingZero !== AutoNumeric.options.leadingZero.keep) ||\n            (value.length > 0 && settings.leadingZero === AutoNumeric.options.leadingZero.allow)) {\n            value = value.replace(/^0*(\\d)/, '$1');\n        }\n\n        return [negativeSign, value];\n    }\n\n    /**\n     * Return `true` if a round up should be done given the last digit, the settings and other information about the value.\n     *\n     * @param {number} lastDigit\n     * @param {object} settings\n     * @param {string} negativeSign This variable comes from `_prepareValueForRounding()`, which return `'-'` if the initial value was negative\n     * @param {number} odd\n     * @returns {boolean}\n     * @private\n     */\n    static _shouldRoundUp(lastDigit, settings, negativeSign, odd) {\n        return (lastDigit > 4 && settings.roundingMethod === AutoNumeric.options.roundingMethod.halfUpSymmetric)                                     || // Round half up symmetric\n            (lastDigit > 4 && settings.roundingMethod === AutoNumeric.options.roundingMethod.halfUpAsymmetric && negativeSign === '')                || // Round half up asymmetric positive values\n            (lastDigit > 5 && settings.roundingMethod === AutoNumeric.options.roundingMethod.halfUpAsymmetric && negativeSign === '-')               || // Round half up asymmetric negative values\n            (lastDigit > 5 && settings.roundingMethod === AutoNumeric.options.roundingMethod.halfDownSymmetric)                                      || // Round half down symmetric\n            (lastDigit > 5 && settings.roundingMethod === AutoNumeric.options.roundingMethod.halfDownAsymmetric && negativeSign === '')              || // Round half down asymmetric positive values\n            (lastDigit > 4 && settings.roundingMethod === AutoNumeric.options.roundingMethod.halfDownAsymmetric && negativeSign === '-')             || // Round half down asymmetric negative values\n            (lastDigit > 5 && settings.roundingMethod === AutoNumeric.options.roundingMethod.halfEvenBankersRounding)                                ||\n            (lastDigit === 5 && settings.roundingMethod === AutoNumeric.options.roundingMethod.halfEvenBankersRounding && odd === 1)                 ||\n            (lastDigit > 0 && settings.roundingMethod === AutoNumeric.options.roundingMethod.toCeilingTowardPositiveInfinity && negativeSign === '') ||\n            (lastDigit > 0 && settings.roundingMethod === AutoNumeric.options.roundingMethod.toFloorTowardNegativeInfinity && negativeSign === '-')  ||\n            (lastDigit > 0 && settings.roundingMethod === AutoNumeric.options.roundingMethod.upRoundAwayFromZero);                                      // Round up away from zero\n    }\n\n    /**\n     * Truncates the decimal part of a number to the given number of decimal places `decimalPlacesToRoundTo`.\n     *\n     * @param {string} value\n     * @param {object} settings\n     * @param {boolean} isPaste\n     * @param {int} decimalPlacesToRoundTo\n     * @returns {*}\n     */\n    static _truncateDecimalPlaces(value, settings, isPaste, decimalPlacesToRoundTo) {\n        if (isPaste) {\n            value = this._roundFormattedValueShownOnFocus(value, settings);\n        }\n\n        const [integerPart, decimalPart] = value.split(settings.decimalCharacter);\n\n        // Truncate the decimal part to the satisfying length since we would round it anyway\n        if (decimalPart && decimalPart.length > decimalPlacesToRoundTo) {\n            if (decimalPlacesToRoundTo > 0) {\n                const modifiedDecimalPart = decimalPart.substring(0, decimalPlacesToRoundTo);\n                value = `${integerPart}${settings.decimalCharacter}${modifiedDecimalPart}`;\n            } else {\n                value = integerPart;\n            }\n        }\n\n        return value;\n    }\n\n    /**\n     * Check if the given value is within the `minimumValue` and `maximumValue` range, while using the override options set with `overrideMinMaxLimits`.\n     * The minimum and maximum limit test results are returned in an array like `[isMinimumLimitRespected, isMaximumLimitRespected]`.\n     *\n     * @param {string} value\n     * @param {object} settings\n     * @returns {[boolean, boolean]}\n     */\n    static _checkIfInRangeWithOverrideOption(value, settings) {\n        if ((AutoNumericHelper.isNull(value) && settings.emptyInputBehavior === AutoNumeric.options.emptyInputBehavior.null) || // When the `null` value is accepted as the `rawValue`, the limits are ignored\n            settings.overrideMinMaxLimits === AutoNumeric.options.overrideMinMaxLimits.ignore ||\n            settings.overrideMinMaxLimits === AutoNumeric.options.overrideMinMaxLimits.invalid) {\n            return [true, true];\n        }\n\n        value = value.toString();\n        value = value.replace(',', '.');\n        const minParse = AutoNumericHelper.parseStr(settings.minimumValue);\n        const maxParse = AutoNumericHelper.parseStr(settings.maximumValue);\n        const valParse = AutoNumericHelper.parseStr(value);\n\n        let result;\n        switch (settings.overrideMinMaxLimits) {\n            case AutoNumeric.options.overrideMinMaxLimits.floor:\n                result = [AutoNumericHelper.testMinMax(minParse, valParse) > -1, true];\n                break;\n            case AutoNumeric.options.overrideMinMaxLimits.ceiling:\n                result = [true, AutoNumericHelper.testMinMax(maxParse, valParse) < 1];\n                break;\n            default:\n                result = [AutoNumericHelper.testMinMax(minParse, valParse) > -1, AutoNumericHelper.testMinMax(maxParse, valParse) < 1];\n        }\n\n        return result;\n    }\n\n    /**\n     * Returns `true` if the given value is within the `minimumValue` and `maximumValue` limits, while using the override options set with `overrideMinMaxLimits`, `false` otherwise\n     *\n     * @param {string} value\n     * @param {object} settings\n     * @returns {boolean}\n     * @private\n     */\n    static _isWithinRangeWithOverrideOption(value, settings) {\n        const [minTest, maxTest] = this._checkIfInRangeWithOverrideOption(value, settings);\n\n        return minTest && maxTest;\n    }\n\n    /**\n     * Helper function that prepares the value string for the min/max test\n     *\n     * @param {string} value\n     * @returns {{}}\n     * @private\n     */\n    static _cleanValueForRangeParse(value) {\n        value = value.toString().replace(',', '.');\n\n        return AutoNumericHelper.parseStr(value);\n    }\n\n    /**\n     * Returns `true` is the value is superior or equal to the `minimumValue` limit, discarding any override options\n     *\n     * @param {string} value\n     * @param {object} settings\n     * @returns {boolean}\n     * @private\n     */\n    static _isMinimumRangeRespected(value, settings) {\n        return AutoNumericHelper.testMinMax(AutoNumericHelper.parseStr(settings.minimumValue), this._cleanValueForRangeParse(value)) > -1;\n    }\n\n    /**\n     * Returns `true` is the value is inferior or equal to the `maximumValue` limit, discarding any override options\n     *\n     * @param {string} value\n     * @param {object} settings\n     * @returns {boolean}\n     * @private\n     */\n    static _isMaximumRangeRespected(value, settings) {\n        return AutoNumericHelper.testMinMax(AutoNumericHelper.parseStr(settings.maximumValue), this._cleanValueForRangeParse(value)) < 1;\n    }\n\n    /**\n     * Helper function that triggers the range events if they are needed\n     *\n     * @param {boolean} minTest\n     * @param {boolean} maxTest\n     * @private\n     */\n    _triggerRangeEvents(minTest, maxTest) {\n        if (!minTest) {\n            this._triggerEvent(AutoNumeric.events.minRangeExceeded, this.domElement);\n        }\n\n        if (!maxTest) {\n            this._triggerEvent(AutoNumeric.events.maxRangeExceeded, this.domElement);\n        }\n    }\n\n    /**\n     * Set the invalid state on the AutoNumeric element.\n     * If the element is not an input, and therefore a contenteditable-enabled element, its validity state cannot be changed.\n     * In that case, the invalid css class defined with the `settings.invalidClass` option is added to the element.\n     * The 'autoNumeric:invalidValue' event is always sent when this function is called.\n     *\n     * @private\n     */\n    _setInvalidState() {\n        if (this.isInputElement) {\n            AutoNumericHelper.setInvalidState(this.domElement);\n        } else {\n            this._addCSSClass(this.settings.invalidClass);\n        }\n\n        this._triggerEvent(AutoNumeric.events.invalidValue, this.domElement);\n        this.validState = false;\n    }\n\n    /**\n     * Set the valid state on the AutoNumeric element.\n     * If the element is not an input, and therefore a contenteditable-enabled element, its validity state cannot be changed.\n     * In that case, the invalid css class defined with the `settings.invalidClass` option is removed.\n     * The 'autoNumeric:correctedValue' event is sent if the element state is invalid when this is called.\n     *\n     * @private\n     */\n    _setValidState() {\n        if (this.isInputElement) {\n            AutoNumericHelper.setValidState(this.domElement);\n        } else {\n            this._removeCSSClass(this.settings.invalidClass);\n        }\n\n        if (!this.validState) {\n            this._triggerEvent(AutoNumeric.events.correctedValue, this.domElement);\n        }\n\n        this.validState = true;\n    }\n\n    /**\n     * Sets the valid or invalid state on the DOM element, if the value is within the range set by the minimum and maximum value\n     *\n     * @param {string} value\n     * @private\n     */\n    _setValidOrInvalidState(value) {\n        if (this.settings.overrideMinMaxLimits === AutoNumeric.options.overrideMinMaxLimits.invalid) {\n            const minRangeOk = this.constructor._isMinimumRangeRespected(value, this.settings);\n            const maxRangeOk = this.constructor._isMaximumRangeRespected(value, this.settings);\n\n            if (minRangeOk && maxRangeOk) {\n                this._setValidState();\n            } else {\n                this._setInvalidState();\n            }\n\n            this._triggerRangeEvents(minRangeOk, maxRangeOk);\n        }\n    }\n\n    /**\n     * Original settings saved for use when the `decimalPlacesShownOnFocus` and `showOnlyNumbersOnFocus` options are used.\n     * Those original settings are used exclusively in the `focusin` and `focusout` event handlers.\n     */\n    _keepAnOriginalSettingsCopy() {\n        this.originalDigitGroupSeparator = this.settings.digitGroupSeparator;\n        this.originalCurrencySymbol      = this.settings.currencySymbol;\n        this.originalSuffixText          = this.settings.suffixText;\n    }\n\n    /**\n     * Removes any zeros in excess in the front and back of the given `value`, according to the `settings`.\n     * This also manages the cases where the decimal point is on the far left or far right of the `value`.\n     *\n     * @param {string} value\n     * @returns {string|null}\n     */\n    _trimLeadingAndTrailingZeros(value) {\n        // Return the empty string is the value is already empty. This prevents converting that value to '0'.\n        if (value === '' || value === null) {\n            return value;\n        }\n\n        if (this.settings.leadingZero !== AutoNumeric.options.leadingZero.keep) {\n            if (Number(value) === 0) {\n                // Return '0' if the value is zero\n                return '0';\n            }\n\n            // Trim the leading zeros, while leaving one zero to the left of the decimal point if needed\n            value = value.replace(/^(-)?0+(?=\\d)/g,'$1');\n        }\n\n        //TODO remove this from that function and use `trimPaddedZerosFromDecimalPlaces()` instead\n        // Trim the trailing zeros after the last decimal place not being a zero (i.e. 1.2300 -> 1.23)\n        if (AutoNumericHelper.contains(value, '.')) {\n            value = value.replace(/(\\.[0-9]*?)0+$/, '$1');\n        }\n\n        // Remove any trailing decimal point\n        value = value.replace(/\\.$/, '');\n\n        return value;\n    }\n\n    /**\n     * Generate the name for the persistent stored data variable\n     * @private\n     */\n    _setPersistentStorageName() {\n        if (this.settings.saveValueToSessionStorage) {\n            if (this.domElement.name !== '' && !AutoNumericHelper.isUndefined(this.domElement.name)) {\n                this.rawValueStorageName = `${this.storageNamePrefix}${decodeURIComponent(this.domElement.name)}`;\n            } else {\n                this.rawValueStorageName = `${this.storageNamePrefix}${this.domElement.id}`;\n            }\n        }\n    }\n\n    /**\n     * Save the raw Value into sessionStorage or a cookie depending on what the browser is supporting.\n     * @private\n     */\n    _saveValueToPersistentStorage() {\n        if (this.settings.saveValueToSessionStorage) {\n            sessionStorage.setItem(this.rawValueStorageName, this.rawValue);\n        }\n    }\n\n    /**\n     * Retrieve the raw value from sessionStorage or the cookie depending on what the browser is supporting.\n     *\n     * @returns {*}\n     * @private\n     */\n    _getValueFromPersistentStorage() {\n        if (this.settings.saveValueToSessionStorage) {\n            return sessionStorage.getItem(this.rawValueStorageName);\n        }\n\n        AutoNumericHelper.warning('`_getValueFromPersistentStorage()` is called but `settings.saveValueToSessionStorage` is false. There must be an error that needs fixing.', this.settings.showWarnings);\n\n        return null;\n    }\n\n    /**\n     * Remove the raw value data from sessionStorage or the cookie depending on what the browser is supporting.\n     * @private\n     */\n    _removeValueFromPersistentStorage() {\n        if (this.settings.saveValueToSessionStorage) {\n            sessionStorage.removeItem(this.rawValueStorageName);\n        }\n    }\n\n    /**\n     * Get the default value from the html `value` attribute.\n     * Return the empty string if such attribute is not found.\n     *\n     * @param {HTMLElement} domElement\n     *\n     * @returns {string}\n     * @private\n     */\n    _getDefaultValue(domElement) {\n        // Get the default html value\n        // Note: we do not use the simpler `return domElement.defaultValue;` code since the given domElement can sometime be a `contenteditable` element which does not support the `defaultValue` attribute.\n        const value = domElement.getAttribute('value');\n\n        if (AutoNumericHelper.isNull(value)) {\n            return '';\n        }\n\n        return value;\n    }\n\n    /**\n     * Handler for 'focusin' and 'mouseenter' events\n     * On focusin, multiple things happens :\n     * - If `Alt` is pressed, unformat\n     * - Remove the separators if `showOnlyNumbersOnFocus` is set\n     * - Depending on `emptyInputBehavior`, reformat the empty formatted value\n     * - Display the correct number of decimal places (on focus/blur)\n     * - Place the caret correctly if the element is empty\n     *\n     * Note: On focusin, the `rawValue` is never changed. Only the formatted value can be modified.\n     *\n     * @param {KeyboardEvent|MouseEvent} e\n     * @private\n     */\n    _onFocusInAndMouseEnter(e) {\n        //TODO Create separate handlers for the focus and mouseenter events\n        this.isEditing = false; // Just in case no `keyUp` event have been sent (i.e. if the user lost the focus from the current window while typing)\n\n        if (!this.formulaMode && this.settings.unformatOnHover && e.type === 'mouseenter' && e.altKey) {\n            this.constructor._unformatAltHovered(this);\n\n            return;\n        }\n\n        if (e.type === 'focus') { //TODO Move that back to the 'focus' event handler when the separation between the 'focus' and 'mouseenter' handler will be done\n            // Keep track if the element is currently focused\n            this.isFocused = true;\n            this.rawValueOnFocus = this.rawValue; // Keep track of the initial rawValue. This is needed to define if a change event must be dispatched later\n        }\n\n        if (e.type === 'focus' && this.settings.unformatOnHover && this.hoveredWithAlt) {\n            this.constructor._reformatAltHovered(this);\n        }\n\n        if (e.type === 'focus' || e.type === 'mouseenter' && !this.isFocused) {\n            let elementValueToSet = null; // Store the value we want to set on the element, and only call `_setElementValue()` once\n\n            if (this.settings.emptyInputBehavior === AutoNumeric.options.emptyInputBehavior.focus &&\n                this.rawValue < 0 && this.settings.negativeBracketsTypeOnBlur !== null && this.settings.isNegativeSignAllowed) { //FIXME this is called a second time in _addGroupSeparators too. Prevent this, if possible.\n                // Only remove the brackets if the value is negative\n                elementValueToSet = this.constructor._removeBrackets(AutoNumericHelper.getElementValue(this.domElement), this.settings);\n                //FIXME The element value is set here, why continue and set it again later in that same parent logic block?\n            }\n\n            // Use the `rawValue`, multiplied by `rawValueDivisor` if defined\n            const rawValueToFormat = this._getRawValueToFormat(this.rawValue);\n\n            // Modify the element value according to the number of decimal places to show on focus or the `showOnlyNumbersOnFocus` option\n            if (rawValueToFormat !== '') {\n                // Round the given value according to the object state (focus/unfocused)\n                const roundedValue = this.constructor._roundFormattedValueShownOnFocusOrBlur(rawValueToFormat, this.settings, this.isFocused);\n\n                if (this.settings.showOnlyNumbersOnFocus === AutoNumeric.options.showOnlyNumbersOnFocus.onlyNumbers) {\n                    //TODO Use a `this.settingsOverride` object instead of modifying the `this.settings` object\n                    this.settings.digitGroupSeparator = '';\n                    this.settings.currencySymbol      = '';\n                    this.settings.suffixText          = '';\n                    elementValueToSet = roundedValue.replace('.', this.settings.decimalCharacter);\n                } else {\n                    let formattedValue;\n                    if (AutoNumericHelper.isNull(roundedValue)) {\n                        formattedValue = '';\n                    } else {\n                        formattedValue = this.constructor._addGroupSeparators(roundedValue.replace('.', this.settings.decimalCharacter), this.settings, this.isFocused, rawValueToFormat);\n                    }\n\n                    elementValueToSet = formattedValue;\n                }\n            }\n\n            // In order to send a 'native' change event when blurring the input, we need to first store the initial input value on focus.\n            if (AutoNumericHelper.isNull(elementValueToSet)) {\n                this.valueOnFocus = '';\n            } else {\n                this.valueOnFocus = elementValueToSet;\n            }\n\n            this.lastVal = this.valueOnFocus;\n            const isEmptyValue = this.constructor._isElementValueEmptyOrOnlyTheNegativeSign(this.valueOnFocus, this.settings);\n            const orderedValue = this.constructor._orderValueCurrencySymbolAndSuffixText(this.valueOnFocus, this.settings, true); // This displays the currency sign on hover even if the rawValue is empty\n            const orderedValueTest = (isEmptyValue && orderedValue !== '') && this.settings.emptyInputBehavior === AutoNumeric.options.emptyInputBehavior.focus;\n            if (orderedValueTest) {\n                elementValueToSet = orderedValue;\n            }\n\n            if (!AutoNumericHelper.isNull(elementValueToSet)) {\n                this._setElementValue(elementValueToSet);\n            }\n\n            if (orderedValueTest && orderedValue === this.settings.currencySymbol && this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.suffix) {\n                // If there is a currency symbol and its on the right hand side, then we place the caret accordingly on the far left side\n                AutoNumericHelper.setElementSelection(e.target, 0);\n            }\n        }\n    }\n\n    /**\n     * Handler for the 'focus' event.\n     * We update the info of the focused state in the `this.isFocused` variable when the element gets focused.\n     * @private\n     */\n    _onFocus() {\n        if (this.settings.isCancellable) {\n            // Save the current unformatted value for later use by the 'cancellable' feature\n            this._saveCancellableValue();\n        }\n    }\n\n    /**\n     * Handler for the 'focusin' event.\n     * This is called before the 'focus' event, and is necessary to change the selection on focus under Firefox for instance.\n     *\n     * @param {Event} e\n     * @private\n     */\n    _onFocusIn(e) {\n        if (this.settings.selectOnFocus) {\n            // The whole input content is selected on focus (following the `selectOnFocus` and `selectNumberOnly` options)\n            //XXX Firefox <47 does not respect this selection...Oh well.\n            this.select();\n        } else {\n            // Or we decide where to put the caret using the `caretPositionOnFocus` option\n            if (!AutoNumericHelper.isNull(this.settings.caretPositionOnFocus)) {\n                AutoNumericHelper.setElementSelection(e.target, this._initialCaretPosition(AutoNumericHelper.getElementValue(this.domElement)));\n            }\n        }\n    }\n\n    /**\n     * Enter the special 'formula mode' where users can enter a math expression that will be evaluated on blur and `enter`\n     * @private\n     */\n    _enterFormulaMode() {\n        if (this.settings.formulaMode) {\n            this.formulaMode = true; // 'Deactivate' the normal event listeners behavior\n            // Clear the input and add a '=' sign to it\n            AutoNumericHelper.setElementValue(this.domElement, '=');\n            // Put the caret after the `=` character\n            AutoNumericHelper.setElementSelection(this.domElement, 1);\n        }\n    }\n\n    /**\n     * Exit the formula mode\n     * Tries to parse and evaluate the math expression, then `set()` the result if it's correct, otherwise reformat with the previous `rawValue`\n     * @private\n     */\n    _exitFormulaMode() {\n        // Parse the formula\n        let formula = AutoNumericHelper.getElementValue(this.domElement);\n        formula     = formula.replace(/^\\s*=/, ''); // Remove all the leading whitespaces and the equal sign from the formula\n        let result;\n        try {\n            const ast = new Parser(formula, this.settings.decimalCharacter);\n            result    = (new Evaluator()).evaluate(ast);\n        } catch (e) {\n            // Error when parsing the math expression\n            this._triggerEvent(AutoNumeric.events.invalidFormula, this.domElement, {\n                formula,\n                aNElement: this,\n            });\n            this.reformat();\n            this.formulaMode = false;\n\n            return;\n        }\n\n        // The math expression is correctly parsed\n        this._triggerEvent(AutoNumeric.events.validFormula, this.domElement, {\n            formula,\n            result,\n            aNElement: this,\n        });\n        this.set(result); // Note: we can have a valid formula, but an invalid value (i.e. out of the min/max range)\n        this.formulaMode = false;\n    }\n\n    /**\n     * Returns `true` if the non-printable key is accepted in formula mode\n     *\n     * @returns {boolean}\n     * @private\n     */\n    _acceptNonPrintableKeysInFormulaMode() {\n        return this.eventKey === AutoNumericEnum.keyName.Backspace || this.eventKey === AutoNumericEnum.keyName.Delete ||\n            this.eventKey === AutoNumericEnum.keyName.LeftArrow || this.eventKey === AutoNumericEnum.keyName.RightArrow ||\n            this.eventKey === AutoNumericEnum.keyName.Home || this.eventKey === AutoNumericEnum.keyName.End;\n    }\n\n    /**\n     * Handler for 'keydown' events.\n     * The user just started pushing any key, hence one event is sent.\n     *\n     * Note :\n     * By default a 'normal' input output those events in the right order when inputting a character key (i.e. 'a') :\n     * - keydown\n     * - keypress\n     * - input\n     * - keyup\n     *\n     * ...when inputting a modifier key (i.e. 'ctrl') :\n     * - keydown\n     * - keyup\n     *\n     * If 'delete' or 'backspace' are entered 'normally', the following events are sent :\n     * - keydown\n     * - input\n     * - keyup\n     *\n     * If 'delete' or 'backspace' are entered continuously (with the key still pressed), the following events are sent :\n     * - keydown\n     * - input\n     * [- keydown\n     * - input] x times\n     * - keyup\n     *\n     * If 'enter' is entered and the value has not changed, the following events are sent :\n     * - keydown\n     * - keypress\n     * - keyup\n     *\n     * If 'enter' is entered and the value has been changed, the following events are sent :\n     * - keydown\n     * - keypress\n     * - change\n     * - keyup\n     *\n     * When a paste is done, the following events are sent :\n     * - input (if paste is done with the mouse)\n     *\n     * - keydown (if paste is done with ctrl+v)\n     * - keydown\n     * - input\n     * - keyup\n     * - keyup\n     *\n     * @param {KeyboardEvent} e\n     */\n    _onKeydown(e) {\n        this.formatted = false; // Keep track if the element has been formatted already. If that's the case, prevent further format calculations.\n        this.isEditing = true; // Keep track if the user is currently editing the element manually\n\n        if (!this.formulaMode && !this.isFocused && this.settings.unformatOnHover && e.altKey && this.domElement === AutoNumericHelper.getHoveredElement()) {\n            // Here I prevent calling _unformatAltHovered if the element is already focused, since the global 'keydown' listener will pick it up as well\n            this.constructor._unformatAltHovered(this);\n\n            return;\n        }\n\n        this._updateEventKeyInfo(e);\n\n        this.keydownEventCounter += 1; // Every time the keydown event is caught, increment the counter to keep track if the key is continuously pressed\n        if (this.keydownEventCounter === 1) {\n            this.initialValueOnFirstKeydown = AutoNumericHelper.getElementValue(e.target); // This is needed in `onKeyup()` to check if the value as changed during the key press\n            this.initialRawValueOnFirstKeydown = this.rawValue;\n        }\n\n        if (this.formulaMode) {\n            if (this.eventKey === AutoNumericEnum.keyName.Esc) { // Cancel the formula\n                this.formulaMode = false;\n                this.reformat();\n\n                return;\n            }\n\n            if (this.eventKey === AutoNumericEnum.keyName.Enter) { // Calculate the formula\n                this._exitFormulaMode();\n\n                return;\n            }\n\n            // Accept the backspace, delete, arrow, home and end keys\n            if (this._acceptNonPrintableKeysInFormulaMode()) {\n                return;\n            }\n\n            //TODO Manage the undo/redo events *while* editing a math expression\n            //TODO Manage the cut/paste events *while* editing a math expression\n        } else {\n            if (this.eventKey === AutoNumericEnum.keyName.Equal) {\n                this._enterFormulaMode();\n\n                return;\n            }\n\n            if (this.settings.modifyValueOnUpDownArrow &&\n                (this.eventKey === AutoNumericEnum.keyName.UpArrow || this.eventKey === AutoNumericEnum.keyName.DownArrow)) {\n                this.upDownArrowAction(e);\n\n                return;\n            }\n        }\n\n        if (this.domElement.readOnly || this.settings.readOnly || this.domElement.disabled) {\n            this.processed = true;\n\n            return;\n        }\n\n        if (this.eventKey === AutoNumericEnum.keyName.Esc) {\n            //XXX The default 'Escape' key behavior differs between Firefox and Chrome, Firefox already having a built-in 'cancellable-like' feature. This is why we call `e.preventDefault()` here instead of just when `isCancellable` is set to `true`. This allow us to keep the same behavior across browsers.\n            e.preventDefault();\n\n            if (this.settings.isCancellable) {\n                // If the user wants to cancel his modifications:\n                // We set back the saved value\n                if (this.rawValue !== this.savedCancellableValue) {\n                    // Do not set the value again if it has not changed\n                    this.set(this.savedCancellableValue);\n                    // And we need to send an 'input' event when setting back the initial value in order to make other scripts aware of the value change...\n                    this._triggerEvent(AutoNumeric.events.native.input, e.target);\n                }\n            }\n\n            // ...and lastly we update the caret selection, even if the option `isCancellable` is false\n            this.select();\n            //TODO Add an option to select either the integer or decimal part with `Esc`\n        }\n\n        // The \"enter\" key throws a `change` event if the raw value has changed since the `focus` event\n        let targetValue = AutoNumericHelper.getElementValue(e.target);\n        if (this.eventKey === AutoNumericEnum.keyName.Enter && this.rawValue !== this.rawValueOnFocus) {\n            this._triggerEvent(AutoNumeric.events.native.change, e.target);\n            this.valueOnFocus = targetValue;\n            this.rawValueOnFocus = this.rawValue;\n\n            if (this.settings.isCancellable) {\n                // If the user activated the 'cancellable' feature, we save the validated value when 'Enter' is hit\n                this._saveCancellableValue();\n            }\n        }\n\n        this._updateInternalProperties(e);\n\n        if (this._processNonPrintableKeysAndShortcuts(e)) {\n            this.processed = true;\n\n            return;\n        }\n\n        // Check if the key is a delete/backspace key\n        if (this.eventKey === AutoNumericEnum.keyName.Backspace || this.eventKey === AutoNumericEnum.keyName.Delete) {\n            const isDeletionAllowed = this._processCharacterDeletion(e); // Because backspace and delete only triggers keydown and keyup events, not keypress\n            this.processed = true;\n            if (!isDeletionAllowed) {\n                // Prevent the deletion if `overrideMinMaxLimits` option is `doNotOverride` and the result goes out of the allowed range\n                e.preventDefault();\n\n                return;\n            }\n\n            this._formatValue(e);\n\n            // If and only if the resulting value has changed after that backspace/delete, then we have to send an 'input' event like browsers normally do.\n            targetValue = AutoNumericHelper.getElementValue(e.target); // Update the value since it could have been changed during the deletion\n            if ((targetValue !== this.lastVal) && this.throwInput) {\n                // Throw an input event when a character deletion is detected\n                this._triggerEvent(AutoNumeric.events.native.input, e.target);\n                e.preventDefault(); // ...and immediately prevent the browser to delete a second character\n            }\n\n            this.lastVal = targetValue;\n            this.throwInput = true;\n        }\n    }\n\n    /**\n     * Handler for 'keypress' events.\n     * The user is still pressing the key, which will output a character (i.e. '2') continuously until he releases the key.\n     * Note: 'keypress' events are not sent for delete keys like Backspace/Delete.\n     *\n     * @param {KeyboardEvent} e\n     */\n    _onKeypress(e) {\n        if (this.formulaMode) {\n            // Accept the backspace, delete, arrow, home and end keys\n            if (this._acceptNonPrintableKeysInFormulaMode()) {\n                return;\n            }\n\n            //TODO Prevent keys to be entered on the left-hand side of the '=' sign?...Or just let the user see what they are wrongly doing?\n            if (this.settings.formulaChars.test(this.eventKey)) { // Accept the custom decimal character too\n                return; // Accept the key in the formula (and do not accept the '=' character here again)\n            } else {\n                e.preventDefault(); // Reject the key\n            }\n\n            return;\n        }\n\n        if (this.eventKey === AutoNumericEnum.keyName.Insert) {\n            return;\n        }\n\n        const processed = this.processed;\n        this._updateInternalProperties(e);\n\n        if (this._processNonPrintableKeysAndShortcuts(e)) {\n            return;\n        }\n\n        if (processed) {\n            e.preventDefault();\n\n            return;\n        }\n\n        const isCharacterInsertionAllowed = this._processCharacterInsertion();\n        if (isCharacterInsertionAllowed) {\n            this._formatValue(e);\n            const targetValue = AutoNumericHelper.getElementValue(e.target);\n            if ((targetValue !== this.lastVal) && this.throwInput) {\n                // Throws input event on adding a character\n                this._triggerEvent(AutoNumeric.events.native.input, e.target);\n                e.preventDefault(); // ...and immediately prevent the browser to add a second character\n            } else {\n                if ((this.eventKey === this.settings.decimalCharacter || this.eventKey === this.settings.decimalCharacterAlternative) &&\n                    (AutoNumericHelper.getElementSelection(e.target).start === AutoNumericHelper.getElementSelection(e.target).end) &&\n                    AutoNumericHelper.getElementSelection(e.target).start === targetValue.indexOf(this.settings.decimalCharacter)) {\n                    const position = AutoNumericHelper.getElementSelection(e.target).start + 1;\n                    AutoNumericHelper.setElementSelection(e.target, position);\n                }\n\n                e.preventDefault();\n            }\n\n            this.lastVal = AutoNumericHelper.getElementValue(e.target);\n            this.throwInput = true;\n\n            this._setValidOrInvalidState(this.rawValue); // Updates the valid state as soon as the number is entered (in the case where the user keeps pressing the number key)\n\n            return;\n        }\n\n        e.preventDefault();\n    }\n\n    /**\n     * Handler for 'keyup' events.\n     * The user just released any key, hence one event is sent.\n     *\n     * @param {KeyboardEvent} e\n     */\n    _onKeyup(e) {\n        this.isEditing = false;\n        this.keydownEventCounter = 0; // Reset the keydown events counter\n\n        if (this.formulaMode) {\n            return;\n        }\n\n        if (this.settings.isCancellable && this.eventKey === AutoNumericEnum.keyName.Esc) {\n            // If the user wants to cancel its modifications, we drop the 'keyup' event for the Esc key\n            e.preventDefault();\n\n            return;\n        }\n\n        // Manage the undo/redo events\n        this._updateEventKeyInfo(e); // Fixes #761, where the Ctrl key is not correctly detected during undo/redo since this.eventKey was not updated from 'Z' to 'Control'\n        if (this.eventKey === AutoNumericEnum.keyName.Z || this.eventKey === AutoNumericEnum.keyName.z) {\n            if (e.ctrlKey && e.shiftKey) {\n                // Redo\n                e.preventDefault();\n                this._historyTableRedo();\n                this._triggerEvent(AutoNumeric.events.native.input, e.target); //TODO instead of adding the event here, generate it from the `_historyTableRedo()` function?\n                this.onGoingRedo = true;\n\n                return;\n            } else if (e.ctrlKey && !e.shiftKey) {\n                if (this.onGoingRedo) {\n                    // Prevent an 'undo' to be launched when releasing the shift key before the ctrl key after a 'redo' shortcut\n                    this.onGoingRedo = false;\n                } else {\n                    e.preventDefault();\n                    // Undo\n                    this._historyTableUndo();\n                    this._triggerEvent(AutoNumeric.events.native.input, e.target); //TODO instead of adding the event here, generate it from the `_historyTableRedo()` function?\n\n                    return;\n                }\n            }\n        } else if ((this.eventKey === AutoNumericEnum.keyName.Y || this.eventKey === AutoNumericEnum.keyName.y) && e.ctrlKey) {\n            // Redo\n            e.preventDefault();\n            this._historyTableRedo();\n            this._triggerEvent(AutoNumeric.events.native.input, e.target); //TODO instead of adding the event here, generate it from the `_historyTableRedo()` function?\n            this.onGoingRedo = true;\n\n            return;\n        }\n\n        if (this.onGoingRedo && (e.ctrlKey || e.shiftKey)) {\n            // Special case where if the user has entered `Control+Shift+z`, then release `z`, keeping `Control` or `Shift` pressed, then `this.onGoingRedo` is never changed back to `false` when the user release `Control` or `Shift`\n            this.onGoingRedo = false;\n        }\n\n        // Manage the Cut event\n        if ((e.ctrlKey || e.metaKey) && (this.eventKey === AutoNumericEnum.keyName.X || this.eventKey === AutoNumericEnum.keyName.x)) {\n            // Save the caret position at the start of the selection\n            const caretPosition = AutoNumericHelper.getElementSelection(this.domElement).start;\n            // Convert the remaining 'formatted' numbers in a Js number\n            const cutNumber = this.constructor._toNumericValue(AutoNumericHelper.getElementValue(e.target), this.settings);\n            // Try to set that value with `set()`\n            this.set(cutNumber);\n            // Set back the initial caret position\n            this._setCaretPosition(caretPosition);\n        }\n\n        // Manage the reformat when hovered with the Alt key pressed\n        if (this.eventKey === AutoNumericEnum.keyName.Alt && this.settings.unformatOnHover && this.hoveredWithAlt) {\n            this.constructor._reformatAltHovered(this);\n\n            return;\n        }\n\n        // Manage the Backspace and Delete keys when used in combination with the control key (fix #656)\n        if ((e.ctrlKey || e.metaKey) && (this.eventKey === AutoNumericEnum.keyName.Backspace || this.eventKey === AutoNumericEnum.keyName.Delete)) {\n            const targetValue = AutoNumericHelper.getElementValue(e.target);\n            this._setRawValue(this._formatOrUnformatOther(false, targetValue));\n\n            return;\n        }\n\n        this._updateInternalProperties(e);\n\n        const skip = this._processNonPrintableKeysAndShortcuts(e);\n        delete this.valuePartsBeforePaste;\n        const targetValue = AutoNumericHelper.getElementValue(e.target);\n        if (skip || targetValue === '' && this.initialValueOnFirstKeydown === '') { // If the user enters skippable keys, or keeps deleting/backspacing into the empty input, no 'formatted' event are sent (cf. issue #621)\n            return;\n        }\n\n        // Added to properly place the caret when only the currency sign is present\n        if (targetValue === this.settings.currencySymbol) {\n            if (this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.suffix) {\n                AutoNumericHelper.setElementSelection(e.target, 0);\n            } else {\n                AutoNumericHelper.setElementSelection(e.target, this.settings.currencySymbol.length);\n            }\n        } else if (this.eventKey === AutoNumericEnum.keyName.Tab) {\n            AutoNumericHelper.setElementSelection(e.target, 0, targetValue.length);\n        }\n\n        if ((targetValue === this.settings.suffixText) ||\n            (this.rawValue === '' && this.settings.currencySymbol !== '' && this.settings.suffixText !== '')) {\n            AutoNumericHelper.setElementSelection(e.target, 0);\n        }\n\n        // Saves the extended decimal to preserve the data when navigating away from the page\n        if (this.settings.decimalPlacesShownOnFocus !== null) {\n            this._saveValueToPersistentStorage();\n        }\n\n        if (!this.formatted) {  //TODO Is this line needed? Considering that onKeydown and onKeypress both finish by setting it to false...\n            this._formatValue(e);\n        }\n\n        this._setValidOrInvalidState(this.rawValue);\n\n        // Force the `rawValue` update on Android Chrome\n        this._saveRawValueForAndroid();\n\n        // If the input value has changed during the key press event chain, an event is sent to alert that a formatting has been done (cf. Issue #187)\n        if (targetValue !== this.initialValueOnFirstKeydown) { // Checking the value that were saved after the very first keydown event ensure that the 'formatted' event will be sent even if the user continuously press the Delete/Backspace key\n            this._triggerEvent(AutoNumeric.events.formatted, e.target, {\n                oldValue   : this.initialValueOnFirstKeydown,\n                newValue   : targetValue,\n                oldRawValue: this.initialRawValueOnFirstKeydown,\n                newRawValue: this.rawValue,\n                isPristine : this.isPristine(false),\n                error      : null,\n                aNElement  : this,\n            });\n        }\n\n        // Update the selection of the current element of the history table\n        if (this.historyTable.length > 1) {\n            const selection = AutoNumericHelper.getElementSelection(this.domElement);\n            this.selectionStart = selection.start;\n            this.selectionEnd = selection.end;\n            this.historyTable[this.historyTableIndex].start = this.selectionStart;\n            this.historyTable[this.historyTableIndex].end = this.selectionEnd;\n        }\n    }\n\n    /**\n     * On Android Chrome, the `rawValue` is not updated when the user changes the input value.\n     * This function updates the `rawValue` accordingly.\n     * @private\n     */\n    _saveRawValueForAndroid() {\n        if (this.eventKey === AutoNumericEnum.keyName.AndroidDefault) {\n            let normalizedValue = this.constructor._stripAllNonNumberCharactersExceptCustomDecimalChar(this.getFormatted(), this.settings, true, this.isFocused);\n            normalizedValue = this.constructor._convertToNumericString(normalizedValue, this.settings);\n\n            this._setRawValue(normalizedValue);\n        }\n    }\n\n    /**\n     * Handler for 'focusout' events\n     * On focusout, multiple things happens :\n     * - The element value is formatted back if the `Alt` key was pressed,\n     * - The element value is formatted back if `showOnlyNumbersOnFocus` was set to only show numbers,\n     * - The element value is multiplied by `rawValueDivisor` on `blur`\n     *\n     * Note: On focusout, the `rawValue` is never changed. Only the formatted value can be modified.\n     *\n     * @param {Event} e\n     */\n    _onFocusOutAndMouseLeave(e) {\n        //TODO Create separate handlers for blur and mouseleave\n        this.isEditing = false; // Just in case no `keyUp` event have been sent (if the user lost the focus on the window while typing)\n\n        if (e.type === 'mouseleave' && this.formulaMode) {\n            return;\n        }\n\n        //FIXME Do not call `set()` if the current raw value is the same as the one we are trying to set (currently, on focus out, `set()` is always called, even if the value has not changed\n        if (this.settings.unformatOnHover && e.type === 'mouseleave' && this.hoveredWithAlt) {\n            this.constructor._reformatAltHovered(this);\n\n            return;\n        }\n\n        if ((e.type === 'mouseleave' && !this.isFocused) || e.type === 'blur') {\n            if (e.type === 'blur' && this.formulaMode) {\n                this._exitFormulaMode();\n            }\n\n            this._saveValueToPersistentStorage();\n            if (this.settings.showOnlyNumbersOnFocus === AutoNumeric.options.showOnlyNumbersOnFocus.onlyNumbers) {\n                this.settings.digitGroupSeparator = this.originalDigitGroupSeparator;\n                this.settings.currencySymbol = this.originalCurrencySymbol;\n                this.settings.suffixText = this.originalSuffixText;\n            }\n\n            // Use the rawValue, multiplied by `rawValueDivisor` if defined\n            const rawValueToFormat = this._getRawValueToFormat(this.rawValue);\n            const isRawValueNull = AutoNumericHelper.isNull(rawValueToFormat);\n            const [minTest, maxTest] = this.constructor._checkIfInRangeWithOverrideOption(rawValueToFormat, this.settings);\n\n            // Directly set the formatted value if the `rawValue` is found in `valuesToStrings`\n            let elementValueIsAlreadySet = false;\n            if (rawValueToFormat !== '' && !isRawValueNull) {\n                this._triggerRangeEvents(minTest, maxTest);\n\n                if (this.settings.valuesToStrings && this._checkValuesToStrings(rawValueToFormat)) {\n                    // Set the formatted value with the corresponding string\n                    this._setElementValue(this.settings.valuesToStrings[rawValueToFormat]);\n                    elementValueIsAlreadySet = true;\n                }\n            }\n\n            // Only generate the formatted value if no `valuesToStrings` have been found\n            if (!elementValueIsAlreadySet) {\n                let value;\n                if (isRawValueNull || rawValueToFormat === '') {\n                    value = rawValueToFormat;\n                } else {\n                    value = String(rawValueToFormat);\n                }\n\n                if (rawValueToFormat !== '' && !isRawValueNull) {\n                    if (minTest && maxTest && !this.constructor._isElementValueEmptyOrOnlyTheNegativeSign(rawValueToFormat, this.settings)) {\n                        value = this._modifyNegativeSignAndDecimalCharacterForRawValue(value);\n\n                        if (this.settings.divisorWhenUnfocused && !AutoNumericHelper.isNull(value)) {\n                            value = value / this.settings.divisorWhenUnfocused;\n                            value = value.toString();\n                        }\n\n                        value = this.constructor._roundFormattedValueShownOnBlur(value, this.settings);\n                        value = this.constructor._modifyNegativeSignAndDecimalCharacterForFormattedValue(value, this.settings);\n                    } else {\n                        this._triggerRangeEvents(minTest, maxTest);\n                    }\n                } else if (rawValueToFormat === '') {\n                    switch (this.settings.emptyInputBehavior) {\n                        case AutoNumeric.options.emptyInputBehavior.zero:\n                            this._setRawValue('0');\n                            value = this.constructor._roundValue('0', this.settings, 0); \n                            break;\n                        case AutoNumeric.options.emptyInputBehavior.min:\n                            this._setRawValue(this.settings.minimumValue);\n                            value = this.constructor._roundFormattedValueShownOnFocusOrBlur(this.settings.minimumValue, this.settings, this.isFocused); \n                            break;\n                        case AutoNumeric.options.emptyInputBehavior.max:\n                            this._setRawValue(this.settings.maximumValue);\n                            value = this.constructor._roundFormattedValueShownOnFocusOrBlur(this.settings.maximumValue, this.settings, this.isFocused); \n                            break;\n                        default:\n                            if (AutoNumericHelper.isNumber(this.settings.emptyInputBehavior)) {\n                                this._setRawValue(this.settings.emptyInputBehavior);\n                                value = this.constructor._roundFormattedValueShownOnFocusOrBlur(this.settings.emptyInputBehavior, this.settings, this.isFocused);\n                            }\n                    }\n                }\n\n                let groupedValue = this.constructor._orderValueCurrencySymbolAndSuffixText(value, this.settings, false);\n                if (!(this.constructor._isElementValueEmptyOrOnlyTheNegativeSign(value, this.settings) ||\n                        (isRawValueNull && this.settings.emptyInputBehavior === AutoNumeric.options.emptyInputBehavior.null))) {\n                    groupedValue = this.constructor._addGroupSeparators(value, this.settings, false, rawValueToFormat);\n                }\n\n                // Testing for `allowDecimalPadding.never` or `allowDecimalPadding.floats` is needed to make sure we do not keep a trailing decimalCharacter (like '500.') in the element, since the raw value would still be a correctly formatted integer ('500')\n                if (groupedValue !== rawValueToFormat ||\n                    rawValueToFormat === '' || // This make sure we get rid on any currency symbol or suffix that might have been added on focus\n                    this.settings.allowDecimalPadding === AutoNumeric.options.allowDecimalPadding.never ||\n                    this.settings.allowDecimalPadding === AutoNumeric.options.allowDecimalPadding.floats) {\n                    if (this.settings.symbolWhenUnfocused && rawValueToFormat !== '' && rawValueToFormat !== null) {\n                        groupedValue = `${groupedValue}${this.settings.symbolWhenUnfocused}`;\n                    }\n\n                    this._setElementValue(groupedValue);\n                }\n            }\n\n            this._setValidOrInvalidState(this.rawValue);\n\n            if (e.type === 'blur') {\n                //TODO Create separate handlers for blur and mouseleave, really.\n                this._onBlur(e);\n            }\n        }\n    }\n\n    /**\n     * Handler for 'paste' event\n     *\n     * @param {Event|ClipboardEvent} e\n     */\n    _onPaste(e) {\n        //FIXME When pasting '000' on a thousand group selection, the whole selection gets deleted, and only one '0' is pasted (cf. issue #302)\n        // The event is prevented by default, since otherwise the user would be able to paste invalid characters into the input\n        e.preventDefault();\n\n        if (this.settings.readOnly || this.domElement.readOnly || this.domElement.disabled) {\n            // Do not allow pasting in a readonly element (fix issue #505)\n            return;\n        }\n\n        let rawPastedText;\n        if (e.clipboardData && e.clipboardData.getData) {\n            rawPastedText = e.clipboardData.getData('text/plain');\n        } else {\n            AutoNumericHelper.throwError('Unable to retrieve the pasted value. Please use a modern browser (i.e. Firefox or Chromium).');\n        }\n\n        // Fix for firefox paste handling on `contenteditable` elements where `e.target` is the text node, not the element\n        let eventTarget;\n        if (!e.target.tagName) {\n            eventTarget = e.explicitOriginalTarget;\n        } else {\n            eventTarget = e.target;\n        }\n\n        // 0. Special case if the user has selected all the input text before pasting\n        const initialFormattedValue = AutoNumericHelper.getElementValue(eventTarget);\n        const selectionStart = eventTarget.selectionStart || 0;\n        const selectionEnd = eventTarget.selectionEnd || 0;\n        const selectionSize = selectionEnd - selectionStart;\n\n        if (selectionSize === initialFormattedValue.length) { // If all the element text is selected\n            //TODO Refactor this with the tests below\n            // Since the whole element content will be replaced, no need to complicate things and directly test for the validity of the pasted content, then set the `rawValue` and caret position (fix issue #482)\n            // 1. Strip all thousand separators, brackets and currency sign, and convert the decimal character to a dot\n            const untranslatedPastedText = this._preparePastedText(rawPastedText);\n            const pastedRawValue = AutoNumericHelper.arabicToLatinNumbers(untranslatedPastedText, false, false, false); // Allow pasting arabic numbers\n\n            // 2. Check that the paste is a valid number once it has been normalized to a raw value\n            if (pastedRawValue === '.' || pastedRawValue === '' || (pastedRawValue !== '.' && !AutoNumericHelper.isNumber(pastedRawValue))) {\n                this.formatted = true; // This prevents the `keyup` event on the `v` key during a paste to try to format an empty value.\n                // If the user tries to paste a single decimal character (that has been translated to '.' already) or the empty value, ignore the paste\n                if (this.settings.onInvalidPaste === AutoNumeric.options.onInvalidPaste.error) {\n                    AutoNumericHelper.throwError(`The pasted value '${rawPastedText}' is not a valid paste content.`);\n                }\n\n                return;\n            }\n\n            // 3. Then try to set it as the new value. The `set()` method will run the additional tests (i.e. limits) as needed.\n            this.set(pastedRawValue);\n            this.formatted = true;\n\n            // 4. On a 'normal' non-autoNumeric input, an `input` event is sent when a paste is done. We mimic that.\n            this._triggerEvent(AutoNumeric.events.native.input, eventTarget);\n\n            // 5. Return since the job is done\n            return;\n        }\n\n        // 1. Check if the paste has a negative sign (only if it's the first character), and store that information for later use\n        const isPasteNegative = AutoNumericHelper.isNegativeStrict(rawPastedText, this.settings.negativeSignCharacter);\n        if (isPasteNegative) {\n            // 1a. Remove the negative sign from the pasted text\n            rawPastedText = rawPastedText.slice(1, rawPastedText.length); //TODO This can lead to an empty rawPastedText if only the negative sign character is pasted. This then complains about not being a valid paste content. Define which behaviour we want when this happens, then implement the solution.\n        }\n\n        // 2. Strip all thousand separators, brackets and currency sign, and convert the decimal character to a dot\n        const untranslatedPastedText = this._preparePastedText(rawPastedText);\n\n        let pastedText;\n        if (untranslatedPastedText === '.') {\n            // Special case : If the user tries to paste a single decimal character (that has been translated to '.' already)\n            pastedText = '.';\n        } else {\n            // Normal case\n            // Allow pasting arabic numbers\n            pastedText = AutoNumericHelper.arabicToLatinNumbers(untranslatedPastedText, false, false, false);\n        }\n\n        // 3. Test if the paste is valid (only has numbers and eventually a decimal character). If it's not valid, stop here.\n        if (pastedText !== '.' && (!AutoNumericHelper.isNumber(pastedText) || pastedText === '')) {\n            this.formatted = true; // This prevents the `keyup` event on the `v` key during a paste to try to format an empty value (fix issue #484)\n            if (this.settings.onInvalidPaste === AutoNumeric.options.onInvalidPaste.error) {\n                AutoNumericHelper.throwError(`The pasted value '${rawPastedText}' is not a valid paste content.`);\n            }\n\n            return;\n        }\n\n        // 4. Calculate the paste result\n        let caretPositionOnInitialTextAfterPasting;\n        let isInitialValueNegative = AutoNumericHelper.isNegativeStrict(this.getNumericString(), this.settings.negativeSignCharacter);\n        let isPasteNegativeAndInitialValueIsPositive;\n        let result;\n\n        // If the pasted content is negative, then the result will be negative too\n        if (isPasteNegative && !isInitialValueNegative) {\n            isInitialValueNegative = true;\n            isPasteNegativeAndInitialValueIsPositive = true;\n        }\n        else {\n            isPasteNegativeAndInitialValueIsPositive = false;\n        }\n\n        // 1. Generate the unformatted result\n        const leftFormattedPart  = initialFormattedValue.slice(0, selectionStart);\n        const rightFormattedPart = initialFormattedValue.slice(selectionEnd, initialFormattedValue.length);\n\n        if (selectionStart !== selectionEnd) {\n            // a. If there is a selection, remove the selected part, and return the left and right part\n            result = this._preparePastedText(leftFormattedPart + rightFormattedPart);\n        } else {\n            // b. Else if this is only one caret (and therefore no selection), then return the left and right part\n            result = this._preparePastedText(initialFormattedValue);\n        }\n\n        // Add back the negative sign if needed\n        if (isInitialValueNegative) {\n            result = AutoNumericHelper.setRawNegativeSign(result);\n        }\n\n        // Build the unformatted result string\n        caretPositionOnInitialTextAfterPasting = AutoNumericHelper.convertCharacterCountToIndexPosition(AutoNumericHelper.countNumberCharactersOnTheCaretLeftSide(initialFormattedValue, selectionStart, this.settings.decimalCharacter));\n        if (isPasteNegativeAndInitialValueIsPositive) {\n            // If the initial paste is negative and the initial value is not, then I must offset the caret position by one place to the right to take the additional hyphen into account\n            caretPositionOnInitialTextAfterPasting++;\n            //TODO Quid if the negative sign is not on the left (negativePositiveSignPlacement and currencySymbolPlacement)?\n            //TODO Quid if the positive sign is shown?\n        }\n\n        let leftPart  = result.slice(0, caretPositionOnInitialTextAfterPasting);\n        let rightPart = result.slice(caretPositionOnInitialTextAfterPasting, result.length);\n        let leftPartContainedADot = false;\n        if (pastedText === '.') {\n            if (AutoNumericHelper.contains(leftPart, '.')) {\n                // If I remove a dot here, then I need to update the caret position (decrement it by 1) when positioning it\n                // To do so, we keep that info in order to modify the caret position later\n                leftPartContainedADot = true;\n                leftPart              = leftPart.replace('.', '');\n            }\n\n            rightPart = rightPart.replace('.', '');\n        }\n\n        // Manage the case where a negative number is pasted onto another negative number that is entirely selected (cf. issue #593)\n        let negativePasteOnNegativeNumber = false;\n        if (leftPart === '' && rightPart === '-') {\n            leftPart = '-';\n            rightPart = '';\n            // When pasting a negative number on a negative number, we need to offset the caret position one place to the right to take into account the negative sign\n            negativePasteOnNegativeNumber = true;\n        }\n\n        // -- Here, we are good to go to continue on the same basis for each value of the `onInvalidPaste` option\n\n        switch (this.settings.onInvalidPaste) {\n            /* 4a. Truncate paste behavior:\n             * Insert as many numbers as possible on the right hand side of the caret from the pasted text content, until the input reach its range limit.\n             * If there is more characters in the clipboard once a limit is reached, drop the extraneous characters.\n             * Otherwise paste all the numbers from the clipboard.\n             * While doing so, we check if the result is within the minimum and maximum values allowed, and stop as soon as we encounter one of those.\n             *\n             * 4b. Replace paste behavior:\n             * Idem than the 'truncate' paste behavior, except that when a range limit is hit, we try to replace the subsequent initial numbers with the pasted ones, until we hit the range limit a second (and last) time, or we run out of numbers to paste\n             */\n            /* eslint no-case-declarations: 0 */\n            case AutoNumeric.options.onInvalidPaste.truncate:\n            case AutoNumeric.options.onInvalidPaste.replace:\n                // c. Add numbers one by one at the caret position, while testing if the result is valid and within the range of the minimum and maximum value\n                //    Continue until you either run out of numbers to paste, or that you get out of the range limits\n                const minParse = AutoNumericHelper.parseStr(this.settings.minimumValue);\n                const maxParse = AutoNumericHelper.parseStr(this.settings.maximumValue);\n                let lastGoodKnownResult = result; // This is set as the default, in case we do not add even one number\n                let pastedTextIndex = 0;\n                let modifiedLeftPart = leftPart;\n\n                while (pastedTextIndex < pastedText.length) {\n                    // Modify the result with another pasted character\n                    modifiedLeftPart += pastedText[pastedTextIndex];\n                    result = modifiedLeftPart + rightPart;\n\n                    // Check the range limits\n                    if (!this.constructor._checkIfInRange(result, minParse, maxParse)) {\n                        // The result is out of the range limits, stop the loop here\n                        break;\n                    }\n\n                    // Save the last good known result\n                    lastGoodKnownResult = result;\n\n                    // Update the local variables for the next loop\n                    pastedTextIndex++;\n                }\n\n                // Update the last caret position where to insert a new number\n                caretPositionOnInitialTextAfterPasting += pastedTextIndex;\n                if (negativePasteOnNegativeNumber) caretPositionOnInitialTextAfterPasting++;\n\n                //XXX Here we have the result for the `truncate` option\n                if (this.settings.onInvalidPaste === AutoNumeric.options.onInvalidPaste.truncate) {\n                    //TODO If the user as defined a truncate callback and there are still some numbers (that will be dropped), then call this callback with the initial paste as well as the remaining numbers\n                    result = lastGoodKnownResult;\n\n                    if (leftPartContainedADot) {\n                        // If a dot has been removed for the part on the left of the caret, we decrement the caret index position\n                        caretPositionOnInitialTextAfterPasting--;\n                    }\n                    break;\n                }\n                //XXX ...else we need to continue modifying the result for the 'replace' option\n\n                // d. Until there are numbers to paste, replace the initial numbers one by one, and still do the range test.\n                //    Stop when you have no more numbers to paste, or if you are out of the range limits.\n                //    If you do get to the range limits, use the previous known good value within those limits.\n                //    Note: The numbers are replaced one by one, in the integer then decimal part, while ignoring the decimal character\n                //TODO What should happen if the user try to paste a decimal number? Should we override the current initial decimal character in favor of this new one? If we do, then we have to recalculate the vMin/vMax from the start in order to take into account this new decimal character position..\n                let lastGoodKnownResultIndex = caretPositionOnInitialTextAfterPasting;\n                const lastGoodKnownResultSize = lastGoodKnownResult.length;\n\n                while (pastedTextIndex < pastedText.length && lastGoodKnownResultIndex < lastGoodKnownResultSize) {\n                    if (lastGoodKnownResult[lastGoodKnownResultIndex] === '.') {\n                        // We skip the decimal character 'replacement'. That way, we do not change the decimal character position regarding the remaining numbers.\n                        lastGoodKnownResultIndex++;\n                        continue;\n                    }\n\n                    // This replaces one character at a time\n                    result = AutoNumericHelper.replaceCharAt(lastGoodKnownResult, lastGoodKnownResultIndex, pastedText[pastedTextIndex]);\n\n                    // Check the range limits\n                    if (!this.constructor._checkIfInRange(result, minParse, maxParse)) {\n                        // The result is out of the range limits, stop the loop here\n                        break;\n                    }\n\n                    // Save the last good known result\n                    lastGoodKnownResult = result;\n\n                    // Update the local variables for the next loop\n                    pastedTextIndex++;\n                    lastGoodKnownResultIndex++;\n                }\n\n                // Update the last caret position where to insert a new number\n                caretPositionOnInitialTextAfterPasting = lastGoodKnownResultIndex;\n\n                if (leftPartContainedADot) {\n                    // If a dot has been removed for the part on the left of the caret, we decrement the caret index position\n                    caretPositionOnInitialTextAfterPasting--;\n                }\n\n                result = lastGoodKnownResult;\n\n                break;\n            /* 4c. Normal paste behavior:\n             * Insert the pasted number inside the current unformatted text, at the correct caret position or selection\n             */\n            case AutoNumeric.options.onInvalidPaste.error:\n            case AutoNumeric.options.onInvalidPaste.ignore:\n            case AutoNumeric.options.onInvalidPaste.clamp:\n            default:\n                // Generate the unformatted result\n                result = `${leftPart}${pastedText}${rightPart}`;\n\n                // 2. Calculate the caret position in the unformatted value, for later use\n                if (selectionStart === selectionEnd) {\n                    // There is no selection, then the caret position is set after the pasted text\n                    const indexWherePastedTextHasBeenInserted = AutoNumericHelper.convertCharacterCountToIndexPosition(AutoNumericHelper.countNumberCharactersOnTheCaretLeftSide(initialFormattedValue, selectionStart, this.settings.decimalCharacter));\n                    caretPositionOnInitialTextAfterPasting = indexWherePastedTextHasBeenInserted + pastedText.length; // I must not count the characters that have been removed from the pasted text (i.e. '.')\n                } else if (rightPart === '') {\n                    // If the user selected from the caret position to the end of the input (on the far right)\n                    caretPositionOnInitialTextAfterPasting = AutoNumericHelper.convertCharacterCountToIndexPosition(AutoNumericHelper.countNumberCharactersOnTheCaretLeftSide(initialFormattedValue, selectionStart, this.settings.decimalCharacter)) + pastedText.length;\n                    if (negativePasteOnNegativeNumber) caretPositionOnInitialTextAfterPasting++;\n                } else {\n                    // Usual case\n                    const indexSelectionEndInRawValue = AutoNumericHelper.convertCharacterCountToIndexPosition(AutoNumericHelper.countNumberCharactersOnTheCaretLeftSide(initialFormattedValue, selectionEnd, this.settings.decimalCharacter));\n\n                    // Here I must not count the characters that have been removed from the pasted text (i.e. '.'), or the thousand separators in the initial selected text\n                    const selectedText = AutoNumericHelper.getElementValue(eventTarget).slice(selectionStart, selectionEnd);\n                    caretPositionOnInitialTextAfterPasting = indexSelectionEndInRawValue - selectionSize + AutoNumericHelper.countCharInText(this.settings.digitGroupSeparator, selectedText) + pastedText.length;\n                }\n\n                // Modify the caret position for special cases, only if the whole input has not been selected\n                if (isPasteNegativeAndInitialValueIsPositive) {\n                    // If the pasted value has a negative sign ('-'), but the initial value does not, offset the index by one\n                    caretPositionOnInitialTextAfterPasting++;\n                }\n\n                if (leftPartContainedADot) {\n                    // If a dot has been removed for the part on the left of the caret, we decrement the caret index position\n                    caretPositionOnInitialTextAfterPasting--;\n                }\n        }\n\n        // 5. Check if the result is a valid number, if not, drop the paste and do nothing.\n        if (!AutoNumericHelper.isNumber(result) || result === '') {\n            if (this.settings.onInvalidPaste === AutoNumeric.options.onInvalidPaste.error) {\n                AutoNumericHelper.throwError(`The pasted value '${rawPastedText}' would result into an invalid content '${result}'.`); //TODO Should we send a warning instead of throwing an error?\n                //TODO This is not DRY ; refactor with above\n            }\n            return;\n        }\n\n        // 6. If it's a valid number, check if it falls inside the minimum and maximum value. If this fails, modify the value following this procedure :\n        /*\n         * If 'error' (this is the default) :\n         *      - Normal paste behavior.\n         *      - Try to set the new value, if it fails, then throw an error in the console.\n         *      - Do not change the input value, do not change the current selection.\n         * If 'ignore' :\n         *      - Normal paste behavior.\n         *      - Try to set the new value, if it fails, do nothing more.\n         *      - Do not change the input value, do not change the current selection.\n         * If 'clamp' :\n         *      - Normal paste behavior.\n         *      - Try to set the new value, if it fails, set the value to the minimum or maximum limit, whichever is closest to the\n         *        paste result.\n         *      - Change the caret position to be positioned on the left hand side of the decimal character.\n         * If 'truncate' :\n         *      - Truncate paste behavior.\n         *      - Try to set the new value, until it fails (if the result is out of the min and max value limits).\n         *      - Drop the remaining non-pasted numbers, and keep the last known non-failing result.\n         *      - Change the caret position to be positioned after the last pasted character.\n         * If 'replace' :\n         *      - Replace paste behavior.\n         *      - Try to set the new value, until it fails (if the result is out of the min and max value limits).\n         *      - Then try to replace as many numbers as possible with the pasted ones. Once it fails, keep the last known non-failing result.\n         *      - Change the caret position to be positioned after the last pasted character.\n         */\n        let valueHasBeenSet = false;\n        let valueHasBeenClamped = false;\n        try {\n            this.set(result);\n            valueHasBeenSet = true;\n        } catch (error) {\n            let clampedValue;\n            switch (this.settings.onInvalidPaste) {\n                case AutoNumeric.options.onInvalidPaste.clamp:\n                    clampedValue = AutoNumericHelper.clampToRangeLimits(result, this.settings);\n                    try {\n                        this.set(clampedValue);\n                    } catch (error) {\n                        AutoNumericHelper.throwError(`Fatal error: Unable to set the clamped value '${clampedValue}'.`);\n                    }\n\n                    valueHasBeenClamped = true;\n                    valueHasBeenSet = true;\n                    result = clampedValue; // This is used only for setting the caret position later\n                    break;\n                case AutoNumeric.options.onInvalidPaste.error:\n                case AutoNumeric.options.onInvalidPaste.truncate:\n                case AutoNumeric.options.onInvalidPaste.replace:\n                    // Throw an error message\n                    AutoNumericHelper.throwError(`The pasted value '${rawPastedText}' results in a value '${result}' that is outside of the minimum [${this.settings.minimumValue}] and maximum [${this.settings.maximumValue}] value range.`);\n                // Fall through\n                case AutoNumeric.options.onInvalidPaste.ignore:\n                // Do nothing\n                // Fall through\n                default :\n                    return; // ...and nothing else should be changed\n            }\n        }\n\n        // 7. Then lastly, set the caret position at the right logical place\n        const targetValue = AutoNumericHelper.getElementValue(eventTarget);\n        let caretPositionInFormattedNumber;\n        if (valueHasBeenSet) {\n            switch (this.settings.onInvalidPaste) {\n                case AutoNumeric.options.onInvalidPaste.clamp:\n                    if (valueHasBeenClamped) {\n                        if (this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.suffix) {\n                            AutoNumericHelper.setElementSelection(eventTarget, targetValue.length - this.settings.currencySymbol.length); // This puts the caret on the right of the last decimal place\n                        } else {\n                            AutoNumericHelper.setElementSelection(eventTarget, targetValue.length); // ...and this on the far right\n                        }\n\n                        break;\n                    } // else if the value has not been clamped, the default behavior is used...\n                // falls through\n                case AutoNumeric.options.onInvalidPaste.error:\n                case AutoNumeric.options.onInvalidPaste.ignore:\n                case AutoNumeric.options.onInvalidPaste.truncate:\n                case AutoNumeric.options.onInvalidPaste.replace:\n                default :\n                    // Whenever one or multiple characters are pasted, this means we have to manage the potential thousand separators that could be added by the formatting\n                    caretPositionInFormattedNumber = AutoNumericHelper.findCaretPositionInFormattedNumber(result, caretPositionOnInitialTextAfterPasting, targetValue, this.settings.decimalCharacter);\n                    AutoNumericHelper.setElementSelection(eventTarget, caretPositionInFormattedNumber);\n            }\n        }\n\n        // 8. We make sure we send an input event only if the result is different from the initial value before the paste\n        if (valueHasBeenSet && initialFormattedValue !== targetValue) {\n            // On a 'normal' non-autoNumeric input, an `input` event is sent when a paste is done. We mimic that.\n            this._triggerEvent(AutoNumeric.events.native.input, eventTarget);\n        }\n    }\n\n    /**\n     * When focusing out of the input, we check if the value has changed, and if it has, then we send a `change` event (since the native one would have been prevented by `e.preventDefault()` called in the other event listeners).\n     * We also update the info of the focused state in the `this.isFocused` variable.\n     *\n     * @param {Event} e\n     */\n    _onBlur(e) {\n        // Keep track if the element is currently focused\n        this.isFocused = false;\n        // Keep track if the user is currently editing the element\n        this.isEditing = false;\n\n        // Send a `change` event if the raw value has been changed since the last focus or 'enter' validation\n        if (AutoNumericHelper.trimPaddedZerosFromDecimalPlaces(this.rawValue) !== AutoNumericHelper.trimPaddedZerosFromDecimalPlaces(this.rawValueOnFocus)) {\n            this._triggerEvent(AutoNumeric.events.native.change, e.target);\n        }\n\n        this.rawValueOnFocus = void(0); // Reset the tracker\n    }\n\n    /**\n     * Helper function that DRY the similar behaviors of the mousewheel and up/down arrow keys, which increment/decrement the element value, either by a fixed value, or using the 'progressive' heuristic\n     *\n     * @param {WheelEvent|KeyboardEvent} e The `wheel` or keyboard event\n     * @param {boolean} isUp Defines if the event should increment the value\n     * @param {boolean} isDown Defines if the event should decrement the value\n     * @param {string|number} step The step to be applied to the increment/decrement action\n     * @private\n     */\n    _wheelAndUpDownActions(e, isUp, isDown, step) {\n        // 0) First, save the caret position so we can set it back once the value has been changed\n        const selectionStart = e.target.selectionStart || 0;\n        const selectionEnd = e.target.selectionEnd || 0;\n\n        // 1) Get the unformatted value\n        const currentUnformattedValue = this.rawValue;\n\n        let result;\n        if (AutoNumericHelper.isUndefinedOrNullOrEmpty(currentUnformattedValue)) {\n            // If by default the input is empty, start at '0'\n            if (this.settings.minimumValue > 0 || this.settings.maximumValue < 0) {\n                // or if '0' is not between min and max value, 'minimumValue' if the user does a wheelup, 'maximumValue' if the user does a wheeldown\n                if (isUp) {\n                    result = this.settings.minimumValue;\n                } else {\n                    result = this.settings.maximumValue;\n                }\n            } else {\n                result = 0;\n            }\n        } else {\n            result = currentUnformattedValue;\n        }\n\n        result = +result; // Typecast to a number needed for the following addition/subtraction\n\n        // 2) Increment/Decrement the value\n        // But first, choose the increment/decrement method ; fixed or progressive\n        if (AutoNumericHelper.isNumber(step)) {\n            const stepToUse = +step; // Typecast to a number needed for the following addition/subtraction\n            // Fixed method\n            // This is the simplest method, where a fixed offset in added/subtracted from the current value\n            if (isUp) { // Increment\n                result += stepToUse;\n            } else if (isDown) { // Decrement\n                result -= stepToUse;\n            }\n        } else {\n            // Progressive method\n            // For this method, we calculate an offset that is in relation to the size of the current number (using only the integer part size).\n            // The bigger the number, the bigger the offset (usually the number count in the integer part minus 3, except for small numbers where a different behavior is better for the user experience).\n            //TODO Known limitation : The progressive method does not play well with numbers between 0 and 1 where to modify the decimal places the rawValue first has to go from '1' to '0'\n            if (isUp) { // Increment\n                result = AutoNumericHelper.addAndRoundToNearestAuto(result, this.settings.decimalPlacesRawValue);\n            } else if (isDown) { // Decrement\n                result = AutoNumericHelper.subtractAndRoundToNearestAuto(result, this.settings.decimalPlacesRawValue);\n            }\n        }\n\n        // 3) Set the new value so it gets formatted\n        // First clamp the result if needed\n        result = AutoNumericHelper.clampToRangeLimits(result, this.settings);\n        if (result !== +currentUnformattedValue) {\n            // Only 'set' the value if it has changed. For instance 'set' should not happen if the user hits a limit and continue to try to go past it since we clamp the value.\n            this.set(result);\n\n            // Since we changed the input value, we send a native `input` event\n            this._triggerEvent(AutoNumeric.events.native.input, e.target);\n        }\n\n        //XXX Do not prevent if the value is not modified? From a UX point of view, preventing the wheel event when the user use it on top of an autoNumeric element should always be done, even if the value does not change. Perhaps that could affect other scripts relying on this event to be sent though.\n        e.preventDefault(); // We prevent the page to scroll while we increment/decrement the value\n\n        // 4) Finally, we set back the caret position/selection\n        // There is no need to take into account the fact that the number count could be different at the end of the wheel event ; it would be too complex and most of the time unreliable\n        this._setSelection(selectionStart, selectionEnd);\n    }\n\n    /**\n     * Handler for up and down arrow keys\n     * Increment or decrement the element value according to the `upDownStep` option chosen\n     *\n     * @param {KeyboardEvent} e\n     */\n    upDownArrowAction(e) {\n        if (this.formulaMode ||\n            this.settings.readOnly || this.domElement.readOnly || this.domElement.disabled) {\n            return;\n        }\n\n        let isUp = false;\n        let isDown = false;\n        if (this.eventKey === AutoNumericEnum.keyName.UpArrow) {\n            isUp = true;\n        } else if (this.eventKey === AutoNumericEnum.keyName.DownArrow) {\n            isDown = true;\n        } else {\n            AutoNumericHelper.throwError('Something has gone wrong since neither an Up or Down arrow key is detected, but the function was still called!');\n        }\n\n        this._wheelAndUpDownActions(e, isUp, isDown, this.settings.upDownStep);\n    }\n\n    /**\n     * Handler for 'wheel' event\n     *\n     * @param {WheelEvent} e\n     */\n    _onWheel(e) {\n        if (this.formulaMode) {\n            return;\n        }\n\n        if (this.settings.readOnly || this.domElement.readOnly || this.domElement.disabled) {\n            // Do not allow scrolling in a readonly element (fix issue #541)\n            return;\n        }\n\n        if (this.settings.modifyValueOnWheel) {\n            if (this.settings.wheelOn === AutoNumeric.options.wheelOn.focus) {\n                if (this.isFocused) {\n                    if (!e.shiftKey) {\n                        this.wheelAction(e);\n                    }\n                } else if (e.shiftKey) {\n                    this.wheelAction(e);\n                }\n            } else if (this.settings.wheelOn === AutoNumeric.options.wheelOn.hover) {\n                if (!e.shiftKey) {\n                    this.wheelAction(e);\n                } else {\n                    // Note: When not `defaultPrevented`, Shift + mouse wheel is reserved by the browsers for horizontal scrolling.\n                    // Hence, using the Shift key with the `wheelOn` 'hover' option will only scroll the page if we prevent the default behavior\n                    e.preventDefault(); // Do not scroll horizontally\n\n                    // Scroll vertically\n                    window.scrollBy(0, AutoNumericHelper.isNegativeStrict(String(e.deltaY))?-50:50); // `e.deltaY` is usually too small compared to how the page is scrolled. That's why we use a fixed offset.\n                }\n            } else {\n                AutoNumericHelper.throwError('Unknown `wheelOn` option.');\n            }\n        }\n    }\n\n    /**\n     * Increment or decrement the element value according to the `wheelStep` option chosen\n     *\n     * @param {WheelEvent} e The `wheel` event\n     */\n    wheelAction(e) {\n        this.isWheelEvent = true; // Keep the info that we are currently managing a mouse wheel event\n\n        let isUp = false;\n        let isDown = false;\n        let isDeltaYZero = false;\n        if (AutoNumericHelper.isWheelUpEvent(e)) {\n            isUp = true;\n        } else if (AutoNumericHelper.isWheelDownEvent(e)) {\n            isDown = true;\n        } else if (AutoNumericHelper.isWheelEventWithZeroDeltaY(e)) {\n            // Ignore that event (maybe call e.preventDefault() ?), fixes issue #776\n            isDeltaYZero = true;\n        } else {\n            AutoNumericHelper.throwError(`The event is not a 'wheel' event.`);\n        }\n\n        if (!isDeltaYZero) {\n            this._wheelAndUpDownActions(e, isUp, isDown, this.settings.wheelStep);\n        }\n\n        this.isWheelEvent = false; // Set back the mouse wheel indicator to its default\n    }\n\n    /**\n     * Handler for 'drop' event\n     *\n     * @param {DragEvent} e\n     */\n    _onDrop(e) {\n        if (this.formulaMode) { // Dropping while in formula mode shouldn't be possible. This is done 'just in case'\n            return;\n        }\n\n        // Note: by default browsers already prevent the drop on readOnly and disabled elements\n        this.isDropEvent = true;\n        e.preventDefault();\n\n        const droppedText = e.dataTransfer.getData('text/plain');\n        const cleanedValue = this.unformatOther(droppedText);\n        const previousValue = this.rawValue;\n        this.set(cleanedValue);\n        this.isDropEvent = false;\n\n        // Test if a change event must be sent (if the dropped value is different from before)\n        const newValue = this.constructor._toNumericValue(cleanedValue, this.settings);\n        if (!isNaN(Number(newValue))) {\n            if (AutoNumericHelper.trimPaddedZerosFromDecimalPlaces(previousValue) !== AutoNumericHelper.trimPaddedZerosFromDecimalPlaces(newValue)) {\n                this._triggerEvent(AutoNumeric.events.native.change, this.domElement);\n            }\n        }\n    }\n\n    /**\n     * Handler for 'submit' events happening on the parent <form> element.\n     * If `unformatOnSubmit` is set to `true`, the element value is first unformatted before the form is submitted.\n     *\n     * @returns {boolean}\n     */\n    _onFormSubmit() {\n        // Search for all the AutoNumeric children of the form element and call the `_unformatOnSubmit()` function\n        const inputElements = this._getFormAutoNumericChildren(this.parentForm);\n        const aNElements = inputElements.map(aNElement => this.constructor.getAutoNumericElement(aNElement));\n        aNElements.forEach(aNElement => aNElement._unformatOnSubmit());\n\n        return true;\n    }\n\n    /**\n     * Handler for 'reset' events caught on the parent <form> element.\n     * When such event is detected, then every child AutoNumeric elements must format their default value that the browser is forcing upon them.\n     *\n     * @private\n     */\n    _onFormReset() {\n        const inputElements = this._getFormAutoNumericChildren(this.parentForm);\n        const aNElements = inputElements.map(aNElement => this.constructor.getAutoNumericElement(aNElement));\n        // Tell all the AutoNumeric children to format their default value\n        aNElements.forEach(aNElement => {\n            const val = this._getDefaultValue(aNElement.node());\n            // aNElement.set(val); //XXX If I use that line, the format is first correctly done, but the form reset is still not finished and will overwrite the formatting. This is why we need to use the following setTimeout line.\n            setTimeout(() => aNElement.set(val), 0); //XXX This is an ugly hack, but it seems to be the accepted answer to this problem (https://stackoverflow.com/a/8152960/2834898). This is sad. Do note that I use '0ms' here since using `setTimeout` will push that code on the event stack, and as soon as the reset will be finished, this will be run (see https://stackoverflow.com/a/23987283/2834898).\n        });\n    }\n\n    /**\n     * Unformat the element value according to the `unformatOnSubmit` option\n     *\n     * @private\n     */\n    _unformatOnSubmit() {\n        if (this.settings.unformatOnSubmit) {\n            this._setElementValue(this.rawValue);\n        }\n    }\n\n    /**\n     * Listen for the `alt` key keydown event globally, and if the event is caught, unformat the AutoNumeric element that is hovered by the mouse.\n     *\n     * @param {KeyboardEvent} e\n     * @private\n     */\n    _onKeydownGlobal(e) {\n        //TODO Find a way to keep the caret position between the alt keyup/keydown states\n        if (AutoNumericHelper.character(e) === AutoNumericEnum.keyName.Alt) {\n            const hoveredElement = AutoNumericHelper.getHoveredElement();\n            if (AutoNumeric.isManagedByAutoNumeric(hoveredElement)) {\n                const anElement = AutoNumeric.getAutoNumericElement(hoveredElement);\n                if (!anElement.formulaMode && anElement.settings.unformatOnHover) {\n                    this.constructor._unformatAltHovered(anElement);\n                }\n            }\n        }\n    }\n\n    /**\n     * Listen for the `alt` key keyup event globally, and if the event is caught, reformat the AutoNumeric element that is hovered by the mouse.\n     *\n     * @param {KeyboardEvent} e\n     * @private\n     */\n    _onKeyupGlobal(e) {\n        if (AutoNumericHelper.character(e) === AutoNumericEnum.keyName.Alt) {\n            const hoveredElement = AutoNumericHelper.getHoveredElement();\n            if (AutoNumeric.isManagedByAutoNumeric(hoveredElement)) {\n                const anElement = AutoNumeric.getAutoNumericElement(hoveredElement);\n                if (anElement.formulaMode || !anElement.settings.unformatOnHover) {\n                    return;\n                }\n\n                this.constructor._reformatAltHovered(anElement);\n            }\n        }\n    }\n\n    /**\n     * Return `true` if the DOM element is supported by autoNumeric.\n     * A supported element is an element whitelisted in the `allowedTagList`.\n     *\n     * @returns {boolean}\n     * @private\n     */\n    _isElementTagSupported() {\n        if (!AutoNumericHelper.isElement(this.domElement)) {\n            AutoNumericHelper.throwError(`The DOM element is not valid, ${this.domElement} given.`);\n        }\n\n        return AutoNumericHelper.isInArray(this.domElement.tagName.toLowerCase(), this.allowedTagList);\n    }\n\n    /**\n     * Return `true` in the DOM element is an <input>.\n     *\n     * @returns {boolean}\n     * @private\n     */\n    _isInputElement() {\n        return this.domElement.tagName.toLowerCase() === 'input';\n    }\n\n    /**\n     * Return `true` if the input type is supported by AutoNumeric\n     *\n     * @returns {boolean}\n     * @throws\n     */\n    _isInputTypeSupported() {\n        return (this.domElement.type === 'text' ||\n                this.domElement.type === 'hidden' ||\n                this.domElement.type === 'tel' ||\n                AutoNumericHelper.isUndefinedOrNullOrEmpty(this.domElement.type));\n    }\n\n    /**\n     * Check if the DOM element is supported by autoNumeric.\n     * A supported element is either an <input> element with the correct 'type' attribute, or a tag whitelisted in the `allowedTagList` array.\n     * If the check fails, this method throws.\n     * This function also sets the info `this.isInputElement` which keep tracks if the DOM element is an <input> or not, and the `this.isContentEditable` if the element has the `contenteditable` attribute set to `true` initially.\n     *\n     * @throws\n     * @private\n     */\n    _checkElement() {\n        const currentElementTag = this.domElement.tagName.toLowerCase();\n\n        if (!this._isElementTagSupported()) {\n            AutoNumericHelper.throwError(`The <${currentElementTag}> tag is not supported by autoNumeric`);\n        }\n\n        if (this._isInputElement()) {\n            if (!this._isInputTypeSupported()) {\n                AutoNumericHelper.throwError(`The input type \"${this.domElement.type}\" is not supported by autoNumeric`);\n            }\n\n            this.isInputElement = true;\n        } else {\n            this.isInputElement = false;\n            this.isContentEditable = this._isContentEditable(this.domElement);\n        }\n    }\n\n    /**\n     * Returns `true` if the given DOM element is a contenteditable one (set to `true`)\n     *\n     * @param {HTMLElement} domElement\n     * @returns {boolean}\n     */\n    _isContentEditable(domElement) {\n        return domElement.hasAttribute('contenteditable') && domElement.getAttribute('contenteditable') === 'true';\n    }\n\n    /**\n     * Formats the default value on page load.\n     * This is called only if the `formatOnPageLoad` option is set to `true`.\n     *\n     * @param {number|string|null} forcedInitialValue The value that should be used for initialization, in place on the eventual html one\n     */\n    _formatDefaultValueOnPageLoad(forcedInitialValue = null) {\n        let setValue = true;\n        let currentValue;\n        if (!AutoNumericHelper.isNull(forcedInitialValue)) {\n            currentValue = forcedInitialValue;\n        } else {\n            // Make sure the initial value does not have any superfluous whitespaces around it (Fix issue #479)\n            currentValue = AutoNumericHelper.getElementValue(this.domElement).trim();\n            // Correct the DOM attribute in case some whitespaces were present\n            this.domElement.setAttribute('value', currentValue);\n        }\n\n        if (this.isInputElement || this.isContentEditable) {\n            /*\n             * If the input value has been set by the dev, but not directly as an attribute in the html, then it takes\n             * precedence and should get formatted during the initialization (if this input value is a valid number and that the\n             * developer wants it formatted on init (cf. the `settings.formatOnPageLoad` option)).\n             * Note; this is true whatever the developer has set for `data-default-value-override` in the html (asp.net users).\n             *\n             * In other words : if `defaultValueOverride` is not null, it means the developer is trying to prevent postback problems.\n             * But if `input.value` is set to a number, and the html `value` attribute is not set, then it means the dev has\n             * changed the input value, and then it means we should not overwrite his own decision to do so.\n             * Hence, if `defaultValueOverride` is not null, but `input.value` is a number and `this.domElement.hasAttribute('value')`\n             * is false, we should ignore `defaultValueOverride` altogether.\n             */\n            const unLocalizedCurrentValue = this.constructor._toNumericValue(currentValue, this.settings); // This allows to use a localized value on startup\n            if (!this.domElement.hasAttribute('value') || this.domElement.getAttribute('value') === '') {\n                // Check if the `value` is valid or not\n                if (!isNaN(Number(unLocalizedCurrentValue)) && Infinity !== unLocalizedCurrentValue) {\n                    this.set(unLocalizedCurrentValue);\n                    setValue = false;\n                } else {\n                    // If not, inform the developer that nothing usable has been provided\n                    AutoNumericHelper.throwError(`The value [${currentValue}] used in the input is not a valid value autoNumeric can work with.`);\n                }\n            } else {\n                /* Checks for :\n                 * - page reload from back button, and\n                 * - ASP.net form post back\n                 *      The following HTML data attribute is REQUIRED (data-an-default=\"same value as the value attribute\")\n                 *      example: <asp:TextBox runat=\"server\" id=\"someID\" text=\"1234.56\" data-an-default=\"1234.56\">\n                 */\n                if ((this.settings.defaultValueOverride !== null && this.settings.defaultValueOverride.toString() !== currentValue) ||\n                    (this.settings.defaultValueOverride === null && currentValue !== '' && currentValue !== this.domElement.getAttribute('value')) ||\n                    (currentValue !== '' && this.domElement.getAttribute('type') === 'hidden' && !AutoNumericHelper.isNumber(unLocalizedCurrentValue))) {\n                    if (this.settings.saveValueToSessionStorage && (this.settings.decimalPlacesShownOnFocus !== null || this.settings.divisorWhenUnfocused)) {\n                        this._setRawValue(this._getValueFromPersistentStorage());\n                    }\n\n                    // If the decimalPlacesShownOnFocus value should NOT be saved in sessionStorage\n                    if (!this.settings.saveValueToSessionStorage) {\n                        const toStrip = this.constructor._removeBrackets(currentValue, this.settings);\n                        if ((this.settings.negativePositiveSignPlacement === AutoNumeric.options.negativePositiveSignPlacement.suffix ||\n                            (this.settings.negativePositiveSignPlacement !== AutoNumeric.options.negativePositiveSignPlacement.prefix && this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.suffix)) &&\n                            this.settings.negativeSignCharacter !== '' &&\n                            AutoNumericHelper.isNegative(currentValue, this.settings.negativeSignCharacter)) {\n                            this._setRawValue(`-${this.constructor._stripAllNonNumberCharacters(toStrip, this.settings, true, this.isFocused)}`);\n                        } else {\n                            this._setRawValue(this.constructor._stripAllNonNumberCharacters(toStrip, this.settings, true, this.isFocused));\n                        }\n                    }\n\n                    setValue = false;\n                }\n            }\n\n            if (currentValue === '') {\n                switch (this.settings.emptyInputBehavior) {\n                    case AutoNumeric.options.emptyInputBehavior.focus:\n                    case AutoNumeric.options.emptyInputBehavior.press:\n                        break;\n                    case AutoNumeric.options.emptyInputBehavior.always:\n                        this._setElementValue(this.settings.currencySymbol);\n                        break;\n                    case AutoNumeric.options.emptyInputBehavior.min:\n                        this.set(this.settings.minimumValue);\n                        break;\n                    case AutoNumeric.options.emptyInputBehavior.max:\n                        this.set(this.settings.maximumValue);\n                        break;\n                    case AutoNumeric.options.emptyInputBehavior.zero:\n                        this.set('0');\n                        break;\n                    // It's possible to set the `null` value as the initial value\n                    case AutoNumeric.options.emptyInputBehavior.null:\n                        this.set(null);\n                        break;\n                    // When `emptyInputBehavior` is a number or a string representing a number\n                    default:\n                        this.set(this.settings.emptyInputBehavior);\n                }\n            } else if (setValue && currentValue === this.domElement.getAttribute('value')) {\n                this.set(currentValue);\n            }\n        } else if (this.settings.defaultValueOverride === null ||\n            this.settings.defaultValueOverride === currentValue) {\n            this.set(currentValue);\n        }\n    }\n\n    /**\n     * Enhance the user experience by modifying the default `negativePositiveSignPlacement` option depending on `currencySymbol` and `currencySymbolPlacement`.\n     *\n     * If the user has not set the placement of the negative sign (`negativePositiveSignPlacement`), but has set a currency symbol (`currencySymbol`),\n     * then we modify the default value of `negativePositiveSignPlacement` in order to keep the resulting output logical by default :\n     * - \"$-1,234.56\" instead of \"-$1,234.56\" ({currencySymbol: \"$\", negativePositiveSignPlacement: \"r\"})\n     * - \"-1,234.56$\" instead of \"1,234.56-$\" ({currencySymbol: \"$\", currencySymbolPlacement: \"s\", negativePositiveSignPlacement: \"p\"})\n     *\n     * @param {object} settings\n     */\n    static _correctNegativePositiveSignPlacementOption(settings) {\n        //XXX Note; this function is static since we need to pass a `settings` object when calling the static `AutoNumeric.format()` method\n        // If negativePositiveSignPlacement is already set, we do not overwrite it\n        if (!AutoNumericHelper.isNull(settings.negativePositiveSignPlacement)) {\n            return;\n        }\n\n        if (!AutoNumericHelper.isUndefined(settings) &&\n            AutoNumericHelper.isUndefinedOrNullOrEmpty(settings.negativePositiveSignPlacement) &&\n            !AutoNumericHelper.isUndefinedOrNullOrEmpty(settings.currencySymbol)) {\n            switch (settings.currencySymbolPlacement) {\n                case AutoNumeric.options.currencySymbolPlacement.suffix:\n                    settings.negativePositiveSignPlacement = AutoNumeric.options.negativePositiveSignPlacement.prefix; // Default -1,234.56 €\n                    break;\n                case AutoNumeric.options.currencySymbolPlacement.prefix:\n                    settings.negativePositiveSignPlacement = AutoNumeric.options.negativePositiveSignPlacement.left; // Default -$1,234.56\n                    break;\n                default :\n                //\n            }\n        } else {\n            // Sets the default value if `negativePositiveSignPlacement` is `null`\n            settings.negativePositiveSignPlacement = AutoNumeric.options.negativePositiveSignPlacement.left;\n        }\n    }\n\n    /**\n     * Correct the `caretPositionOnFocus` and `selectOnFocus` options, since setting both leads to a conflict.\n     * This method directly modifies the `options` object passed as a parameter, then returns it.\n     * It returns `null` if the given option is `null`.\n     *\n     * @param {object} options The options passed as an argument by the user\n     * @returns {object|null}\n     * @private\n     */\n    static _correctCaretPositionOnFocusAndSelectOnFocusOptions(options) {\n        if (AutoNumericHelper.isNull(options)) {\n            return null;\n        }\n\n        // If the user has set the `caretPositionOnFocus` option, do not set `selectOnFocus` to `true` by default\n        if (!AutoNumericHelper.isUndefinedOrNullOrEmpty(options.caretPositionOnFocus) && AutoNumericHelper.isUndefinedOrNullOrEmpty(options.selectOnFocus)) {\n            options.selectOnFocus = AutoNumeric.options.selectOnFocus.doNotSelect;\n        }\n\n        // If the user has set the `selectOnFocus` option to `true`, set `caretPositionOnFocus` to `doNoForceCaretPosition`\n        if (AutoNumericHelper.isUndefinedOrNullOrEmpty(options.caretPositionOnFocus) && !AutoNumericHelper.isUndefinedOrNullOrEmpty(options.selectOnFocus) && options.selectOnFocus === AutoNumeric.options.selectOnFocus.select) {\n            options.caretPositionOnFocus = AutoNumeric.options.caretPositionOnFocus.doNoForceCaretPosition;\n        }\n\n        return options;\n    }\n\n    /**\n     * Calculate the number de decimal places to be used by the AutoNumeric object, for each of its state, and for its formatted and raw value.\n     * By default, the `rawValue` precision is the same as the formatted value one.\n     *\n     * This method is called during the AutoNumeric object initialization. This assumes some internal variable state.\n     *\n     * This method set the following options accordingly to their own value and the mandatory `decimalPlaces` option:\n     * - decimalPlacesRawValue     (nullable)\n     * - decimalPlacesShownOnBlur  (nullable)\n     * - decimalPlacesShownOnFocus (nullable)\n     *\n     * Note: the `decimalPlaces` option is only used here and only serve to define those three previous options value.\n     * AutoNumeric will then *only* use `decimalPlacesRawValue`, `decimalPlacesShownOnBlur` and `decimalPlacesShownOnFocus` from there.\n     *\n     * This method directly modifies the `settings` object passed as a parameter.\n     *\n     * @param {object} settings This is an object with the new settings to use.\n     * @private\n     */\n    static _calculateDecimalPlacesOnInit(settings) {\n        // Check the `decimalPlaces*` options and output any warnings as needed, before modifying those options\n        this._validateDecimalPlacesRawValue(settings);\n\n        // Initialization phase\n        //XXX This assumes at this stage, `settings.decimalPlaces` as been set from the default options\n\n        // Overwrite the `decimalPlaces*` values if the `decimalPlaces*` options are not set in the `settings`\n        // Sets `decimalPlacesShownOnBlur` (previously known as `scaleDecimalPlaces`)\n        if (settings.decimalPlacesShownOnFocus === AutoNumeric.options.decimalPlacesShownOnFocus.useDefault)  {\n            settings.decimalPlacesShownOnFocus = settings.decimalPlaces;\n        }\n\n        if (settings.decimalPlacesShownOnBlur === AutoNumeric.options.decimalPlacesShownOnBlur.useDefault)  {\n            settings.decimalPlacesShownOnBlur = settings.decimalPlaces;\n        }\n\n        if (settings.decimalPlacesRawValue === AutoNumeric.options.decimalPlacesRawValue.useDefault)  {\n            settings.decimalPlacesRawValue = settings.decimalPlaces;\n        }\n\n        // Add the additional decimal places to the raw value\n        let additionalDecimalPlacesRawValue = 0;\n        if (settings.rawValueDivisor && settings.rawValueDivisor !== AutoNumeric.options.rawValueDivisor.none) {\n            additionalDecimalPlacesRawValue = String(settings.rawValueDivisor).length - 1; // i.e. Dividing by '100' adds 2 decimal places to the needed precision\n            if (additionalDecimalPlacesRawValue < 0) {\n                additionalDecimalPlacesRawValue = 0;\n            }\n        }\n\n        settings.decimalPlacesRawValue = Math.max(\n            Math.max(settings.decimalPlacesShownOnBlur, settings.decimalPlacesShownOnFocus) + additionalDecimalPlacesRawValue,\n            Number(settings.originalDecimalPlacesRawValue) + additionalDecimalPlacesRawValue,\n        );\n    }\n\n    /**\n     * Recalculate the number de decimal places to be used by the AutoNumeric object, for each of its state, and for its formatted and raw value.\n     * By default, the `rawValue` precision is the same as the formatted value one.\n     *\n     * This method is close to the one called during initialization, `_calculateDecimalPlacesOnInit()`, but with slight difference so that the `decimalPlaces*` options are correctly updated as needed.\n     *\n     * This methods set the following options accordingly to their own value and the mandatory `decimalPlaces` option:\n     * - decimalPlacesRawValue     (nullable)\n     * - decimalPlacesShownOnBlur  (nullable)\n     * - decimalPlacesShownOnFocus (nullable)\n     *\n     * Note: the `decimalPlaces` option is only used here and only serve to define those three previous options value.\n     * AutoNumeric will then *only* use `decimalPlacesRawValue`, `decimalPlacesShownOnBlur` and `decimalPlacesShownOnFocus` from there.\n     *\n     * This methods directly modifies the `settings` object passed as a parameter.\n     *\n     * @param {object} settings This is an object with the new settings to use.\n     * @param {object} currentSettings This is the current settings (`this.settings`) used by the element.\n     * @private\n     */\n    static _calculateDecimalPlacesOnUpdate(settings, currentSettings = null) {\n        // Check the `decimalPlaces*` options and output any warnings as needed, before modifying those options\n        this._validateDecimalPlacesRawValue(settings);\n\n        // Update phase\n        if (AutoNumericHelper.isNull(currentSettings)) {\n            AutoNumericHelper.throwError(`When updating the settings, the previous ones should be passed as an argument.`);\n        }\n\n        const decimalPlacesInOptions = 'decimalPlaces' in settings;\n        if (!(decimalPlacesInOptions ||\n                'decimalPlacesRawValue' in settings ||\n                'decimalPlacesShownOnFocus' in settings ||\n                'decimalPlacesShownOnBlur' in settings ||\n                'rawValueDivisor' in settings)) {\n            // Do Nothing if no decimal places-related options are modified\n            return;\n        }\n\n        // Overwrite the `decimalPlaces*` values if the `decimalPlaces*` options are not set in the `settings`\n        if (decimalPlacesInOptions) {\n            if (!('decimalPlacesShownOnFocus' in settings) ||\n                settings.decimalPlacesShownOnFocus === AutoNumeric.options.decimalPlacesShownOnFocus.useDefault)  {\n                settings.decimalPlacesShownOnFocus = settings.decimalPlaces;\n            }\n\n            if (!('decimalPlacesShownOnBlur' in settings) ||\n                settings.decimalPlacesShownOnBlur === AutoNumeric.options.decimalPlacesShownOnBlur.useDefault)  {\n                settings.decimalPlacesShownOnBlur = settings.decimalPlaces;\n            }\n\n            if (!('decimalPlacesRawValue' in settings) ||\n                settings.decimalPlacesRawValue === AutoNumeric.options.decimalPlacesRawValue.useDefault)  {\n                settings.decimalPlacesRawValue = settings.decimalPlaces;\n            }\n        } else {\n            if (AutoNumericHelper.isUndefined(settings.decimalPlacesShownOnFocus)) {\n                settings.decimalPlacesShownOnFocus = currentSettings.decimalPlacesShownOnFocus;\n            }\n\n            if (AutoNumericHelper.isUndefined(settings.decimalPlacesShownOnBlur)) {\n                settings.decimalPlacesShownOnBlur = currentSettings.decimalPlacesShownOnBlur;\n            }\n        }\n\n        // Add the additional decimal places to the raw value\n        let additionalDecimalPlacesRawValue = 0;\n        if (settings.rawValueDivisor && settings.rawValueDivisor !== AutoNumeric.options.rawValueDivisor.none) {\n            additionalDecimalPlacesRawValue = String(settings.rawValueDivisor).length - 1; // i.e. Dividing by '100' adds 2 decimal places to the needed precision\n            if (additionalDecimalPlacesRawValue < 0) {\n                additionalDecimalPlacesRawValue = 0;\n            }\n        }\n\n        if (!settings.decimalPlaces && !settings.decimalPlacesRawValue) {\n            settings.decimalPlacesRawValue = Math.max(\n                Math.max(settings.decimalPlacesShownOnBlur, settings.decimalPlacesShownOnFocus) + additionalDecimalPlacesRawValue,\n                Number(currentSettings.originalDecimalPlacesRawValue) + additionalDecimalPlacesRawValue,\n            );\n        } else {\n            settings.decimalPlacesRawValue = Math.max(\n                Math.max(settings.decimalPlacesShownOnBlur, settings.decimalPlacesShownOnFocus) + additionalDecimalPlacesRawValue,\n                Number(settings.decimalPlacesRawValue) + additionalDecimalPlacesRawValue,\n            );\n        }\n    }\n\n    /**\n     * Analyze and save the minimumValue and maximumValue integer size for later uses\n     * @private\n     */\n    _calculateVMinAndVMaxIntegerSizes() {\n        let [maximumValueIntegerPart] = this.settings.maximumValue.toString().split('.');\n        let [minimumValueIntegerPart] = (!this.settings.minimumValue && this.settings.minimumValue !== 0)?[]:this.settings.minimumValue.toString().split('.');\n        maximumValueIntegerPart = maximumValueIntegerPart.replace(this.settings.negativeSignCharacter, '');\n        minimumValueIntegerPart = minimumValueIntegerPart.replace(this.settings.negativeSignCharacter, '');\n\n        this.settings.mIntPos = Math.max(maximumValueIntegerPart.length, 1);\n        this.settings.mIntNeg = Math.max(minimumValueIntegerPart.length, 1);\n    }\n\n    /**\n     * Calculate once what are the `valuesToStrings` option keys.\n     * @private\n     */\n    _calculateValuesToStringsKeys() {\n        if (this.settings.valuesToStrings) {\n            this.valuesToStringsKeys = Object.keys(this.settings.valuesToStrings);\n        } else {\n            this.valuesToStringsKeys = [];\n        }\n    }\n\n    /**\n     * Caches regular expressions for _stripAllNonNumberCharactersExceptCustomDecimalChar\n     *\n     * @param {object} settings\n     * @param {object} regex\n     */\n    static _cachesUsualRegularExpressions(settings, regex) {\n        // Test if there is a negative character in the string\n        let negativeSignReg;\n        if (settings.negativeSignCharacter !== AutoNumeric.options.negativeSignCharacter.hyphen) {\n            negativeSignReg = `([-\\\\${settings.negativeSignCharacter}]?)`;\n        } else {\n            negativeSignReg = '(-?)';\n        }\n\n        regex.aNegRegAutoStrip = negativeSignReg;\n        settings.allowedAutoStrip = new RegExp(`[^-0123456789\\\\${settings.decimalCharacter}]`, 'g');\n        settings.numRegAutoStrip = new RegExp(`${negativeSignReg}(?:\\\\${settings.decimalCharacter}?([0-9]+\\\\${settings.decimalCharacter}[0-9]+)|([0-9]*(?:\\\\${settings.decimalCharacter}[0-9]*)?))`);\n\n        // Using this regex version `^${regex.aNegRegAutoStrip}0*(\\\\d|$)` entirely clear the input on blur\n        settings.stripReg = new RegExp(`^${regex.aNegRegAutoStrip}0*([0-9])`);\n\n        // All the characters that are accepted during the formula mode\n        settings.formulaChars = new RegExp(`[0-9${settings.decimalCharacter}+\\\\-*/() ]`);\n    }\n\n    /**\n     * Modify the user settings to make them 'exploitable' later.\n     */\n    _transformOptionsValuesToDefaultTypes() {\n        for (const key in this.settings) {\n            if (Object.prototype.hasOwnProperty.call(this.settings, key)) {\n                const value = this.settings[key];\n\n                // Convert the strings 'true' and 'false' to booleans\n                if (value === 'true' || value === 'false') {\n                    this.settings[key] = value === 'true';\n                }\n\n                // Convert numbers in options to strings\n                //TODO Only transform the values of type 'Number' to 'String' if it's a currency number (so that we can have big numbers). Do not convert other numbers (i.e. `historySize`)\n                if (typeof value === 'number') {\n                    this.settings[key] = value.toString();\n                }\n            }\n        }\n    }\n\n    /**\n     * Convert the old settings options name to new ones.\n     *\n     * @param {object} options\n     */\n    static _convertOldOptionsToNewOnes(options) {\n        //TODO Delete this function once the old options are not used anymore\n        const oldOptionsConverter = {\n            // Old option names, with their corresponding new names\n            aSep                              : 'digitGroupSeparator',\n            nSep                              : 'showOnlyNumbersOnFocus',\n            dGroup                            : 'digitalGroupSpacing',\n            aDec                              : 'decimalCharacter',\n            altDec                            : 'decimalCharacterAlternative',\n            aSign                             : 'currencySymbol',\n            pSign                             : 'currencySymbolPlacement',\n            pNeg                              : 'negativePositiveSignPlacement',\n            aSuffix                           : 'suffixText',\n            oLimits                           : 'overrideMinMaxLimits',\n            vMax                              : 'maximumValue',\n            vMin                              : 'minimumValue',\n            mDec                              : 'decimalPlacesOverride',\n            eDec                              : 'decimalPlacesShownOnFocus',\n            scaleDecimal                      : 'decimalPlacesShownOnBlur',\n            aStor                             : 'saveValueToSessionStorage',\n            mRound                            : 'roundingMethod',\n            aPad                              : 'allowDecimalPadding',\n            nBracket                          : 'negativeBracketsTypeOnBlur',\n            wEmpty                            : 'emptyInputBehavior',\n            lZero                             : 'leadingZero',\n            aForm                             : 'formatOnPageLoad',\n            sNumber                           : 'selectNumberOnly',\n            anDefault                         : 'defaultValueOverride',\n            unSetOnSubmit                     : 'unformatOnSubmit',\n            outputType                        : 'outputFormat',\n            debug                             : 'showWarnings',\n\n            // Current options :\n            allowDecimalPadding               : true,\n            alwaysAllowDecimalCharacter       : true,\n            caretPositionOnFocus              : true,\n            createLocalList                   : true,\n            currencySymbol                    : true,\n            currencySymbolPlacement           : true,\n            decimalCharacter                  : true,\n            decimalCharacterAlternative       : true,\n            decimalPlaces                     : true,\n            decimalPlacesRawValue             : true,\n            decimalPlacesShownOnBlur          : true,\n            decimalPlacesShownOnFocus         : true,\n            defaultValueOverride              : true,\n            digitalGroupSpacing               : true,\n            digitGroupSeparator               : true,\n            divisorWhenUnfocused              : true,\n            emptyInputBehavior                : true,\n            eventBubbles                      : true,\n            eventIsCancelable                 : true,\n            failOnUnknownOption               : true,\n            formatOnPageLoad                  : true,\n            formulaMode                       : true,\n            historySize                       : true,\n            isCancellable                     : true,\n            leadingZero                       : true,\n            maximumValue                      : true,\n            minimumValue                      : true,\n            modifyValueOnUpDownArrow          : true,\n            modifyValueOnWheel                : true,\n            negativeBracketsTypeOnBlur        : true,\n            negativePositiveSignPlacement     : true,\n            negativeSignCharacter             : true,\n            negativePositiveSignBehavior      : true,\n            noEventListeners                  : true,\n            onInvalidPaste                    : true,\n            outputFormat                      : true,\n            overrideMinMaxLimits              : true,\n            positiveSignCharacter             : true,\n            rawValueDivisor                   : true,\n            readOnly                          : true,\n            roundingMethod                    : true,\n            saveValueToSessionStorage         : true,\n            selectNumberOnly                  : true,\n            selectOnFocus                     : true,\n            serializeSpaces                   : true,\n            showOnlyNumbersOnFocus            : true,\n            showPositiveSign                  : true,\n            showWarnings                      : true,\n            styleRules                        : true,\n            suffixText                        : true,\n            symbolWhenUnfocused               : true,\n            upDownStep                        : true,\n            unformatOnHover                   : true,\n            unformatOnSubmit                  : true,\n            valuesToStrings                   : true,\n            watchExternalChanges              : true,\n            wheelOn                           : true,\n            wheelStep                         : true,\n\n            // Additional information that are added to the `settings` object :\n            //TODO Find a way to exclude those internal data from the settings object (ideally by using another object, or better yet, class attributes) -->\n            allowedAutoStrip                  : true,\n            formulaChars                      : true,\n            isNegativeSignAllowed             : true,\n            isPositiveSignAllowed             : true,\n            mIntNeg                           : true,\n            mIntPos                           : true,\n            numRegAutoStrip                   : true,\n            originalDecimalPlaces             : true,\n            originalDecimalPlacesRawValue     : true,\n            stripReg                          : true,\n        };\n\n        for (const option in options) {\n            if (Object.prototype.hasOwnProperty.call(options, option)) {\n                if (oldOptionsConverter[option] === true) {\n                    // If the option is a 'new' option, we continue looping\n                    continue;\n                }\n\n                if (Object.prototype.hasOwnProperty.call(oldOptionsConverter, option)) {\n                    // Else we have an 'old' option name\n                    AutoNumericHelper.warning(`You are using the deprecated option name '${option}'. Please use '${oldOptionsConverter[option]}' instead from now on. The old option name will be dropped very soon™.`, true);\n\n                    // Then we modify the initial option object to use the new options instead of the old ones\n                    options[oldOptionsConverter[option]] = options[option];\n                    delete options[option];\n                } else if (options.failOnUnknownOption) {\n                    // ...or the option name is unknown. This means there is a problem with the options object, therefore we throw an error.\n                    AutoNumericHelper.throwError(`Option name '${option}' is unknown. Please fix the options passed to autoNumeric`);\n                }\n            }\n        }\n\n        if ('mDec' in options) {\n            AutoNumericHelper.warning('The old `mDec` option has been deprecated in favor of more accurate options ; `decimalPlaces`, `decimalPlacesRawValue`, `decimalPlacesShownOnFocus` and `decimalPlacesShownOnBlur`.', true);\n        }\n    }\n\n    /**\n     * Analyse the settings/options passed by the user, validate and clean them, then set them into `this.settings`.\n     * Note: This sets the settings to `null` if somehow the settings objet is undefined or empty\n     *       If only `decimalPlaces` is defined in the option, overwrite the other decimalPlaces* options, otherwise, use those options\n     *\n     * @param {object} options\n     * @param {boolean} update - If set to `true`, then the settings already exists and this function only updates them instead of recreating them from scratch\n     * @throws\n     */\n    _setSettings(options, update = false) {\n        // If the user used old options, we convert them to new ones\n        if (update || !AutoNumericHelper.isNull(options)) {\n            this.constructor._convertOldOptionsToNewOnes(options);\n        }\n\n        if (update) {\n            // The settings are updated\n            // Update the original data, if it has changed\n            const decimalPlacesRawValueInOptions = 'decimalPlacesRawValue' in options;\n            if (decimalPlacesRawValueInOptions) {\n                this.settings.originalDecimalPlacesRawValue = options.decimalPlacesRawValue;\n            }\n\n            const decimalPlacesInOptions = 'decimalPlaces' in options;\n            if (decimalPlacesInOptions) {\n                this.settings.originalDecimalPlaces = options.decimalPlaces;\n            }\n\n            // Then update all the `decimalPlaces*` options\n            this.constructor._calculateDecimalPlacesOnUpdate(options, this.settings);\n\n            // Finally generate the updated settings object to use\n            this._mergeSettings(options); //TODO Check that the `styleRules` option is correctly cloned (due to depth cloning limitation)\n        } else {\n            // The settings are generated for the first time\n            this.settings = {};\n            // If we couldn't grab any settings, create them from the default ones and combine them with the options passed as a parameter as well as with the HTML5 `data-*` info (via `this.domElement.dataset`), if any.\n            this._mergeSettings(this.constructor.getDefaultConfig(), this.domElement.dataset, options, { rawValue : this.defaultRawValue });\n            this.caretFix = false;\n            this.throwInput = true; // Throw input event\n            this.allowedTagList = AutoNumericEnum.allowedTagList;\n            this.runOnce = false;\n            this.hoveredWithAlt = false; // Keep tracks if the current AutoNumeric element is hovered by the mouse cursor while `Alt` is pressed\n        }\n\n        // Modify the user settings to make them 'exploitable'\n        this._transformOptionsValuesToDefaultTypes();\n\n        // Immediately run the callbacks that could update the settings object\n        this._runCallbacksFoundInTheSettingsObject();\n\n        // Improve the `negativePositiveSignPlacement` option if needed\n        this.constructor._correctNegativePositiveSignPlacementOption(this.settings);\n\n        // Set the `caretPositionOnFocus` and `selectOnFocus` options so that they do not conflict, if one of those have been set manually by the user.\n        // If order to check that, we take a look at the original options the user passed as an argument, not `this.settings` that have been merged with the default settings. //TODO Check the validity of that comment\n        this.constructor._correctCaretPositionOnFocusAndSelectOnFocusOptions(this.settings);\n\n        // Define if the negative or positive signs are allowed\n        this.constructor._setNegativePositiveSignPermissions(this.settings);\n\n        // Calculate the number of decimal places (during the element initialization)\n        if (!update) {\n            // Make sure the `originalDecimalPlaces` info is set\n            if (AutoNumericHelper.isNull(options) || !options.decimalPlaces) {\n                this.settings.originalDecimalPlaces = null;\n            } else {\n                this.settings.originalDecimalPlaces = options.decimalPlaces;\n            }\n\n            // Save the `originalDecimalPlacesRawValue` info\n            this.settings.originalDecimalPlacesRawValue = this.settings.decimalPlacesRawValue;\n\n            // Then update all the `decimalPlaces*` options\n            this.constructor._calculateDecimalPlacesOnInit(this.settings);\n        }\n\n        // Additional changes to the settings object\n        this._calculateVMinAndVMaxIntegerSizes();\n        this._setTrailingNegativeSignInfo();\n        this.regex = {}; // Create the object that will store the regular expressions\n        this.constructor._cachesUsualRegularExpressions(this.settings, this.regex);\n        this.constructor._setBrackets(this.settings);\n        this._calculateValuesToStringsKeys();\n\n        // Validate the settings. Both tests throws if necessary.\n        if (AutoNumericHelper.isEmptyObj(this.settings)) {\n            AutoNumericHelper.throwError('Unable to set the settings, those are invalid ; an empty object was given.');\n        }\n\n        this.constructor.validate(this.settings, false, options);\n\n        // Original settings saved for use when decimalPlacesShownOnFocus, divisorWhenUnfocused & showOnlyNumbersOnFocus options are being used\n        this._keepAnOriginalSettingsCopy();\n    }\n\n    /**\n     * Define if the negative or positive signs are allowed, and update the given settings object directly.\n     *\n     * @param {object} settings\n     * @private\n     */\n    static _setNegativePositiveSignPermissions(settings) {\n        settings.isNegativeSignAllowed = settings.minimumValue < 0;\n        settings.isPositiveSignAllowed = settings.maximumValue >= 0;\n    }\n\n    /**\n     * Convert the `value` parameter that can either be :\n     * - a real number,\n     * - a number represented in the scientific notation (i.e. -123.4567e-6)\n     * - a string representing a real number, or\n     * - a string representing a localized number (with specific group separators and decimal character),\n     * ...to a string representing a real 'javascript' number (i.e. '1234' or '1234.567').\n     *\n     * This function returns `NaN` if such conversion fails.\n     *\n     * @param {int|float|string} value\n     * @param {object} settings\n     * @returns {string|NaN}\n     */\n    static _toNumericValue(value, settings) {\n        //XXX Note; this function is static since we need to pass a `settings` object when calling the static `AutoNumeric.format()` method\n        let result;\n        if (AutoNumericHelper.isNumber(Number(value))) { // if (settings.decimalCharacter === '.' && AutoNumericHelper.isNumber(Number(value))) {\n            // The value has either already been stripped, or a 'real' javascript number is passed as a parameter\n            if (!AutoNumericHelper.isNumberStrict(value)) {\n                value = String(value).trim(); // cf. issue #721\n            }\n            result = AutoNumericHelper.scientificToDecimal(value);\n        } else {\n            // Else if it's a string that `Number()` cannot typecast, then we try to convert the localized numeric string to a numeric one\n            // Convert the value to a numeric string, stripping unnecessary characters in the process\n            result = this._convertToNumericString(value.toString(), settings);\n\n            // If the result is still not a numeric string, then we throw a warning\n            if (!AutoNumericHelper.isNumber(Number(result))) {\n                AutoNumericHelper.warning(`The given value \"${value}\" cannot be converted to a numeric one and therefore cannot be used appropriately.`, settings.showWarnings);\n                result = NaN;\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Return the pasted text that will be used, by stripping most non-numeric characters\n     *\n     * @param {string} text\n     * @returns {string}\n     */\n    _preparePastedText(text) {\n        return this.constructor._stripAllNonNumberCharacters(text, this.settings, true, this.isFocused);\n    }\n\n    /**\n     * Return TRUE if the given value (a number as a string) is within the range set in the settings `minimumValue` and `maximumValue`, FALSE otherwise.\n     *\n     * @param {string} value\n     * @param {object} parsedMinValue Parsed via the `parseStr()` function\n     * @param {object} parsedMaxValue Parsed via the `parseStr()` function\n     * @returns {boolean}\n     */\n    static _checkIfInRange(value, parsedMinValue, parsedMaxValue) {\n        const parsedValue = AutoNumericHelper.parseStr(value);\n        return AutoNumericHelper.testMinMax(parsedMinValue, parsedValue) > -1 && AutoNumericHelper.testMinMax(parsedMaxValue, parsedValue) < 1;\n    }\n\n    /**\n     * Update the selection values as well as resets the internal state of the current AutoNumeric object.\n     * This keeps tracks of the current selection and resets the 'processed' state.\n     *\n     * Note : This state can change between the keydown, keypress and keyup events, that's why\n     *        this function is called on each event handler.\n     *\n     * @private\n     */\n    _updateInternalProperties() {\n        this.selection = AutoNumericHelper.getElementSelection(this.domElement);\n        this.processed = false;\n    }\n\n    /**\n     * Update the `event.key` attribute that triggered the given event.\n     *\n     * `event.key` describes:\n     * - the key name (if a non-printable character),\n     * - or directly the character that result from the key press used to trigger the event.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\n     * The key list is described here:\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values\n     *\n     * @param {Event|KeyboardEvent} e\n     * @private\n     */\n    _updateEventKeyInfo(e) {\n        this.eventKey = AutoNumericHelper.character(e);\n    }\n\n    /**\n     * Save the unformatted element value.\n     * This is used in the 'cancellable' feature where the element value is saved on focus and input validation, to be used if the user wants to cancel his modifications by hitting the 'Escape' key.\n     *\n     * @private\n     */\n    _saveCancellableValue() {\n        this.savedCancellableValue = this.rawValue;\n    }\n\n    /**\n     * Set the text selection inside the input with the given start and end position.\n     *\n     * @param {int} start\n     * @param {int} end\n     * @private\n     */\n    _setSelection(start, end) {\n        //TODO use this function to replace the direct calls to `setElementSelection()`, wherever possible\n        start = Math.max(start, 0);\n        end = Math.min(end, AutoNumericHelper.getElementValue(this.domElement).length);\n        this.selection = {\n            start,\n            end,\n            length: end - start,\n        };\n\n        AutoNumericHelper.setElementSelection(this.domElement, start, end);\n    }\n\n    /**\n     * Set the caret position inside the input at the given position.\n     *\n     * @param {int} position\n     * @private\n     */\n    _setCaretPosition(position) {\n        this._setSelection(position, position);\n    }\n\n    /**\n     * Return an array containing the string parts located on the left and right side of the caret or selection.\n     * Those parts are left 'untouched', i.e. formatted by autoNumeric.\n     *\n     * @returns {[string, string]} The parts on the left and right of the caret or selection\n     * @private\n     */\n    _getLeftAndRightPartAroundTheSelection() {\n        const value = AutoNumericHelper.getElementValue(this.domElement);\n        const left = value.substring(0, this.selection.start);\n        const right = value.substring(this.selection.end, value.length);\n\n        return [left, right];\n    }\n\n    /**\n     * Return an array containing the string parts located on the left and right side of the caret or selection.\n     * Those parts are unformatted (stripped) of any non-numbers characters, and any trailing negative character is put back on the left hand side of the number.\n     *\n     * @returns {[string, string]} The parts on the left and right of the caret or selection, unformatted.\n     * @private\n     */\n    _getUnformattedLeftAndRightPartAroundTheSelection() {\n        let [left, right] = this._getLeftAndRightPartAroundTheSelection();\n        if (left === '' && right === '') {\n            return ['', ''];\n        }\n\n        // If changing the sign and `left` is equal to the number zero, prevent stripping the leading zero(s)\n        let stripZeros = true;\n        if ((this.eventKey === AutoNumericEnum.keyName.Hyphen || this.eventKey === AutoNumericEnum.keyName.Minus) && Number(left) === 0) {\n            stripZeros = false;\n        }\n\n        //TODO DRY that with `_normalizeParts()` -->\n        if (this.isTrailingNegative &&\n            ((AutoNumericHelper.isNegative(right, this.settings.negativeSignCharacter) && // The caret is placed on the left of the negative sign\n            !AutoNumericHelper.isNegative(left, this.settings.negativeSignCharacter)) ||\n            (right === '' && // ...or the caret is placed on the far right of the input (Fix issue #481)\n            AutoNumericHelper.isNegative(left, this.settings.negativeSignCharacter, true)))) {\n            left = left.replace(this.settings.negativeSignCharacter, '');\n            right = right.replace(this.settings.negativeSignCharacter, '');\n            // This is done here because `_getUnformattedLeftAndRightPartAroundTheSelection()` is called multiple times during the same key event, and at one point the left/right value has been normalized already..\n            left = left.replace('-', '');\n            right = right.replace('-', '');\n\n            // Then finally set back the normalized minus character at the right place\n            left = `-${left}`;\n        }\n\n        left = AutoNumeric._stripAllNonNumberCharactersExceptCustomDecimalChar(left, this.settings, stripZeros, this.isFocused);\n        right = AutoNumeric._stripAllNonNumberCharactersExceptCustomDecimalChar(right, this.settings, false, this.isFocused);\n\n        return [left, right];\n    }\n\n    /**\n     * Strip parts from excess characters and leading zeros.\n     *\n     * @param {string} left\n     * @param {string} right\n     * @returns {[*,*,*]}\n     * @private\n     */\n    _normalizeParts(left, right) {\n        //TODO Refactor with `_getUnformattedLeftAndRightPartAroundTheSelection` which share a lot of similar code\n        // If changing the sign and left is equal to the number zero - prevents stripping the leading zeros\n        let stripZeros = true;\n        if ((this.eventKey === AutoNumericEnum.keyName.Hyphen || this.eventKey === AutoNumericEnum.keyName.Minus) && Number(left) === 0) {\n            stripZeros = false;\n        }\n\n        if (this.isTrailingNegative &&\n            AutoNumericHelper.isNegative(right, this.settings.negativeSignCharacter) &&\n            !AutoNumericHelper.isNegative(left, this.settings.negativeSignCharacter)) {\n            // Only set the negative sign if the value is negative\n            left = `-${left}`;\n            right = right.replace(this.settings.negativeSignCharacter, '');\n        }\n\n        left = AutoNumeric._stripAllNonNumberCharactersExceptCustomDecimalChar(left, this.settings, stripZeros, this.isFocused);\n        right = AutoNumeric._stripAllNonNumberCharactersExceptCustomDecimalChar(right, this.settings, false, this.isFocused);\n\n        // Prevents multiple leading zeros from being entered\n        if (this.settings.leadingZero === AutoNumeric.options.leadingZero.deny &&\n            (this.eventKey === AutoNumericEnum.keyName.num0 || this.eventKey === AutoNumericEnum.keyName.numpad0) &&\n            Number(left) === 0 &&\n            // If `right` is not empty and the first character is not `decimalCharacter`\n            !AutoNumericHelper.contains(left, this.settings.decimalCharacter) && right !== '') {\n            left = left.substring(0, left.length - 1);\n        }\n\n        // Insert zero there is a leading dot\n        let newValue = left + right;\n        if (this.settings.decimalCharacter) {\n            const m = newValue.match(new RegExp(`^${this.regex.aNegRegAutoStrip}\\\\${this.settings.decimalCharacter}`));\n            if (m) {\n                left = left.replace(m[1], m[1] + '0');\n                newValue = left + right;\n            }\n        }\n\n        return [left, right, newValue];\n    }\n\n    /**\n     * Set the formatted element value as well as the `rawValue`.\n     * This returns `true` if the element and raw value have been modified, `false` otherwise.\n     * This method also adjust the caret position according to the `leadingZero` option and the normalized value. //TODO What about the cursor *selection*?\n     *\n     * @param {string} left\n     * @param {string} right\n     * @param {boolean} isPaste\n     * @returns {boolean}\n     * @private\n     */\n    _setValueParts(left, right, isPaste = false) {\n        const [normalizedLeft, normalizedRight, normalizedNewValue] = this._normalizeParts(left, right);\n        const [minTest, maxTest] = AutoNumeric._checkIfInRangeWithOverrideOption(normalizedNewValue, this.settings);\n\n        if (minTest && maxTest) {\n            // First, set the raw value\n            const roundedRawValue = AutoNumeric._truncateDecimalPlaces(normalizedNewValue, this.settings, isPaste, this.settings.decimalPlacesRawValue);\n            const testValue = roundedRawValue.replace(this.settings.decimalCharacter, '.');\n\n            if (testValue === '' || testValue === this.settings.negativeSignCharacter) {\n                let valueToSetOnEmpty;\n                switch (this.settings.emptyInputBehavior) {\n                    case AutoNumeric.options.emptyInputBehavior.focus:\n                    case AutoNumeric.options.emptyInputBehavior.press:\n                    case AutoNumeric.options.emptyInputBehavior.always:\n                        valueToSetOnEmpty = '';\n                        break;\n                    case AutoNumeric.options.emptyInputBehavior.min:\n                        valueToSetOnEmpty = this.settings.minimumValue;\n                        break;\n                    case AutoNumeric.options.emptyInputBehavior.max:\n                        valueToSetOnEmpty = this.settings.maximumValue;\n                        break;\n                    case AutoNumeric.options.emptyInputBehavior.zero:\n                        valueToSetOnEmpty = '0';\n                        break;\n                    case AutoNumeric.options.emptyInputBehavior.null:\n                        valueToSetOnEmpty = null;\n                        break;\n                    // When `emptyInputBehavior` is a number or a string representing a number\n                    default:\n                        valueToSetOnEmpty = this.settings.emptyInputBehavior;\n                }\n\n                this._setRawValue(valueToSetOnEmpty);\n            } else {\n                this._setRawValue(this._trimLeadingAndTrailingZeros(testValue));\n            }\n\n            // Then set the formatted value\n            const roundedValueToShow = AutoNumeric._truncateDecimalPlaces(normalizedNewValue, this.settings, isPaste, this.settings.decimalPlacesShownOnFocus);\n            let position = normalizedLeft.length;\n            if (position > roundedValueToShow.length) {\n                position = roundedValueToShow.length;\n            }\n\n            // Make sure when the user enter a '0' on the far left with a leading zero option set to 'deny', that the caret does not move since the input is dropped (fix issue #283)\n            if (position === 1 && normalizedLeft === '0' && this.settings.leadingZero === AutoNumeric.options.leadingZero.deny) {\n                // If the user enter `0`, then the caret is put on the right side of it (Fix issue #299)\n                if (normalizedRight === '' || normalizedLeft === '0' && normalizedRight !== '') {\n                    position = 1;\n                } else {\n                    position = 0;\n                }\n            }\n\n            this._setElementValue(roundedValueToShow, false);\n            this._setCaretPosition(position);\n\n            return true;\n        }\n\n        this._triggerRangeEvents(minTest, maxTest);\n\n        return false;\n    }\n\n    /**\n     * Helper function for `_expandSelectionOnSign()`.\n     *\n     * @returns {Array} Array containing [signPosition, currencySymbolPosition] of a formatted value\n     * @private\n     */\n    _getSignPosition() {\n        let result;\n        if (this.settings.currencySymbol) {\n            const currencySymbolLen = this.settings.currencySymbol.length;\n            const value = AutoNumericHelper.getElementValue(this.domElement);\n            if (this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.prefix) {\n                const hasNeg = this.settings.negativeSignCharacter && value && value.charAt(0) === this.settings.negativeSignCharacter;\n                if (hasNeg) {\n                    result = [1, currencySymbolLen + 1];\n                } else {\n                    result = [0, currencySymbolLen];\n                }\n            } else {\n                const valueLen = value.length;\n                result = [valueLen - currencySymbolLen, valueLen];\n            }\n        } else {\n            result = [1000, -1];\n        }\n\n        return result;\n    }\n\n    /**\n     * Expands selection to cover whole sign\n     * Prevents partial deletion/copying/overwriting of a sign\n     * @private\n     */\n    _expandSelectionOnSign() {\n        const [signPosition, currencySymbolPosition] = this._getSignPosition();\n        const selection = this.selection;\n\n        // If selection catches something except sign and catches only space from sign\n        if (selection.start < currencySymbolPosition && selection.end > signPosition) {\n            // Then select without empty space\n            if ((selection.start < signPosition || selection.end > currencySymbolPosition) &&\n                AutoNumericHelper.getElementValue(this.domElement).substring(Math.max(selection.start, signPosition), Math.min(selection.end, currencySymbolPosition))\n                    .match(/^\\s*$/)) {\n                if (selection.start < signPosition) {\n                    this._setSelection(selection.start, signPosition);\n                } else {\n                    this._setSelection(currencySymbolPosition, selection.end);\n                }\n            } else {\n                // Else select with whole sign\n                this._setSelection(Math.min(selection.start, signPosition), Math.max(selection.end, currencySymbolPosition));\n            }\n        }\n    }\n\n    /**\n     * Try to strip pasted value to digits\n     */\n    _checkPaste() {\n        // Do not process anything if the value has already been formatted\n        if (this.formatted) {\n            return;\n        }\n\n        if (!AutoNumericHelper.isUndefined(this.valuePartsBeforePaste)) {\n            const oldParts = this.valuePartsBeforePaste;\n            const [left, right] = this._getLeftAndRightPartAroundTheSelection();\n\n            // Try to strip the pasted value first\n            delete this.valuePartsBeforePaste;\n\n            const modifiedLeftPart = left.substr(0, oldParts[0].length) + AutoNumeric._stripAllNonNumberCharactersExceptCustomDecimalChar(left.substr(oldParts[0].length), this.settings, true, this.isFocused);\n            if (!this._setValueParts(modifiedLeftPart, right, true)) {\n                this._setElementValue(oldParts.join(''), false);\n                this._setCaretPosition(oldParts[0].length);\n            }\n        }\n    }\n\n    /**\n     * Return `true` if the given key should be ignored or not.\n     *\n     * @param {string} eventKeyName\n     * @returns {boolean}\n     * @private\n     */\n    static _shouldSkipEventKey(eventKeyName) {\n        const isFnKeys = AutoNumericHelper.isInArray(eventKeyName, AutoNumericEnum.keyName._allFnKeys);\n        const isOSKeys = eventKeyName === AutoNumericEnum.keyName.OSLeft || eventKeyName === AutoNumericEnum.keyName.OSRight;\n        const isContextMenu = eventKeyName === AutoNumericEnum.keyName.ContextMenu;\n        const isSomeNonPrintableKeys = AutoNumericHelper.isInArray(eventKeyName, AutoNumericEnum.keyName._someNonPrintableKeys);\n        const isOtherNonPrintableKeys = eventKeyName === AutoNumericEnum.keyName.NumLock ||\n            eventKeyName === AutoNumericEnum.keyName.ScrollLock ||\n            eventKeyName === AutoNumericEnum.keyName.Insert ||\n            eventKeyName === AutoNumericEnum.keyName.Command;\n        const isUnrecognizableKeys = eventKeyName === AutoNumericEnum.keyName.Unidentified;\n\n        return isFnKeys || isOSKeys || isContextMenu || isSomeNonPrintableKeys || isUnrecognizableKeys || isOtherNonPrintableKeys;\n    }\n\n    /**\n     * Process copying, cutting and pasting, as well as undo/redoing and cursor moving.\n     * Return `true` if further processing should not be performed.\n     *\n     * @param {KeyboardEvent} e\n     * @returns {boolean}\n     * @private\n     */\n    _processNonPrintableKeysAndShortcuts(e) {\n        // Catch the ctrl up on ctrl-v\n        if (((e.ctrlKey || e.metaKey) && e.type === 'keyup' && !AutoNumericHelper.isUndefined(this.valuePartsBeforePaste)) || (e.shiftKey && this.eventKey === AutoNumericEnum.keyName.Insert)) {\n            //TODO Move this test inside the `onKeyup` handler\n            this._checkPaste();\n\n            return false;\n        }\n\n        // Skip all function keys (F1-F12), Windows keys, tab and other special keys\n        if (this.constructor._shouldSkipEventKey(this.eventKey)) {\n            return true;\n        }\n\n        // If a \"Select all\" keyboard shortcut is detected (ctrl + a)\n        if ((e.ctrlKey || e.metaKey) && this.eventKey === AutoNumericEnum.keyName.a) {\n            if (this.settings.selectNumberOnly) {\n                // `preventDefault()` is used here to prevent the browser to first select all the input text (including the currency sign), otherwise we would see that whole selection first in a flash, then the selection with only the number part without the currency sign.\n                e.preventDefault();\n                //TODO replace `selectNumber` by `select`?\n                this.selectNumber();\n            }\n\n            return true;\n        }\n\n        // If a \"Copy\", \"Paste\" or \"Cut\" keyboard shortcut is detected (respectively 'ctrl + c', 'ctrl + v' or 'ctrl + x')\n        if ((e.ctrlKey || e.metaKey) &&\n            (this.eventKey === AutoNumericEnum.keyName.c ||\n             this.eventKey === AutoNumericEnum.keyName.v ||\n             this.eventKey === AutoNumericEnum.keyName.x)) {\n            if (e.type === 'keydown') {\n                this._expandSelectionOnSign();\n            }\n\n            // Try to prevent wrong paste\n            if (this.eventKey === AutoNumericEnum.keyName.v || this.eventKey === AutoNumericEnum.keyName.Insert) {\n                if (e.type === 'keydown' || e.type === 'keypress') {\n                    if (AutoNumericHelper.isUndefined(this.valuePartsBeforePaste)) {\n                        this.valuePartsBeforePaste = this._getLeftAndRightPartAroundTheSelection();\n                    }\n                } else {\n                    this._checkPaste();\n                }\n            }\n\n            return e.type === 'keydown' || e.type === 'keypress' || this.eventKey === AutoNumericEnum.keyName.c;\n        }\n\n\n        // If the ctrl/meta key is used (during the undo shortcut for instance)\n        if (e.ctrlKey || e.metaKey) {\n            return !(this.eventKey === AutoNumericEnum.keyName.Z || this.eventKey === AutoNumericEnum.keyName.z);\n        }\n\n        // Jump over the thousand separator\n        //TODO Move this test inside the `onKeydown` handler\n        if (this.eventKey === AutoNumericEnum.keyName.LeftArrow || this.eventKey === AutoNumericEnum.keyName.RightArrow) {\n            if (e.type === 'keydown' && !e.shiftKey) {\n                const value = AutoNumericHelper.getElementValue(this.domElement);\n                if (this.eventKey === AutoNumericEnum.keyName.LeftArrow &&\n                    (value.charAt(this.selection.start - 2) === this.settings.digitGroupSeparator ||\n                    value.charAt(this.selection.start - 2) === this.settings.decimalCharacter)) {\n                    this._setCaretPosition(this.selection.start - 1);\n                } else if (this.eventKey === AutoNumericEnum.keyName.RightArrow &&\n                    (value.charAt(this.selection.start + 1) === this.settings.digitGroupSeparator ||\n                    value.charAt(this.selection.start + 1) === this.settings.decimalCharacter)) {\n                    this._setCaretPosition(this.selection.start + 1);\n                }\n            }\n\n            return true;\n        }\n\n        return AutoNumericHelper.isInArray(this.eventKey, AutoNumericEnum.keyName._directionKeys);\n    }\n\n    /**\n     * Process deletion of characters when the minus sign is to the right of the numeric characters.\n     *\n     * @param {string[]} leftAndRight The parts on the left and on the right of the caret or selection as an array with [left, right]\n     * @returns {string[]} Processed left and right as an array with [left, right]\n     * @private\n     */\n    _processCharacterDeletionIfTrailingNegativeSign([left, right]) {\n        const value = AutoNumericHelper.getElementValue(this.domElement);\n        const isValNegative = AutoNumericHelper.isNegative(value, this.settings.negativeSignCharacter);\n\n        if (this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.prefix && this.settings.negativePositiveSignPlacement === AutoNumeric.options.negativePositiveSignPlacement.suffix) {\n            if (this.eventKey === AutoNumericEnum.keyName.Backspace) {\n                this.caretFix = (this.selection.start >= value.indexOf(this.settings.suffixText) && this.settings.suffixText !== '');\n                if (value.charAt(this.selection.start - 1) === '-') {\n                    left = left.substring(1);\n                } else if (this.selection.start <= value.length - this.settings.suffixText.length) {\n                    left = left.substring(0, left.length - 1);\n                }\n            } else {\n                this.caretFix = (this.selection.start >= value.indexOf(this.settings.suffixText) && this.settings.suffixText !== '');\n                if (this.selection.start >= value.indexOf(this.settings.currencySymbol) + this.settings.currencySymbol.length) {\n                    right = right.substring(1, right.length);\n                }\n                if (AutoNumericHelper.isNegative(left, this.settings.negativeSignCharacter) && value.charAt(this.selection.start) === '-') {\n                    left = left.substring(1);\n                }\n            }\n        }\n\n        if (this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.suffix) {\n            switch (this.settings.negativePositiveSignPlacement) {\n                case AutoNumeric.options.negativePositiveSignPlacement.left:\n                    this.caretFix = (this.selection.start >= value.indexOf(this.settings.negativeSignCharacter) + this.settings.negativeSignCharacter.length);\n                    if (this.eventKey === AutoNumericEnum.keyName.Backspace) {\n                        if (this.selection.start === (value.indexOf(this.settings.negativeSignCharacter) + this.settings.negativeSignCharacter.length) && isValNegative) {\n                            left = left.substring(1);\n                        } else if (left !== '-' && ((this.selection.start <= value.indexOf(this.settings.negativeSignCharacter)) || !isValNegative)) {\n                            left = left.substring(0, left.length - 1);\n                        }\n                    } else {\n                        if (left[0] === '-') {\n                            right = right.substring(1);\n                        }\n                        if (this.selection.start === value.indexOf(this.settings.negativeSignCharacter) && isValNegative) {\n                            left = left.substring(1);\n                        }\n                    }\n                    break;\n                case AutoNumeric.options.negativePositiveSignPlacement.right:\n                    this.caretFix = (this.selection.start >= value.indexOf(this.settings.negativeSignCharacter) + this.settings.negativeSignCharacter.length);\n                    if (this.eventKey === AutoNumericEnum.keyName.Backspace) {\n                        if (this.selection.start === (value.indexOf(this.settings.negativeSignCharacter) + this.settings.negativeSignCharacter.length)) {\n                            left = left.substring(1);\n                        } else if (left !== '-' && this.selection.start <= (value.indexOf(this.settings.negativeSignCharacter) - this.settings.currencySymbol.length)) {\n                            left = left.substring(0, left.length - 1);\n                        } else if (left !== '' && !isValNegative) {\n                            left = left.substring(0, left.length - 1);\n                        }\n                    } else {\n                        this.caretFix = (this.selection.start >= value.indexOf(this.settings.currencySymbol) && this.settings.currencySymbol !== '');\n                        if (this.selection.start === value.indexOf(this.settings.negativeSignCharacter)) {\n                            left = left.substring(1);\n                        }\n\n                        right = right.substring(1);\n                    }\n                    break;\n            }\n        }\n\n        return [left, right];\n    }\n\n    /**\n     * Process the deletion of characters.\n     * Returns `true` if the deletion is allowed (within the min and max range, according to the `overrideMinMaxLimits` option), `false` otherwise.\n     *\n     * @param {Event} e\n     * @returns {boolean}\n     */\n    _processCharacterDeletion(e) {\n        let left;\n        let right;\n\n        if (!this.selection.length) {\n            [left, right] = this._getUnformattedLeftAndRightPartAroundTheSelection();\n            if (left === '' && right === '') {\n                this.throwInput = false;\n            }\n\n            if (this.isTrailingNegative && AutoNumericHelper.isNegative(AutoNumericHelper.getElementValue(this.domElement), this.settings.negativeSignCharacter)) {\n                [left, right] = this._processCharacterDeletionIfTrailingNegativeSign([left, right]);\n            } else {\n                if (this.eventKey === AutoNumericEnum.keyName.Backspace) {\n                    left = left.substring(0, left.length - 1);\n                } else {\n                    right = right.substring(1, right.length);\n                }\n            }\n        } else {\n            this._expandSelectionOnSign();\n            [left, right] = this._getUnformattedLeftAndRightPartAroundTheSelection();\n        }\n\n        if (!this.constructor._isWithinRangeWithOverrideOption(`${left}${right}`, this.settings)) {\n            // If the result with the deletion would be out of the range, we prevent it\n            return false;\n        }\n        if (AutoNumericHelper.getElementValue(e.target) === this.settings.currencySymbol) {\n            return false;\n        }\n\n        this._setValueParts(left, right);\n\n        return true;\n    }\n\n    /**\n     * Return `true` if a decimal character is allowed to be typed.\n     * If the number of decimal places shown on focus is zero, then the decimal character is not allowed.\n     *\n     * @returns {boolean}\n     * @private\n     */\n    _isDecimalCharacterInsertionAllowed() {\n        return String(this.settings.decimalPlacesShownOnFocus) !== String(AutoNumeric.options.decimalPlacesShownOnFocus.none) &&\n            String(this.settings.decimalPlaces) !== String(AutoNumeric.options.decimalPlaces.none);\n    }\n\n    /**\n     * Return `true` if the key is allowed.\n     * This function decides if the key pressed should be dropped or accepted, and modify the value 'on-the-fly' accordingly.\n     * //TODO This should use another function in order to separate the test and the modification\n     *\n     * @returns {boolean}\n     */\n    _processCharacterInsertion() {\n        let [left, right] = this._getUnformattedLeftAndRightPartAroundTheSelection();\n        if (this.eventKey !== AutoNumericEnum.keyName.AndroidDefault) {\n            this.throwInput = true;\n        }\n\n        // Start rules when the decimal character key is pressed always use numeric pad dot to insert decimal separator\n        // Do not allow decimal character if no decimal part allowed\n        if (this.eventKey === this.settings.decimalCharacter ||\n            (this.settings.decimalCharacterAlternative && this.eventKey === this.settings.decimalCharacterAlternative)) {\n            if (!this._isDecimalCharacterInsertionAllowed() || !this.settings.decimalCharacter) {\n                return false;\n            }\n\n            if (this.settings.alwaysAllowDecimalCharacter) {\n                // Remove any previous decimal character\n                left = left.replace(this.settings.decimalCharacter, '');\n                right = right.replace(this.settings.decimalCharacter, '');\n            } else {\n                // Do not allow a decimal character if another decimal character is already present\n                if (AutoNumericHelper.contains(left, this.settings.decimalCharacter)) {\n                    return true;\n                }\n\n                // Prevent adding a decimal character at the far right of the number\n                if (right.indexOf(this.settings.decimalCharacter) > 0) {\n                    return true;\n                }\n\n                // Remove the decimal character if found on the far left of the right part\n                if (right.indexOf(this.settings.decimalCharacter) === 0) {\n                    right = right.substr(1);\n                }\n            }\n\n            // If the user is trying to add a decimal character on the far left of the number, we allow it\n            if (this.settings.negativeSignCharacter && AutoNumericHelper.contains(right, this.settings.negativeSignCharacter)) {\n                // We need however to move the negative sign from the right to the left part\n                left = `${this.settings.negativeSignCharacter}${left}`;\n                right = right.replace(this.settings.negativeSignCharacter, '');\n            }\n\n            this._setValueParts(left + this.settings.decimalCharacter, right);\n\n            return true;\n        }\n\n        // Prevent entering the minus sign if it's not allowed (Note: `this.settings.isNegativeSignAllowed` is only set to `true` if the minimumValue is lower than zero, allowing negative numbers to be entered)\n        if ((this.eventKey === '-' || this.eventKey === '+') && this.settings.isNegativeSignAllowed) {\n            // Here, the left and right parts have been normalized already, hence the minus sign usage\n            if (left === '' && AutoNumericHelper.contains(right, '-')) {\n                // The value is originally negative (with a trailing negative sign)\n                if (this.settings.negativePositiveSignBehavior || (!this.settings.negativePositiveSignBehavior && this.eventKey === '+')) {\n                    right = right.replace('-', '');\n                }\n            } else if (AutoNumericHelper.isNegativeStrict(left, '-')) {\n                // The value is originally negative (with a leading negative sign)\n                // Remove the negative sign, effectively converting the value to a positive one\n                if (this.settings.negativePositiveSignBehavior || (!this.settings.negativePositiveSignBehavior && this.eventKey === '+')) {\n                    left = left.replace('-', '');\n                }\n            } else if (this.settings.negativePositiveSignBehavior || (!this.settings.negativePositiveSignBehavior && this.eventKey === '-')) {\n                // The value is originally positive, so we toggle the state to a negative one (unformatted, which means even with a trailing negative sign, we add the minus sign on the far left)\n                left = `${this.settings.negativeSignCharacter}${left}`;\n            }\n\n            this._setValueParts(left, right);\n\n            return true;\n        }\n\n        const eventNumber = Number(this.eventKey);\n        if (eventNumber >= 0 && eventNumber <= 9) {\n            // If the user tries to insert a digit\n            if (this.settings.isNegativeSignAllowed && left === '' && AutoNumericHelper.contains(right, '-')) {\n                // ...and that digit is before the minus sign\n                left = '-';\n                right = right.substring(1, right.length);\n            }\n\n            if (this.settings.maximumValue <= 0 &&\n                this.settings.minimumValue < this.settings.maximumValue &&\n                !AutoNumericHelper.contains(AutoNumericHelper.getElementValue(this.domElement), this.settings.negativeSignCharacter) &&\n                this.eventKey !== '0') {\n                left = `-${left}`;\n            }\n\n            this._setValueParts(`${left}${this.eventKey}`, right);\n\n            return true;\n        }\n\n        // Prevent any other characters\n        this.throwInput = false;\n\n        return false;\n    }\n\n    /**\n     * Formatting of just processed value while keeping the cursor position\n     *\n     * @param {Event} e\n     * @private\n     */\n    _formatValue(e) {\n        //TODO Break apart and simplify this really long function\n        const elementValue = AutoNumericHelper.getElementValue(this.domElement);\n        let [left] = this._getUnformattedLeftAndRightPartAroundTheSelection();\n\n        // No grouping separator and no currency sign\n        if ((this.settings.digitGroupSeparator  === '' || (this.settings.digitGroupSeparator !== ''  && !AutoNumericHelper.contains(elementValue, this.settings.digitGroupSeparator))) &&\n            (this.settings.currencySymbol === '' || (this.settings.currencySymbol !== '' && !AutoNumericHelper.contains(elementValue, this.settings.currencySymbol)))) {\n            let [subParts] = elementValue.split(this.settings.decimalCharacter);\n            let negativeSign = '';\n            if (AutoNumericHelper.isNegative(subParts, this.settings.negativeSignCharacter)) {\n                negativeSign = this.settings.negativeSignCharacter;\n                subParts = subParts.replace(this.settings.negativeSignCharacter, '');\n                left = left.replace('-', ''); // Here we modify the unformatted value (with the 'normal' minus sign)\n            }\n\n            // Strip leading zero on positive value if needed\n            if (negativeSign === '' && subParts.length > this.settings.mIntPos && left.charAt(0) === '0') {\n                left = left.slice(1);\n            }\n\n            // Strip leading zero on negative value if needed\n            if (negativeSign === this.settings.negativeSignCharacter && subParts.length > this.settings.mIntNeg && left.charAt(0) === '0') {\n                left = left.slice(1);\n            }\n\n            if (!this.isTrailingNegative) { // Only add the minus sign if it's needed on that side of the numbers\n                left = `${negativeSign}${left}`;\n            }\n        }\n\n        const value = this.constructor._addGroupSeparators(elementValue, this.settings, this.isFocused, this.rawValue);\n        let position = value.length;\n        if (value) {\n            // Prepare regexp which searches for cursor position from unformatted left part\n            const leftAr = left.split('');\n\n            // Fixes caret position with trailing minus sign\n            if ((this.settings.negativePositiveSignPlacement === AutoNumeric.options.negativePositiveSignPlacement.suffix ||\n                (this.settings.negativePositiveSignPlacement !== AutoNumeric.options.negativePositiveSignPlacement.prefix && this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.suffix)) &&\n                leftAr[0] === this.settings.negativeSignCharacter && !this.settings.isNegativeSignAllowed) {\n                leftAr.shift(); // Remove the negative sign character\n\n                if ((this.eventKey === AutoNumericEnum.keyName.Backspace || this.eventKey === AutoNumericEnum.keyName.Delete) &&\n                    this.caretFix) {\n                    if ((this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.suffix && this.settings.negativePositiveSignPlacement === AutoNumeric.options.negativePositiveSignPlacement.left) ||\n                        (this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.prefix && this.settings.negativePositiveSignPlacement === AutoNumeric.options.negativePositiveSignPlacement.suffix)) {\n                        leftAr.push(this.settings.negativeSignCharacter);\n                        this.caretFix = e.type === 'keydown';\n                    }\n\n                    if (this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.suffix &&\n                        this.settings.negativePositiveSignPlacement === AutoNumeric.options.negativePositiveSignPlacement.right) {\n                        const signParts = this.settings.currencySymbol.split('');\n                        const escapeChr = ['\\\\', '^', '$', '.', '|', '?', '*', '+', '(', ')', '['];\n                        const escapedParts = [];\n                        signParts.forEach((i, miniParts) => {\n                            miniParts = signParts[i];\n                            if (AutoNumericHelper.isInArray(miniParts, escapeChr)) {\n                                escapedParts.push('\\\\' + miniParts);\n                            } else {\n                                escapedParts.push(miniParts);\n                            }\n                        });\n\n                        if (this.eventKey === AutoNumericEnum.keyName.Backspace && this.settings.negativeSignCharacter === '-') {\n                            escapedParts.push('-');\n                        }\n\n                        // Pushing the escaped sign\n                        leftAr.push(escapedParts.join(''));\n                        this.caretFix = e.type === 'keydown';\n                    }\n                }\n            }\n\n            for (let i = 0; i < leftAr.length; i++) {\n                if (!leftAr[i].match('\\\\d')) {\n                    leftAr[i] = '\\\\' + leftAr[i]; // Escapes the decimal character\n                }\n            }\n\n            // Generates the regex that will search for the cursor position in the formatted value\n            let leftReg;\n            if (this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.suffix) {\n                leftReg = new RegExp(`^.*?${leftAr.join('.*?')}`);\n            } else { // prefix is assumed\n                leftReg = new RegExp(`^.*?[${this.settings.currencySymbol}]*${leftAr.join('.*?')}`); // Fixes issue #647 when using a currency that has some characters in it that matches the value we just entered (i.e. numbers in the currency)\n            }\n\n            // Search cursor position in formatted value\n            const newLeft = value.match(leftReg);\n            if (newLeft) {\n                position = newLeft[0].length;\n\n                // If the positive sign is shown, calculate the caret position accordingly\n                if (this.settings.showPositiveSign) {\n                    if (position === 0 && newLeft.input.charAt(0) === this.settings.positiveSignCharacter) {\n                        position = (newLeft.input.indexOf(this.settings.currencySymbol) === 1) ? this.settings.currencySymbol.length + 1 : 1;\n                    }\n\n                    if (position === 0 && newLeft.input.charAt(this.settings.currencySymbol.length) === this.settings.positiveSignCharacter) {\n                        position = this.settings.currencySymbol.length + 1;\n                    }\n                }\n\n                // If we are just before the sign which is in prefix position\n                if (((position === 0 && value.charAt(0) !== this.settings.negativeSignCharacter) || (position === 1 && value.charAt(0) === this.settings.negativeSignCharacter)) && this.settings.currencySymbol && this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.prefix) {\n                    // Place caret after prefix sign\n                    //TODO Should the test be 'isNegative' instead of 'isNegativeStrict' in order to search for '-' everywhere in the string?\n                    position = this.settings.currencySymbol.length + (AutoNumericHelper.isNegativeStrict(value, this.settings.negativeSignCharacter) ? 1 : 0);\n                }\n            } else {\n                if (this.settings.currencySymbol && this.settings.currencySymbolPlacement === AutoNumeric.options.currencySymbolPlacement.suffix) {\n                    // If we could not find a place for cursor and have a sign as a suffix\n                    // Place caret before suffix currency sign\n                    position -= this.settings.currencySymbol.length;\n                }\n\n                if (this.settings.suffixText) {\n                    // If we could not find a place for cursor and have a suffix\n                    // Place caret before suffix\n                    position -= this.settings.suffixText.length;\n                }\n            }\n        }\n\n        // Only update the value if it has changed. This prevents modifying the selection, if any.\n        if (value !== elementValue) {\n            this._setElementValue(value, false);\n            this._setCaretPosition(position);\n        }\n\n        this.formatted = true; //TODO Rename `this.formatted` to `this._formatExecuted`, since it's possible this function does not need to format anything (in the case where the keycode is dropped for instance)\n    }\n\n    /**\n     * Serialize the form child <input> element values to a string, or an Array.\n     * The output format is defined with the `formatType` argument.\n     * This is loosely based upon http://stackoverflow.com/a/40705993/2834898.\n     *\n     * @param {HTMLFormElement} form\n     * @param {boolean} intoAnArray If `true`, instead of generating a string, it generates an Array.\n     * @param {string} formatType If `'unformatted'`, then the AutoNumeric elements values are unformatted, if `'localized'`, then the AutoNumeric elements values are localized, and if `'formatted'`, then the AutoNumeric elements values are kept formatted. In either way, this function does not modify the value of each DOM element, but only affect the value that is returned by that serialize function.\n     * @param {string} serializedSpaceCharacter Can either be the '+' character, or the '%20' string.\n     * @param {string|null} forcedOutputFormat If set, then this is the format that is used for the localization, instead of the default `outputFormat` option.\n     * @returns {string|Array}\n     * @private\n     */\n    static _serialize(form, intoAnArray = false, formatType = 'unformatted', serializedSpaceCharacter = '+', forcedOutputFormat = null) {\n        const result = [];\n\n        if (typeof form === 'object' && form.nodeName.toLowerCase() === 'form') {\n            Array.prototype.slice.call(form.elements).forEach(element => {\n                if (element.name &&\n                    !element.disabled &&\n                    ['file', 'reset', 'submit', 'button'].indexOf(element.type) === -1) {\n                    if (element.type === 'select-multiple') {\n                        Array.prototype.slice.call(element.options).forEach(option => {\n                            if (option.selected) {\n                                //TODO Should we unformat/format/localize the selection option (which be default should be read-only)?\n                                if (intoAnArray) {\n                                    result.push({ name: element.name, value: option.value });\n                                } else { // into a string\n                                    result.push(`${encodeURIComponent(element.name)}=${encodeURIComponent(option.value)}`);\n                                }\n                            }\n                        });\n                    } else if (['checkbox', 'radio'].indexOf(element.type) === -1 || element.checked) {\n                        let valueResult;\n                        if (this.isManagedByAutoNumeric(element)) {\n                            let anObject;\n                            switch (formatType) {\n                                case 'unformatted':\n                                    anObject = this.getAutoNumericElement(element);\n                                    if (!AutoNumericHelper.isNull(anObject)) {\n                                        valueResult = this.unformat(element, anObject.getSettings());\n                                    }\n\n                                    break;\n                                case 'localized':\n                                    anObject = this.getAutoNumericElement(element);\n                                    if (!AutoNumericHelper.isNull(anObject)) {\n                                        // Here I need to clone the setting object, otherwise I would modify it when changing the `outputFormat` option value\n                                        const currentSettings = AutoNumericHelper.cloneObject(anObject.getSettings());\n                                        if (!AutoNumericHelper.isNull(forcedOutputFormat)) {\n                                            currentSettings.outputFormat = forcedOutputFormat;\n                                        }\n\n                                        valueResult = this.localize(element, currentSettings);\n                                    }\n\n                                    break;\n                                case 'formatted':\n                                default:\n                                    valueResult = element.value;\n                            }\n                        } else {\n                            valueResult = element.value;\n                        }\n\n                        if (AutoNumericHelper.isUndefined(valueResult)) {\n                            AutoNumericHelper.throwError('This error should never be hit. If it has, something really wrong happened!');\n                        }\n\n                        if (intoAnArray) {\n                            result.push({ name: element.name, value: valueResult });\n                        } else { // into a string\n                            result.push(`${encodeURIComponent(element.name)}=${encodeURIComponent(valueResult)}`);\n                        }\n                    }\n                }\n            });\n        }\n\n        let finalResult;\n\n        if (intoAnArray) {\n            // Result as an Array\n            // Note: `serializedSpaceCharacter` does not affect the array result since we do not change the space character for this one\n            finalResult = result;\n        } else {\n            // Result as a string\n            finalResult = result.join('&');\n\n            if ('+' === serializedSpaceCharacter) {\n                finalResult = finalResult.replace(/%20/g, '+');\n            }\n        }\n\n        return finalResult;\n    }\n\n    /**\n     * Serialize the form values to a string, outputting numeric strings for each AutoNumeric-managed element values.\n     *\n     * @param {HTMLFormElement} form\n     * @param {string} serializedSpaceCharacter\n     * @returns {string}\n     */\n    static _serializeNumericString(form, serializedSpaceCharacter = '+') {\n        return this._serialize(form, false, 'unformatted', serializedSpaceCharacter);\n    }\n\n    /**\n     * Serialize the form values to a string, outputting the formatted value as strings for each AutoNumeric-managed elements.\n     *\n     * @param {HTMLFormElement} form\n     * @param {string} serializedSpaceCharacter\n     * @returns {string}\n     */\n    static _serializeFormatted(form, serializedSpaceCharacter = '+') {\n        return this._serialize(form, false, 'formatted', serializedSpaceCharacter);\n    }\n\n    /**\n     * Serialize the form values to a string, outputting localized strings for each AutoNumeric-managed element values.\n     *\n     * @param {HTMLFormElement} form\n     * @param {string} serializedSpaceCharacter\n     * @param {string|null} forcedOutputFormat If set, then this is the format that is used for the localization, instead of the default `outputFormat` option.\n     * @returns {string}\n     */\n    static _serializeLocalized(form, serializedSpaceCharacter = '+', forcedOutputFormat = null) {\n        return this._serialize(form, false, 'localized', serializedSpaceCharacter, forcedOutputFormat);\n    }\n\n    /**\n     * Generate an Array with the form values, outputting numeric strings for each AutoNumeric-managed element values.\n     *\n     * @param {HTMLFormElement} form\n     * @param {string} serializedSpaceCharacter\n     * @returns {Array}\n     */\n    static _serializeNumericStringArray(form, serializedSpaceCharacter = '+') {\n        return this._serialize(form, true, 'unformatted', serializedSpaceCharacter);\n    }\n\n    /**\n     * Generate an Array with the form values, outputting the formatted value as strings for each AutoNumeric-managed elements.\n     *\n     * @param {HTMLFormElement} form\n     * @param {string} serializedSpaceCharacter\n     * @returns {Array}\n     */\n    static _serializeFormattedArray(form, serializedSpaceCharacter = '+') {\n        return this._serialize(form, true, 'formatted', serializedSpaceCharacter);\n    }\n\n    /**\n     * Generate an Array with the form values, outputting localized strings for each AutoNumeric-managed element values.\n     *\n     * @param {HTMLFormElement} form\n     * @param {string} serializedSpaceCharacter\n     * @param {string|null} forcedOutputFormat If set, then this is the format that is used for the localization, instead of the default `outputFormat` option.\n     * @returns {Array}\n     */\n    static _serializeLocalizedArray(form, serializedSpaceCharacter = '+', forcedOutputFormat = null) {\n        return this._serialize(form, true, 'localized', serializedSpaceCharacter, forcedOutputFormat);\n    }\n}\n\n/**\n * Initialize multiple DOM elements in one call (and possibly pass multiple values that will be mapped to each DOM element).\n *\n * @example\n * // Init multiple DOM elements in one call (and possibly pass multiple values that will be mapped to each DOM element)\n * [anElement1, anElement2, anElement3] = AutoNumeric.multiple([domElement1, domElement2, domElement3], { options });\n * [anElement1, anElement2, anElement3] = AutoNumeric.multiple([domElement1, domElement2, domElement3], [{ options }, 'euroPos']);\n * [anElement1, anElement2, anElement3] = AutoNumeric.multiple([domElement1, domElement2, domElement3], 12345.789, { options });\n * [anElement1, anElement2, anElement3] = AutoNumeric.multiple([domElement1, domElement2, domElement3], 12345.789, [{ options }, 'euroPos']);\n * [anElement1, anElement2, anElement3] = AutoNumeric.multiple.french([domElement1, domElement2, domElement3], [12345.789, 234.78, null], { options });\n * [anElement1, anElement2, anElement3] = AutoNumeric.multiple.french([domElement1, domElement2, domElement3], [12345.789, 234.78, null], [{ options }, 'euroPos']);\n *\n * // Special case, if a <form> element is passed (or any other 'parent' (or 'root') DOM element), then autoNumeric will initialize each child `<input>` elements recursively, ignoring those referenced in the `exclude` attribute\n * [anElement1, anElement2] = AutoNumeric.multiple({ rootElement: formElement }, { options });\n * [anElement1, anElement2] = AutoNumeric.multiple({ rootElement: formElement, exclude : [hiddenElement, tokenElement] }, { options });\n * [anElement1, anElement2] = AutoNumeric.multiple({ rootElement: formElement, exclude : [hiddenElement, tokenElement] }, [12345.789, null], { options });\n *\n * // If you want to select multiple elements via a css selector, then you must use the `multiple` function. Under the hood `QuerySelectorAll` is used.\n * [anElement1, anElement2] = AutoNumeric.multiple('.myCssClass > input', { options }); // This always return an Array, even if there is only one element selected\n * [anElement1, anElement2] = AutoNumeric.multiple('.myCssClass > input', [null, 12345.789], { options }); // Idem above, but with passing the initial values too\n *\n * @param {string|Array|{ rootElement: HTMLElement }|{ rootElement: HTMLElement, exclude: Array<HTMLInputElement>}} arg1\n * @param {number|Array|object|null} initialValue\n * @param {object|Array|null} options\n * @returns {Array}\n */\nAutoNumeric.multiple = (arg1, initialValue = null, options = null) => {\n    const result = [];\n\n    // Analyze the arguments and transform them to make them exploitable\n    if (AutoNumericHelper.isObject(initialValue)) {\n        // If the user gave an option object as the second argument, instead of the initial values\n        options = initialValue;\n        initialValue = null;\n    }\n\n    if (AutoNumericHelper.isString(arg1)) {\n        arg1 = [... document.querySelectorAll(arg1)]; // Convert a NodeList to an Array (cf. http://stackoverflow.com/a/37297292/2834898)\n    } else if (AutoNumericHelper.isObject(arg1)) {\n        if (!Object.prototype.hasOwnProperty.call(arg1, 'rootElement')) {\n            AutoNumericHelper.throwError(`The object passed to the 'multiple' function is invalid ; no 'rootElement' attribute found.`);\n        }\n\n        // Retrieve the DOM element list from the given <form> element\n        const elements = [... arg1.rootElement.querySelectorAll('input')];\n        if (Object.prototype.hasOwnProperty.call(arg1, 'exclude')) {\n            if (!Array.isArray(arg1.exclude)) {\n                AutoNumericHelper.throwError(`The 'exclude' array passed to the 'multiple' function is invalid.`);\n            }\n\n            // Filter out the excluded elements\n            arg1 = AutoNumericHelper.filterOut(elements, arg1.exclude);\n        } else {\n            arg1 = elements;\n        }\n    } else if (!AutoNumericHelper.isArray(arg1)) {\n        AutoNumericHelper.throwError(`The given parameters to the 'multiple' function are invalid.`);\n    }\n\n    if (arg1.length === 0) {\n        let showWarnings = true;\n        if (!AutoNumericHelper.isNull(options) && AutoNumericHelper.isBoolean(options.showWarnings)) {\n            showWarnings = options.showWarnings;\n        }\n\n        AutoNumericHelper.warning(`No valid DOM elements were given hence no AutoNumeric objects were instantiated.`, showWarnings);\n\n        return [];\n    }\n\n    // At this point, we know `arg1` is an array of DOM elements\n\n    // This function can be initialized with two types of array, one for the initial values, and/or one for the options.\n    // So we need to find out if an array is detected if the user passed an array of initial values, or an array of options\n    // Therefore, we analyze the content of the arrays for the second and third arguments\n    // ...for the second parameter :\n    const isInitialValueArray = AutoNumericHelper.isArray(initialValue);\n    const isInitialValueArrayAndNotEmpty = isInitialValueArray && initialValue.length >= 1;\n    let secondArgumentIsInitialValueArray = false;\n    let secondArgumentIsOptionArray = false;\n    // Any of the arrays can be either an array of initial values, or an array of option object/pre-defined option names\n    if (isInitialValueArrayAndNotEmpty) {\n        const typeOfFirstArrayElement = typeof Number(initialValue[0]);\n        // First we test the second argument\n        secondArgumentIsInitialValueArray = typeOfFirstArrayElement === 'number' && !isNaN(Number(initialValue[0]));\n\n        if (!secondArgumentIsInitialValueArray) {\n            // If the second argument is an array, but not an array of values, check if it's instead an array of options/pre-defined option names\n            if (typeOfFirstArrayElement === 'string' || isNaN(typeOfFirstArrayElement) || typeOfFirstArrayElement === 'object') {\n                secondArgumentIsOptionArray = true;\n            }\n        }\n    }\n\n    // ...for the third parameter :\n    const isOptionsArrayAndNotEmpty = AutoNumericHelper.isArray(options) && options.length >= 1;\n    let thirdArgumentIsOptionArray = false;\n    if (isOptionsArrayAndNotEmpty) {\n        const typeOfFirstArrayElement = typeof options[0];\n        if (typeOfFirstArrayElement === 'string' || typeOfFirstArrayElement === 'object') {\n            // If the third argument is an array of options/pre-defined option names\n            thirdArgumentIsOptionArray = true;\n        }\n    }\n\n    // Depending on our findings, we generate the options variable to use `optionsToUse`, either directly, or merged\n    let optionsToUse;\n    if (secondArgumentIsOptionArray) {\n        optionsToUse = AutoNumeric.mergeOptions(initialValue);\n    } else if (thirdArgumentIsOptionArray) {\n        optionsToUse = AutoNumeric.mergeOptions(options);\n    } else {\n        optionsToUse = options;\n    }\n\n\n    // Initialize the initial values\n    const isInitialValueNumber = AutoNumericHelper.isNumber(initialValue);\n    let initialValueArraySize;\n    if (secondArgumentIsInitialValueArray) {\n        initialValueArraySize = initialValue.length;\n    }\n\n    // Instantiate each AutoNumeric objects\n    arg1.forEach((domElement, index) => {\n        if (isInitialValueNumber) {\n            // We set the same value for each element\n            result.push(new AutoNumeric(domElement, initialValue, optionsToUse));\n        } else if (secondArgumentIsInitialValueArray && index <= initialValueArraySize) {\n            result.push(new AutoNumeric(domElement, initialValue[index], optionsToUse));\n        } else {\n            result.push(new AutoNumeric(domElement, null, optionsToUse));\n        }\n    });\n\n    return result;\n};\n","/**\n * Options for AutoNumeric.js\n * @author Alexandre Bonneau <alexandre.bonneau@linuxfr.eu>\n * @copyright © 2023 Alexandre Bonneau\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sub license, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport AutoNumeric from './AutoNumeric';\n\n/**\n * Options values enumeration\n */\nAutoNumeric.options = {\n    /* Defines if the decimal places should be padded with zeroes\n     * `true`     : always pad decimals with zeros (ie. '12.3400')\n     * `false`    : never pad with zeros (ie. '12.34')\n     * `'floats'` : pad with zeroes only when there are decimals (ie. '12' and '12.3400')\n     * Note: setting allowDecimalPadding to 'false' will override the 'decimalPlaces' setting.\n     */\n    allowDecimalPadding: {\n        always: true,\n        never : false,\n        floats: 'floats',\n    },\n\n    /* Defines if the decimal character or decimal character alternative should be accepted when there is already a decimal character shown in the element.\n     * If set to `true`, any decimal character input will be accepted and will subsequently modify the decimal character position, as well as the `rawValue`.\n     * If set to `false`, the decimal character and its alternative key will be dropped as before. This is the default setting.\n     */\n    alwaysAllowDecimalCharacter: {\n        alwaysAllow: true,\n        doNotAllow: false,\n    },\n\n    /* Defines where should be positioned the caret on focus\n     * null : Do not enforce any caret positioning on focus (this is needed when using `selectOnFocus`)\n     * `'start'` : put the caret of the far left side of the value (excluding the positive/negative sign and currency symbol, if any)\n     * `'end'` : put the caret of the far right side of the value (excluding the positive/negative sign and currency symbol, if any)\n     * `'decimalLeft'` : put the caret of the left of the decimal character if any\n     * `'decimalRight'` : put the caret of the right of the decimal character if any\n     */\n    caretPositionOnFocus: {\n        start                 : 'start',\n        end                   : 'end',\n        decimalLeft           : 'decimalLeft',\n        decimalRight          : 'decimalRight',\n        doNoForceCaretPosition: null,\n    },\n\n    /* Defines if a local list of AutoNumeric objects should be kept when initializing this object.\n     * This list is used by the `global.*` functions.\n     */\n    createLocalList: {\n        createList     : true,\n        doNotCreateList: false,\n    },\n\n    /* Defines the currency symbol string.\n     * It can be a string of more than one character (allowing for instance to use a space on either side of it, example: '$ ' or ' $')\n     * cf. https://en.wikipedia.org/wiki/Currency_symbol\n     */\n    currencySymbol: {\n        none          : '',\n        currencySign  : '¤',\n        austral       : '₳', // ARA\n        australCentavo: '¢',\n        baht          : '฿', // THB\n        cedi          : '₵', // GHS\n        cent          : '¢',\n        colon         : '₡', // CRC\n        cruzeiro      : '₢', // BRB - Not used anymore since 1993\n        dollar        : '$',\n        dong          : '₫', // VND\n        drachma       : '₯', // GRD (or 'Δρχ.' or 'Δρ.')\n        dram          : '​֏', // AMD\n        european      : '₠', // XEU (old currency before the Euro)\n        euro          : '€', // EUR\n        florin        : 'ƒ',\n        franc         : '₣', // FRF\n        guarani       : '₲', // PYG\n        hryvnia       : '₴', // грн\n        kip           : '₭', // LAK\n        att           : 'ອັດ', // cents of the Kip\n        lepton        : 'Λ.', // cents of the Drachma\n        lira          : '₺', // TRY\n        liraOld       : '₤',\n        lari          : '₾', // GEL\n        mark          : 'ℳ',\n        mill          : '₥',\n        naira         : '₦', // NGN\n        peseta        : '₧',\n        peso          : '₱', // PHP\n        pfennig       : '₰', // cents of the Mark\n        pound         : '£',\n        real          : 'R$ ', // Brazilian real\n        riel          : '៛', // KHR\n        ruble         : '₽', // RUB\n        rupee         : '₹', // INR\n        rupeeOld      : '₨',\n        shekel        : '₪',\n        shekelAlt     : 'ש״ח‎‎',\n        taka          : '৳', // BDT\n        tenge         : '₸', // KZT\n        togrog        : '₮', // MNT\n        won           : '₩',\n        yen           : '¥',\n    },\n\n    /* Defines where the currency symbol should be placed (before of after the numbers)\n     * for prefix currencySymbolPlacement: \"p\" (default)\n     * for suffix currencySymbolPlacement: \"s\"\n     */\n    currencySymbolPlacement: {\n        prefix: 'p',\n        suffix: 's',\n    },\n\n    /* Defines what decimal separator character is used\n     */\n    decimalCharacter: {\n        comma                    : ',',\n        dot                      : '.',\n        middleDot                : '·',\n        arabicDecimalSeparator   : '٫',\n        decimalSeparatorKeySymbol: '⎖',\n    },\n\n    /* Allow to declare an alternative decimal separator which is automatically replaced by `decimalCharacter` when typed.\n     * This is used by countries that use a comma ',' as the decimal character and have keyboards with a numeric pads that have\n     * a period 'full stop' as the decimal character (France or Spain for instance).\n     */\n    decimalCharacterAlternative: {\n        none : null,\n        comma: ',',\n        dot  : '.',\n    },\n\n    /* Defines the default number of decimal places to show on the formatted value, and keep for the precision.\n     * Incidentally, since we need to be able to show that many decimal places, this also defines the raw value precision by default.\n     */\n    decimalPlaces: {\n        none : 0,\n        one  : 1,\n        two  : 2,\n        three: 3,\n        four : 4,\n        five : 5,\n        six  : 6,\n    },\n\n    /* Defines how many decimal places should be kept for the raw value (ie. This is the precision for float values).\n     *\n     * If this option is set to `null` (which is the default), then the value of `decimalPlaces` is used for `decimalPlacesRawValue` as well.\n     * Note: Setting this to a lower number of decimal places than the one to be shown will lead to confusion for the users.\n     */\n    decimalPlacesRawValue: {\n        useDefault: null,\n        none      : 0,\n        one       : 1,\n        two       : 2,\n        three     : 3,\n        four      : 4,\n        five      : 5,\n        six       : 6,\n    },\n\n    /* Defines how many decimal places should be visible when the element is unfocused.\n     * If this is set to `null`, then this option is ignored, and the `decimalPlaces` option value will be used instead.\n     * This means this is optional ; if omitted the decimal places will be the same when the input has the focus.\n     *\n     * This option can be used in conjonction with the two other `scale*` options, which allows to display a different formatted value when the element is unfocused, while another formatted value is shown when focused.\n     * For those `scale*` options to have any effect, `divisorWhenUnfocused` must not be `null`.\n     */\n    decimalPlacesShownOnBlur: {\n        useDefault: null,\n        none      : 0,\n        one       : 1,\n        two       : 2,\n        three     : 3,\n        four      : 4,\n        five      : 5,\n        six       : 6,\n    },\n\n    /* Defines how many decimal places should be visible when the element has the focus.\n     * If this is set to `null`, then this option is ignored, and the `decimalPlaces` option value will be used instead.\n     *\n     * Example:\n     * For instance if `decimalPlacesShownOnFocus` is set to `5` and the default number of decimal places is `2`, then on focus `1,000.12345` will be shown, while without focus `1,000.12` will be set back.\n     * Note 1: the results depends on the rounding method used.\n     * Note 2: the `getNumericString()` method returns the extended decimal places\n     */\n    decimalPlacesShownOnFocus: {\n        useDefault: null,\n        none      : 0,\n        one       : 1,\n        two       : 2,\n        three     : 3,\n        four      : 4,\n        five      : 5,\n        six       : 6,\n    },\n\n    /* Helper option for ASP.NET postback\n     * This should be set as the value of the unformatted default value\n     * examples:\n     * no default value=\"\" {defaultValueOverride: \"\"}\n     * value=1234.56 {defaultValueOverride: '1234.56'}\n     */\n    defaultValueOverride: {\n        doNotOverride: null,\n    },\n\n    /* Defines how many numbers should be grouped together (usually for the thousand separator)\n     * - \"2\",  results in 99,99,99,99 Group by two\n     * - \"2t\", results in 99,99,99,999 India's lakhs\n     * - \"2s\", results in 99,999,99,99,999 India's lakhs scaled\n     * - \"3\",  results in 999,999,999 (default)\n     * - \"4\",  results in 9999,9999,9999 used in some Asian countries\n     * Note: This option does not accept other grouping choice.\n     */\n    digitalGroupSpacing: {\n        two      : '2',\n        twoThree : '2t',\n        twoScaled: '2s',\n        three    : '3',\n        four     : '4',\n    },\n\n    /* Defines the thousand grouping separator character\n     * Example : If `'.'` is set, then you'll get `'1.234.567'`\n     */\n    digitGroupSeparator: {\n        comma                   : ',',\n        dot                     : '.',\n        normalSpace             : ' ',\n        thinSpace               : '\\u2009',\n        narrowNoBreakSpace      : '\\u202f',\n        noBreakSpace            : '\\u00a0',\n        noSeparator             : '',\n        apostrophe              : `'`,\n        arabicThousandsSeparator: '٬',\n        dotAbove                : '˙',\n        privateUseTwo           : '’', // \\u0092\n    },\n\n    /* The `divisorWhenUnfocused` divide the element value on focus.\n     * On blur, the element value is multiplied back.\n     *\n     * Example : Display percentages using { divisorWhenUnfocused: 100 } (or directly in the Html with `<input data-divisor-when-unfocused=\"100\">`)\n     * The divisor value does not need to be an integer, but please understand that Javascript has limited accuracy in math ; use with caution.\n     * Note: The `getNumericString` method returns the full value, including the 'hidden' decimals.\n     */\n    divisorWhenUnfocused: {\n        none      : null,\n        percentage: 100,\n        permille  : 1000,\n        basisPoint: 10000,\n    },\n\n    /* Defines what should be displayed in the element if the raw value is an empty string ('').\n     * - 'focus'  : The currency sign is displayed when the input receives focus (default)\n     * - 'press'  : The currency sign is displayed whenever a key is being pressed\n     * - 'always' : The currency sign is always displayed\n     * - 'zero'   : A zero is displayed ('rounded' with or without a currency sign) if the input has no value on focus out\n     * - 'min'    : The minimum value is displayed if the input has no value on focus out\n     * - 'max'    : The maximum value is displayed if the input has no value on focus out\n     * - 'null'   : When the element is empty, the `rawValue` and the element value/text is set to `null`. This also allows to set the value to `null` using `anElement.set(null)`.\n     */\n    emptyInputBehavior: {\n        focus : 'focus',\n        press : 'press',\n        always: 'always',\n        zero  : 'zero',\n        min   : 'min',\n        max   : 'max',\n        null  : 'null',\n    },\n\n    /* Defines if the custom and native events triggered by AutoNumeric should bubble up or not.\n     */\n    eventBubbles: {\n        bubbles: true,\n        doesNotBubble: false,\n    },\n\n    /* Defines if the custom and native events triggered by AutoNumeric should be cancelable.\n     */\n    eventIsCancelable: {\n        isCancelable: true,\n        isNotCancelable: false,\n    },\n\n    /* This option is the 'strict mode' (aka 'debug' mode), which allows autoNumeric to strictly analyse the options passed, and fails if an unknown options is used in the settings object.\n     * You should set that to `true` if you want to make sure you are only using 'pure' autoNumeric settings objects in your code.\n     * If you see uncaught errors in the console and your code starts to fail, this means somehow those options gets polluted by another program (which usually happens when using frameworks).\n     */\n    failOnUnknownOption: {\n        fail  : true,\n        ignore: false,\n    },\n\n    /* Determine if the default value will be formatted on initialization.\n     */\n    formatOnPageLoad: {\n        format     : true, // automatically formats the default value on initialization\n        doNotFormat: false, // will not format the default value on initialization\n    },\n\n    /* Defines if the 'formula mode' can be activated by the user.\n     * If set to `true`, then the user can enter the formula mode by entering the '=' character.\n     * He will then be allowed to enter any simple math formula using numeric characters as well as the following operators +, -, *, /, ( and ).\n     * The formula mode is closed when the user either validate their math expression using the `Enter` key, or when the element is blurred.\n     * If the formula is invalid, the previous valid `rawValue` is set back, and the `autoNumeric:invalidFormula` event is sent.\n     * When a valid formula is accepted, then its result is `set()`, and the `autoNumeric:validFormula` event is sent.\n     *\n     * By default, this mode is disabled.\n     */\n    formulaMode: {\n        enabled : true,\n        disabled: false,\n    },\n\n    /* Set the undo/redo history table size.\n     * Each record keeps the raw value as well and the last known caret/selection positions.\n     */\n    historySize: {\n        verySmall: 5,\n        small    : 10,\n        medium   : 20,\n        large    : 50,\n        veryLarge: 100,\n        insane   : Number.MAX_SAFE_INTEGER,\n    },\n\n    /* Defines the name of the CSS class to use on contenteditable-enabled elements when the value is invalid\n     * This is not used when the HTML element used is an input.\n     */\n    invalidClass: 'an-invalid',\n\n    /* Allow the user to 'cancel' and undo the changes he made to the given autonumeric-managed element, by pressing the 'Escape' key.\n     * Whenever the user 'validate' the input (either by hitting 'Enter', or blurring the element), the new value is saved for subsequent 'cancellation'.\n     *\n     * The process :\n     *   - save the input value on focus\n     *   - if the user change the input value, and hit `Escape`, then the initial value saved on focus is set back\n     *   - on the other hand if the user either have used `Enter` to validate (`Enter` throws a change event) his entries, or if the input value has been changed by another script in the mean time, then we save the new input value\n     *   - on a successful 'cancel', select the whole value (while respecting the `selectNumberOnly` option)\n     *   - bonus; if the value has not changed, hitting 'Esc' just select all the input value (while respecting the `selectNumberOnly` option)\n     */\n    isCancellable: {\n        cancellable   : true,\n        notCancellable: false,\n    },\n\n    /* Controls the leading zero behavior\n     * - 'allow' : allows leading zeros to be entered. Zeros will be truncated when entering additional digits. On focusout zeros will be deleted\n     * - 'deny'  : allows only one leading zero on values that are between 1 and -1\n     * - 'keep'  : allows leading zeros to be entered. on focusout zeros will be retained\n     */\n    leadingZero: {\n        allow: 'allow',\n        deny : 'deny',\n        keep : 'keep',\n    },\n\n    /* Defines the maximum possible value a user can enter.\n     * Notes:\n     * - this value must be a string and use the period for the decimal point\n     * - this value needs to be larger than `minimumValue`\n     */\n    maximumValue: {\n        tenTrillions          : '10000000000000', // 10000 billions\n        oneBillion            : '1000000000',\n        zero                  : '0',\n    },\n\n    /* Defines the minimum possible value a user can enter.\n     * Notes:\n     * - this value must be a string and use the period for the decimal point\n     * - this value needs to be smaller than `maximumValue`\n     * - if this is superior to 0, then you'll effectively prevent your user to entirely delete the content of your element\n     */\n    minimumValue: {\n        tenTrillions          : '-10000000000000', // 10000 billions\n        oneBillion            : '-1000000000',\n        zero                  : '0',\n    },\n\n    /* Allows the user to increment or decrement the element value with the up and down arrow keys.\n     * The behavior is similar to the mouse wheel one.\n     * The up and down arrow keys behavior can be modified by the `upDownStep` option.\n     * This `upDownStep` option can be used in two ways, either by setting:\n     * - a 'fixed' step value (`upDownStep : 1000`), or\n     * - the 'progressive' string (`upDownStep : 'progressive'`), which will then activate a special mode where the step is automatically calculated based on the element value size.\n     */\n    modifyValueOnUpDownArrow: {\n        modifyValue: true,\n        doNothing  : false,\n    },\n\n    /* Allows the user to increment or decrement the element value with the mouse wheel.\n     * The behavior is similar to the up/down arrow one.\n     * The wheel behavior can be modified by the `wheelStep` option.\n     * This `wheelStep` option can be used in two ways, either by setting:\n     * - a 'fixed' step value (`wheelStep : 1000`), or\n     * - the 'progressive' string (`wheelStep : 'progressive'`), which will then activate a special mode where the step is automatically calculated based on the element value size.\n     *\n     * Note :\n     * You can activate/deactivate the wheel event for each `wheelOn` option value by using the 'Shift' modifier key while using the mouse wheel.\n     */\n    modifyValueOnWheel: {\n        modifyValue: true,\n        doNothing  : false,\n    },\n\n    /* Adds brackets on negative values (ie. transforms '-$ 999.99' to '($999.99)')\n     * Those brackets are visible only when the field does NOT have the focus.\n     * The left and right symbols should be enclosed in quotes and separated by a comma.\n     */\n    negativeBracketsTypeOnBlur: {\n        parentheses           : '(,)',\n        brackets              : '[,]',\n        chevrons              : '<,>',\n        curlyBraces           : '{,}',\n        angleBrackets         : '〈,〉',\n        japaneseQuotationMarks: '｢,｣',\n        halfBrackets          : '⸤,⸥',\n        whiteSquareBrackets   : '⟦,⟧',\n        quotationMarks        : '‹,›',\n        guillemets            : '«,»',\n        none                  : null, // This is the default value, which deactivate this feature\n    },\n\n    /* Placement of the negative/positive sign relative to the `currencySymbol` option.\n     *\n     * Example:\n     * // Default values\n     * -1,234.56  => default no options required\n     * $-1,234.56 => {currencySymbol: \"$\", negativePositiveSignPlacement: \"r\"} // Default if negativePositiveSignPlacement is 'null' and currencySymbol is not empty\n     *\n     * // Sign on the left hand side of the whole number\n     * -$1,234.56 => {currencySymbol: \"$\"} or {currencySymbol: \"$\", negativePositiveSignPlacement: \"l\"}\n     * -1,234.56$ => {currencySymbol: \"$\", currencySymbolPlacement: \"s\", negativePositiveSignPlacement: \"p\"} // Default if negativePositiveSignPlacement is 'null' and currencySymbol is not empty\n     *\n     * // Sign on the right hand side of the whole number\n     * 1,234.56-  => {negativePositiveSignPlacement: \"s\"}\n     * $1,234.56- => {currencySymbol: \"$\", negativePositiveSignPlacement: \"s\"}\n     * 1,234.56-$ => {currencySymbol: \"$\", currencySymbolPlacement: \"s\"}\n     * 1,234.56$- => {currencySymbol: \"$\", currencySymbolPlacement: \"s\", negativePositiveSignPlacement: \"r\"}\n     */\n    negativePositiveSignPlacement: {\n        prefix: 'p',\n        suffix: 's',\n        left  : 'l',\n        right : 'r',\n        none  : null,\n    },\n\n    /* Defines the negative sign symbol.\n     * It can be a string of only one character.\n     */\n    negativeSignCharacter: {\n        hyphen         : '-',\n        minus          : '−',\n        heavyMinus     : '➖',\n        fullWidthHyphen: '－',\n        circledMinus   : '⊖',\n        squaredMinus   : '⊟',\n        triangleMinus  : '⨺',\n        plusMinus      : '±',\n        minusPlus      : '∓',\n        dotMinus       : '∸',\n        minusTilde     : '≂',\n        not            : '¬',\n    },\n\n    /*\n     * Defines if the negative sign should be toggled when hitting the negative or positive key multiple times.\n     * When `toggle` is used, using the same '-' on '+' key will toggle between a positive and negative value.\n     * When `doNotToggle` is used, using '-' will always set the value negative, and '+' will always set the value positive.\n     */\n    negativePositiveSignBehavior: {\n        toggle     : true,\n        doNotToggle: false,\n    },\n\n    /* Defines if the element should have event listeners activated on it.\n     * By default, those event listeners are only added to <input> elements and html element with the `contenteditable` attribute set to `true`, but not on the other html tags.\n     * This allows to initialize elements without any event listeners.\n     * Warning: Since AutoNumeric will not check the input content after its initialization, using some autoNumeric methods afterwards *will* probably leads to formatting problems.\n     */\n    noEventListeners: {\n        noEvents : true,\n        addEvents: false,\n    },\n\n    /* Manage how autoNumeric react when the user tries to paste an invalid number.\n     * - 'error'    : (This is the default behavior) The input value is not changed and an error is output in the console.\n     * - 'ignore'   : idem than 'error', but fail silently without outputting any error/warning in the console.\n     * - 'clamp'    : if the pasted value is either too small or too big regarding the minimumValue and maximumValue range, then the result is clamped to those limits.\n     * - 'truncate' : autoNumeric will insert as many pasted numbers it can at the initial caret/selection, until everything is pasted, or the range limit is hit.\n     *                The non-pasted numbers are dropped and therefore not used at all.\n     * - 'replace'  : autoNumeric will first insert as many pasted numbers it can at the initial caret/selection, then if the range limit is hit, it will try\n     *                to replace one by one the remaining initial numbers (on the right side of the caret) with the rest of the pasted numbers.\n     *\n     * Note 1 : A paste content starting with a negative sign '-' will be accepted anywhere in the input, and will set the resulting value as a negative number\n     * Note 2 : A paste content starting with a number will be accepted, even if the rest is gibberish (ie. '123foobar456').\n     *          Only the first number will be used (here '123').\n     * Note 3 : The paste event works with the `decimalPlacesShownOnFocus` option too.\n     */\n    onInvalidPaste: {\n        error   : 'error',\n        ignore  : 'ignore',\n        clamp   : 'clamp',\n        truncate: 'truncate',\n        replace : 'replace',\n    },\n\n    /* Defines how the value should be formatted when wanting a 'localized' version of it.\n     * - null or 'string' => 'nnnn.nn' or '-nnnn.nn' as text type. This is the default behavior.\n     * - 'number'         => nnnn.nn or -nnnn.nn as a Number (Warning: this works only for integers inferior to Number.MAX_SAFE_INTEGER)\n     * - ',' or '-,'      => 'nnnn,nn' or '-nnnn,nn'\n     * - '.-'             => 'nnnn.nn' or 'nnnn.nn-'\n     * - ',-'             => 'nnnn,nn' or 'nnnn,nn-'\n     *\n     * Note: The hyphen '-' is translated to the custom negative sign defined in `negativeSignCharacter`\n     */\n    outputFormat: {\n        string       : 'string',\n        number       : 'number',\n        dot          : '.',\n        negativeDot  : '-.',\n        comma        : ',',\n        negativeComma: '-,',\n        dotNegative  : '.-',\n        commaNegative: ',-',\n        none         : null,\n    },\n\n    /* Defines if AutoNumeric should let the user override the minimum and/or maximum limits when he types numbers in the element.\n     * - 'ceiling' Strictly adheres to `maximumValue` and ignores the `minimumValue` settings\n     *             It allows the user to enter anything between -∞ `and maximumValue`\n     *             If `maximumValue` is less than 0, then it will prevent the user emptying the field or typing value above `maximumValue`, making sure the value entered is always valid\n     * - 'floor'   Strictly adheres to `minimumValue` and ignores the `maximumValue` settings\n     *             It allows the user to enter anything between `minimumValue` and +∞\n     *             If `minimumValue` is higher than 0, then it will prevent the user emptying the field or typing value below `minimumValue`, making sure the value entered is always valid\n     * - 'ignore'  Ignores both the `minimumValue` and `maximumValue` settings\n     *             When using this option, the field will always be valid range-wise\n     * - 'invalid' The user can temporarily type out-of-bound values. In doing so, the invalid state is set on the field.\n     *             Whenever an invalid value is typed, an 'autoNumeric:invalidValue' event is sent\n     *             When the value is correctly set back within the limit boundaries, the invalid state is removed, and the 'autoNumeric:correctedValue' event is sent\n     * - 'doNotOverride' Strictly adheres to the `maximumValue` and `minimumValue` settings\n     *                   This is the default behavior\n     *                   If `0` is out of the min/max range, this will prevent the user clearing the input field, making sure the value entered is always valid\n     */\n    overrideMinMaxLimits: {\n        ceiling      : 'ceiling',\n        floor        : 'floor',\n        ignore       : 'ignore',\n        invalid      : 'invalid',\n        doNotOverride: null,\n    },\n\n    /* Defines the positive sign symbol.\n     * It can be a string of only one character.\n     * This is shown only if `showPositiveSign` is set to `true`.\n     */\n    positiveSignCharacter: {\n        plus              : '+',\n        fullWidthPlus     : '＋',\n        heavyPlus         : '➕',\n        doublePlus        : '⧺',\n        triplePlus        : '⧻',\n        circledPlus       : '⊕',\n        squaredPlus       : '⊞',\n        trianglePlus      : '⨹',\n        plusMinus         : '±',\n        minusPlus         : '∓',\n        dotPlus           : '∔',\n        altHebrewPlus     : '﬩',\n        normalSpace       : ' ',\n        thinSpace         : '\\u2009',\n        narrowNoBreakSpace: '\\u202f',\n        noBreakSpace      : '\\u00a0',\n    },\n\n    /* The `rawValueDivisor` divides the formatted value shown in the AutoNumeric element and store the result in `rawValue`.\n     * @example { rawValueDivisor: '100' } or <input data-raw-value-divisor=\"100\">\n     * Given the `0.01234` raw value, the formatted value will be displayed as `'1.234'`.\n     * This is useful when displaying percentage for instance, and avoid the need to divide/multiply by 100 between the number shown and the raw value.\n     */\n    rawValueDivisor: {\n        none      : null,\n        percentage: 100,\n        permille  : 1000,\n        basisPoint: 10000,\n    },\n\n    /* Defines if the element (`<input>` or another allowed html tag) should be set as read-only on initialization.\n     * When set to `true`, then:\n     * - the `readonly` html property is added to the <input> element on initialization, or\n     * - the `contenteditable` attribute is set to `false` on non-input elements.\n     */\n    readOnly: {\n        readOnly : true,\n        readWrite: false,\n    },\n\n    /* Defines the rounding method to use.\n     * roundingMethod: \"S\", Round-Half-Up Symmetric (default)\n     * roundingMethod: \"A\", Round-Half-Up Asymmetric\n     * roundingMethod: \"s\", Round-Half-Down Symmetric (lower case s)\n     * roundingMethod: \"a\", Round-Half-Down Asymmetric (lower case a)\n     * roundingMethod: \"B\", Round-Half-Even \"Bankers Rounding\"\n     * roundingMethod: \"U\", Round Up \"Round-Away-From-Zero\"\n     * roundingMethod: \"D\", Round Down \"Round-Toward-Zero\" - same as truncate\n     * roundingMethod: \"C\", Round to Ceiling \"Toward Positive Infinity\"\n     * roundingMethod: \"F\", Round to Floor \"Toward Negative Infinity\"\n     * roundingMethod: \"N05\" Rounds to the nearest .05 => same as \"CHF\" used in 1.9X and still valid\n     * roundingMethod: \"U05\" Rounds up to next .05\n     * roundingMethod: \"D05\" Rounds down to next .05\n     */\n    roundingMethod: {\n        halfUpSymmetric                : 'S',\n        halfUpAsymmetric               : 'A',\n        halfDownSymmetric              : 's',\n        halfDownAsymmetric             : 'a',\n        halfEvenBankersRounding        : 'B',\n        upRoundAwayFromZero            : 'U',\n        downRoundTowardZero            : 'D',\n        toCeilingTowardPositiveInfinity: 'C',\n        toFloorTowardNegativeInfinity  : 'F',\n        toNearest05                    : 'N05',\n        toNearest05Alt                 : 'CHF',\n        upToNext05                     : 'U05',\n        downToNext05                   : 'D05',\n    },\n\n    /* Set to `true` to allow the `decimalPlacesShownOnFocus` value to be saved with sessionStorage\n     * If IE 6 or 7 is detected, the value will be saved as a session cookie.\n     */\n    saveValueToSessionStorage: {\n        save     : true,\n        doNotSave: false,\n    },\n\n    /* Determine if the select all keyboard command will select the complete input text, or only the input numeric value\n     * Note : If the currency symbol is between the numeric value and the negative sign, only the numeric value will be selected\n     */\n    selectNumberOnly: {\n        selectNumbersOnly: true,\n        selectAll        : false,\n    },\n\n    /* Defines if the element value should be selected on focus.\n     * Note: The selection is done using the `selectNumberOnly` option.\n     */\n    selectOnFocus: {\n        select     : true,\n        doNotSelect: false,\n    },\n\n    /* Defines how the serialize functions should treat the spaces.\n     * Those spaces ' ' can either be converted to the plus sign '+', which is the default, or to '%20'.\n     * Both values being valid per the spec (http://www.w3.org/Addressing/URL/uri-spec.html).\n     * Also see the summed up answer on http://stackoverflow.com/a/33939287.\n     *\n     * tl;dr : Spaces should be converted to '%20' before the '?' sign, then converted to '+' after.\n     * In our case since we serialize the query, we use '+' as the default (but allow the user to get back the old *wrong* behavior).\n     */\n    serializeSpaces: {\n        plus   : '+',\n        percent: '%20',\n    },\n\n    /* Defines if the element value should be converted to the raw value on focus (and back to the formatted on blur).\n     * If set to `true`, then autoNumeric remove the thousand separator, currency symbol and suffix on focus.\n     * Example:\n     * If the input value is '$ 1,999.88 suffix', on focus it becomes '1999.88' and back to '$ 1,999.88 suffix' on blur.\n     */\n    showOnlyNumbersOnFocus: {\n        onlyNumbers: true,\n        showAll    : false,\n    },\n\n    /* Allow the positive sign symbol `+` to be displayed for positive numbers.\n     * By default, this positive sign is not shown.\n     * The sign placement is controlled by the 'negativePositiveSignPlacement' option, mimicking the negative sign placement rules.\n     */\n    showPositiveSign: {\n        show: true,\n        hide: false,\n    },\n\n    /* Defines if warnings should be shown in the console.\n     * Those warnings can be ignored, but are usually printed when something could be improved by the user (ie. option conflicts).\n     */\n    showWarnings: {\n        show: true, // All warning are shown\n        hide: false, // No warnings are shown, only the thrown errors\n    },\n\n    /* Defines the rules that calculate the CSS class(es) to apply on the element, based on the raw unformatted value.\n     * This can also be used to call callbacks whenever the `rawValue` is updated.\n     * Important: all callbacks must return `null` if no ranges/userDefined classes are selected\n     * @example\n     * {\n     *     positive   : 'autoNumeric-positive', // Or `null` to not use it\n     *     negative   : 'autoNumeric-negative',\n     *     ranges     : [\n     *         { min: 0, max: 25, class: 'autoNumeric-red' },\n     *         { min: 25, max: 50, class: 'autoNumeric-orange' },\n     *         { min: 50, max: 75, class: 'autoNumeric-yellow' },\n     *         { min: 75, max: Number.MAX_SAFE_INTEGER, class: 'autoNumeric-green' },\n     *     ],\n     *     userDefined: [\n     *         // If 'classes' is a string, set it if `true`, remove it if `false`\n     *         { callback: rawValue => { return true; }, classes: 'thisIsTrue' },\n     *         // If 'classes' is an array with only 2 elements, set the first class if `true`, the second if `false`\n     *         { callback: rawValue => rawValue % 2 === 0, classes: ['autoNumeric-even', 'autoNumeric-odd'] },\n     *         // Return only one index to use on the `classes` array (here, 'class3')\n     *         { callback: rawValue => { return 2; }, classes: ['class1', 'class2', 'class3'] },\n     *         // Return an array of indexes to use on the `classes` array (here, 'class1' and 'class3')\n     *         { callback: rawValue => { return [0, 2]; }, classes: ['class1', 'class2', 'class3'] },\n     *         // If 'classes' is `undefined` or `null`, then the callback is called with the AutoNumeric object passed as a parameter\n     *         { callback: anElement => { return anElement.getFormatted(); } },\n     *     ],\n     * }\n     */\n    styleRules: {\n        none                 : null,\n        positiveNegative     : {\n            positive: 'autoNumeric-positive',\n            negative: 'autoNumeric-negative',\n        },\n        range0To100With4Steps: {\n            ranges: [\n                { min: 0, max: 25, class: 'autoNumeric-red' },\n                { min: 25, max: 50, class: 'autoNumeric-orange' },\n                { min: 50, max: 75, class: 'autoNumeric-yellow' },\n                { min: 75, max: 100, class: 'autoNumeric-green' },\n            ],\n        },\n        evenOdd              : {\n            userDefined: [\n                { callback: rawValue => rawValue % 2 === 0, classes: ['autoNumeric-even', 'autoNumeric-odd'] },\n            ],\n        },\n        rangeSmallAndZero    : {\n            userDefined: [\n                {\n                    callback  : rawValue => {\n                        if (rawValue >= -1 && rawValue < 0) {\n                            return 0;\n                        }\n                        if (Number(rawValue) === 0) {\n                            return 1;\n                        }\n                        if (rawValue > 0 && rawValue <= 1) {\n                            return 2;\n                        }\n\n                        return null;  // In case the rawValue is outside those ranges\n                    },\n                    classes: [\n                        'autoNumeric-small-negative',\n                        'autoNumeric-zero',\n                        'autoNumeric-small-positive',\n                    ],\n                },\n            ],\n        },\n    },\n\n    /* Add a text on the right hand side of the element value.\n     * This suffix text can have any characters in its string, except numeric characters and the negative/positive sign.\n     * Example: ' dollars'\n     */\n    suffixText: {\n        none      : '',\n        percentage: '%',\n        permille  : '‰',\n        basisPoint: '‱',\n    },\n\n    /* The three options (divisorWhenUnfocused, decimalPlacesShownOnBlur & symbolWhenUnfocused) handle scaling of the input when the input does not have focus\n     * Please note that the non-scaled value is held in data and it is advised that you use the `saveValueToSessionStorage` option to ensure retaining the value\n     * [\"divisor\", \"decimal places\", \"symbol\"]\n     * Example: with the following options set {divisorWhenUnfocused: '1000', decimalPlacesShownOnBlur: '1', symbolWhenUnfocused: ' K'}\n     * Example: focusin value \"1,111.11\" focusout value \"1.1 K\"\n     */\n\n    /* The `symbolWhenUnfocused` option is a symbol placed as a suffix when not in focus.\n     * This is optional too.\n     */\n    symbolWhenUnfocused: {\n        none      : null,\n        percentage: '%',\n        permille  : '‰',\n        basisPoint: '‱',\n    },\n\n    /* Defines if the element value should be unformatted when the user hover his mouse over it while holding the `Alt` key.\n     * Unformatting there means that this removes any non-number characters and displays the *raw* value, as understood by Javascript (ie. `12.34` is a valid number, while `12,34` is not).\n     *\n     * We reformat back before anything else if :\n     * - the user focus on the element by tabbing or clicking into it,\n     * - the user releases the `Alt` key, and\n     * - if we detect a mouseleave event.\n     *\n     * We unformat again if :\n     * - while the mouse is over the element, the user hit `Alt` again\n     */\n    unformatOnHover: {\n        unformat     : true,\n        doNotUnformat: false, //TODO Rename to `keepFormat`\n    },\n\n    /* Removes the formatting and use the raw value in each autoNumeric elements of the parent form element, on the form `submit` event.\n     * The output format is a numeric string (nnnn.nn or -nnnn.nn).\n     */\n    unformatOnSubmit: {\n        unformat        : true,\n        keepCurrentValue: false,\n    },\n\n    /* That option is linked to the `modifyValueOnUpDownArrow` one and will only be used if the latter is set to `true`.\n     * This option will modify the up/down arrow behavior and can be used in two ways, either by setting :\n     * - a 'fixed' step value (a positive float or integer number (ex: `1000`)), or\n     * - the `'progressive'` string.\n     *\n     * The 'fixed' mode always increment/decrement the element value by that amount, while respecting the `minimumValue` and `maximumValue` settings.\n     * The 'progressive' mode will increment/decrement the element value based on its current value. The bigger the number, the bigger the step, and vice versa.\n     */\n    upDownStep: {\n        progressive: 'progressive',\n    },\n\n    /* Provides a way for automatically replacing the formatted value with a pre-defined string, when the raw value is equal to a specific value\n     * Here you can specify as many 'conversion' as needed.\n     */\n    valuesToStrings: {\n        none         : null,\n        zeroDash     : {\n            0: '-',\n        },\n        oneAroundZero: {\n            '-1': 'Min',\n            1   : 'Max',\n        },\n    },\n\n    /* Defines if the AutoNumeric element should watch external changes made without using `.set()`, but by using the basic `aNElement.node().value = 42` notation.\n     * If set to `watch`, then AutoNumeric will format the new value using `.set()` internally.\n     * Otherwise it will neither format it, nor save it in the history.\n     */\n    watchExternalChanges: {\n        watch     : true,\n        doNotWatch: false,\n    },\n\n    /* Defines when the wheel event will increment or decrement the element value.\n     * When set to `'focus'`, the AutoNumeric-managed element needs to be focused for the wheel event to change the value.\n     * When set to `'hover'`, using the wheel event while the mouse is hovering the element is sufficient (no focus needed).\n     *\n     * Note :\n     * When `wheelOn` is set to `'focus'`, you can use the 'Shift' modifier key while using the mouse wheel in order to temporarily activate the increment/decrement feature even if the element is not focused.\n     * When `wheelOn` is set to `'hover'`, you can use the 'Shift' modifier key while using the mouse wheel in order to temporarily disable the increment/decrement feature even if the element is not hovered.\n     */\n    wheelOn: {\n        focus: 'focus',\n        hover: 'hover',\n    },\n\n    /* That option is linked to the `modifyValueOnWheel` one and will only be used if the latter is set to `true`.\n     * This option will modify the wheel behavior and can be used in two ways, either by setting :\n     * - a 'fixed' step value (a positive float or integer (ex: number `1000`)), or\n     * - the `'progressive'` string.\n     *\n     * The 'fixed' mode always increment/decrement the element value by that amount, while respecting the `minimumValue` and `maximumValue` settings.\n     * The 'progressive' mode will increment/decrement the element value based on its current value. The bigger the number, the bigger the step, and vice versa.\n     */\n    wheelStep: {\n        progressive: 'progressive',\n    },\n};\n\n/**\n * Simple function that will semi-deep freeze the `AutoNumeric.options` object.\n * By 'semi' it means the nested objects in the `styleRules` option are not frozen.\n * The ones in the `valuesToStrings` are though, since they are much more simple.\n *\n * @param {object} options\n * @returns {ReadonlyArray<any>}\n */\nfunction freezeOptions(options) {\n    // Freeze each property objects\n    Object.getOwnPropertyNames(options).forEach(optionName => {\n        if (optionName === 'valuesToStrings') {\n            const vsProps = Object.getOwnPropertyNames(options.valuesToStrings);\n            vsProps.forEach(valuesToStringObjectName => {\n                if (options.valuesToStrings[valuesToStringObjectName] !== null) {\n                    Object.freeze(options.valuesToStrings[valuesToStringObjectName]);\n                }\n            });\n        } else if (optionName !== 'styleRules') {\n            if (options[optionName] !== null) {\n                Object.freeze(options[optionName]);\n            }\n        }\n    });\n\n    // Then freeze the options object globally\n    return Object.freeze(options);\n}\n\nfreezeOptions(AutoNumeric.options);\nObject.defineProperty(AutoNumeric, 'options', { configurable: false, writable: false });\n\nexport default {};\n","/**\n * Options for AutoNumeric.js\n * @author Alexandre Bonneau <alexandre.bonneau@linuxfr.eu>\n * @copyright © 2023 Alexandre Bonneau\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sub license, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport AutoNumeric from './AutoNumeric';\n\n/**\n * Event list managed by AutoNumeric\n *\n * @type {{correctedValue: string, initialized: string, invalidFormula: string, invalidValue: string, formatted: string, rawValueModified: string, minRangeExceeded: string, maxRangeExceeded: string, native: {input: string, change: string}, validFormula: string}}\n */\nAutoNumeric.events = {\n    correctedValue  : 'autoNumeric:correctedValue',\n    initialized     : 'autoNumeric:initialized',\n    invalidFormula  : 'autoNumeric:invalidFormula',\n    invalidValue    : 'autoNumeric:invalidValue',\n    formatted       : 'autoNumeric:formatted',\n    rawValueModified: 'autoNumeric:rawValueModified',\n    minRangeExceeded: 'autoNumeric:minExceeded',\n    maxRangeExceeded: 'autoNumeric:maxExceeded',\n    native          : {\n        input : 'input',\n        change: 'change',\n    },\n    validFormula    : 'autoNumeric:validFormula',\n};\n\nObject.freeze(AutoNumeric.events.native);\nObject.freeze(AutoNumeric.events);\nObject.defineProperty(AutoNumeric, 'events', { configurable: false, writable: false });\n\nexport default {};\n","/**\n * Default settings for AutoNumeric.js\n * @author Alexandre Bonneau <alexandre.bonneau@linuxfr.eu>\n * @copyright © 2023 Alexandre Bonneau\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sub license, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport AutoNumeric from './AutoNumeric';\nimport './AutoNumericOptions';\n\n/* eslint no-unused-vars: 0 */\n\n/**\n * The defaults options.\n * These can be overridden by the following methods:\n * - HTML5 data attributes (ie. `<input type=\"text\" data-currency-symbol=\" €\">`)\n * - Options passed to the `update` method (ie. `anElement.update({ currencySymbol: ' €' });`), or simply during the initialization (ie. `new AutoNumeric(domElement, { options });`)\n */\nAutoNumeric.defaultSettings = {\n    allowDecimalPadding          : AutoNumeric.options.allowDecimalPadding.always,\n    alwaysAllowDecimalCharacter  : AutoNumeric.options.alwaysAllowDecimalCharacter.doNotAllow,\n    caretPositionOnFocus         : AutoNumeric.options.caretPositionOnFocus.doNoForceCaretPosition,\n    createLocalList              : AutoNumeric.options.createLocalList.createList,\n    currencySymbol               : AutoNumeric.options.currencySymbol.none,\n    currencySymbolPlacement      : AutoNumeric.options.currencySymbolPlacement.prefix,\n    decimalCharacter             : AutoNumeric.options.decimalCharacter.dot,\n    decimalCharacterAlternative  : AutoNumeric.options.decimalCharacterAlternative.none,\n    decimalPlaces                : AutoNumeric.options.decimalPlaces.two,\n    decimalPlacesRawValue        : AutoNumeric.options.decimalPlacesRawValue.useDefault,\n    decimalPlacesShownOnBlur     : AutoNumeric.options.decimalPlacesShownOnBlur.useDefault,\n    decimalPlacesShownOnFocus    : AutoNumeric.options.decimalPlacesShownOnFocus.useDefault,\n    defaultValueOverride         : AutoNumeric.options.defaultValueOverride.doNotOverride,\n    digitalGroupSpacing          : AutoNumeric.options.digitalGroupSpacing.three,\n    digitGroupSeparator          : AutoNumeric.options.digitGroupSeparator.comma,\n    divisorWhenUnfocused         : AutoNumeric.options.divisorWhenUnfocused.none,\n    emptyInputBehavior           : AutoNumeric.options.emptyInputBehavior.focus,\n    eventBubbles                 : AutoNumeric.options.eventBubbles.bubbles,\n    eventIsCancelable            : AutoNumeric.options.eventIsCancelable.isCancelable,\n    failOnUnknownOption          : AutoNumeric.options.failOnUnknownOption.ignore,\n    formatOnPageLoad             : AutoNumeric.options.formatOnPageLoad.format,\n    formulaMode                  : AutoNumeric.options.formulaMode.disabled,\n    historySize                  : AutoNumeric.options.historySize.medium,\n    invalidClass                 : AutoNumeric.options.invalidClass,\n    isCancellable                : AutoNumeric.options.isCancellable.cancellable,\n    leadingZero                  : AutoNumeric.options.leadingZero.deny,\n    maximumValue                 : AutoNumeric.options.maximumValue.tenTrillions,\n    minimumValue                 : AutoNumeric.options.minimumValue.tenTrillions,\n    modifyValueOnUpDownArrow     : AutoNumeric.options.modifyValueOnUpDownArrow.modifyValue,\n    modifyValueOnWheel           : AutoNumeric.options.modifyValueOnWheel.modifyValue,\n    negativeBracketsTypeOnBlur   : AutoNumeric.options.negativeBracketsTypeOnBlur.none,\n    negativePositiveSignPlacement: AutoNumeric.options.negativePositiveSignPlacement.none,\n    negativeSignCharacter        : AutoNumeric.options.negativeSignCharacter.hyphen,\n    negativePositiveSignBehavior : AutoNumeric.options.negativePositiveSignBehavior.doNotToggle,\n    noEventListeners             : AutoNumeric.options.noEventListeners.addEvents,\n    //TODO Shouldn't we use `truncate` as the default value?\n    onInvalidPaste               : AutoNumeric.options.onInvalidPaste.error,\n    outputFormat                 : AutoNumeric.options.outputFormat.none,\n    overrideMinMaxLimits         : AutoNumeric.options.overrideMinMaxLimits.doNotOverride,\n    positiveSignCharacter        : AutoNumeric.options.positiveSignCharacter.plus,\n    rawValueDivisor              : AutoNumeric.options.rawValueDivisor.none,\n    readOnly                     : AutoNumeric.options.readOnly.readWrite,\n    roundingMethod               : AutoNumeric.options.roundingMethod.halfUpSymmetric,\n    saveValueToSessionStorage    : AutoNumeric.options.saveValueToSessionStorage.doNotSave,\n    selectNumberOnly             : AutoNumeric.options.selectNumberOnly.selectNumbersOnly,\n    selectOnFocus                : AutoNumeric.options.selectOnFocus.select,\n    serializeSpaces              : AutoNumeric.options.serializeSpaces.plus,\n    showOnlyNumbersOnFocus       : AutoNumeric.options.showOnlyNumbersOnFocus.showAll,\n    showPositiveSign             : AutoNumeric.options.showPositiveSign.hide,\n    showWarnings                 : AutoNumeric.options.showWarnings.show,\n    styleRules                   : AutoNumeric.options.styleRules.none,\n    suffixText                   : AutoNumeric.options.suffixText.none,\n    symbolWhenUnfocused          : AutoNumeric.options.symbolWhenUnfocused.none,\n    unformatOnHover              : AutoNumeric.options.unformatOnHover.unformat,\n    unformatOnSubmit             : AutoNumeric.options.unformatOnSubmit.keepCurrentValue,\n    upDownStep                   : '1', // To mimic the behavior of 'numeric'-typed input\n    valuesToStrings              : AutoNumeric.options.valuesToStrings.none,\n    watchExternalChanges         : AutoNumeric.options.watchExternalChanges.doNotWatch,\n    wheelOn                      : AutoNumeric.options.wheelOn.focus,\n    wheelStep                    : AutoNumeric.options.wheelStep.progressive,\n};\n\nObject.freeze(AutoNumeric.defaultSettings);\nObject.defineProperty(AutoNumeric, 'defaultSettings', { configurable: false, writable: false });\n\nexport default {};\n","/**\n * Pre-defined options for AutoNumeric.js\n * @author Alexandre Bonneau <alexandre.bonneau@linuxfr.eu>\n * @copyright © 2023 Alexandre Bonneau\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sub license, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport AutoNumeric from './AutoNumeric';\nimport AutoNumericHelper from './AutoNumericHelper';\n\nconst euro = { // Français\n    digitGroupSeparator          : AutoNumeric.options.digitGroupSeparator.dot, // or '\\u202f'\n    decimalCharacter             : AutoNumeric.options.decimalCharacter.comma,\n    decimalCharacterAlternative  : AutoNumeric.options.decimalCharacterAlternative.dot,\n    currencySymbol               : '\\u202f€',\n    currencySymbolPlacement      : AutoNumeric.options.currencySymbolPlacement.suffix,\n    negativePositiveSignPlacement: AutoNumeric.options.negativePositiveSignPlacement.prefix,\n};\n\nconst dollar = {\n    digitGroupSeparator          : AutoNumeric.options.digitGroupSeparator.comma,\n    decimalCharacter             : AutoNumeric.options.decimalCharacter.dot,\n    currencySymbol               : AutoNumeric.options.currencySymbol.dollar,\n    currencySymbolPlacement      : AutoNumeric.options.currencySymbolPlacement.prefix,\n    negativePositiveSignPlacement: AutoNumeric.options.negativePositiveSignPlacement.right,\n};\n\nconst japanese = { // 日本語\n    digitGroupSeparator          : AutoNumeric.options.digitGroupSeparator.comma,\n    decimalCharacter             : AutoNumeric.options.decimalCharacter.dot,\n    currencySymbol               : AutoNumeric.options.currencySymbol.yen,\n    currencySymbolPlacement      : AutoNumeric.options.currencySymbolPlacement.prefix,\n    negativePositiveSignPlacement: AutoNumeric.options.negativePositiveSignPlacement.right,\n};\n\n\n// Here we need to clone the initial objects in order to be able to edit the clones without affecting the originals\nconst euroF                           = AutoNumericHelper.cloneObject(euro);\neuroF.formulaMode                     = AutoNumeric.options.formulaMode.enabled;\nconst euroPos                         = AutoNumericHelper.cloneObject(euro);\neuroPos.minimumValue                  = 0;\nconst euroNeg                         = AutoNumericHelper.cloneObject(euro);\neuroNeg.maximumValue                  = 0;\neuroNeg.negativePositiveSignPlacement = AutoNumeric.options.negativePositiveSignPlacement.prefix;\n\nconst euroSpace                            = AutoNumericHelper.cloneObject(euro);\neuroSpace.digitGroupSeparator              = AutoNumeric.options.digitGroupSeparator.normalSpace;\nconst euroSpacePos                         = AutoNumericHelper.cloneObject(euroSpace);\neuroSpacePos.minimumValue                  = 0;\nconst euroSpaceNeg                         = AutoNumericHelper.cloneObject(euroSpace);\neuroSpaceNeg.maximumValue                  = 0;\neuroSpaceNeg.negativePositiveSignPlacement = AutoNumeric.options.negativePositiveSignPlacement.prefix;\n\nconst percentageEU2dec                            = AutoNumericHelper.cloneObject(euro);\npercentageEU2dec.currencySymbol                   = AutoNumeric.options.currencySymbol.none;\npercentageEU2dec.suffixText                       = `\\u202f${AutoNumeric.options.suffixText.percentage}`;\npercentageEU2dec.wheelStep                        = 0.0001; // This targets the `rawValue`, not the formatted one\npercentageEU2dec.rawValueDivisor                  = AutoNumeric.options.rawValueDivisor.percentage;\nconst percentageEU2decPos                         = AutoNumericHelper.cloneObject(percentageEU2dec);\npercentageEU2decPos.minimumValue                  = 0;\nconst percentageEU2decNeg                         = AutoNumericHelper.cloneObject(percentageEU2dec);\npercentageEU2decNeg.maximumValue                  = 0;\npercentageEU2decNeg.negativePositiveSignPlacement = AutoNumeric.options.negativePositiveSignPlacement.prefix;\n\nconst percentageEU3dec            = AutoNumericHelper.cloneObject(percentageEU2dec);\npercentageEU3dec.decimalPlaces    = 3;\nconst percentageEU3decPos         = AutoNumericHelper.cloneObject(percentageEU2decPos);\npercentageEU3decPos.decimalPlaces = 3;\nconst percentageEU3decNeg         = AutoNumericHelper.cloneObject(percentageEU2decNeg);\npercentageEU3decNeg.decimalPlaces = 3;\n\nconst dollarF                                = AutoNumericHelper.cloneObject(dollar);\ndollarF.formulaMode                          = AutoNumeric.options.formulaMode.enabled;\nconst dollarPos                              = AutoNumericHelper.cloneObject(dollar);\ndollarPos.minimumValue                       = 0;\nconst dollarNeg                              = AutoNumericHelper.cloneObject(dollar);\ndollarNeg.maximumValue                       = 0;\ndollarNeg.negativePositiveSignPlacement      = AutoNumeric.options.negativePositiveSignPlacement.prefix;\nconst dollarNegBrackets                      = AutoNumericHelper.cloneObject(dollarNeg);\ndollarNegBrackets.negativeBracketsTypeOnBlur = AutoNumeric.options.negativeBracketsTypeOnBlur.parentheses;\n\nconst percentageUS2dec                            = AutoNumericHelper.cloneObject(dollar);\npercentageUS2dec.currencySymbol                   = AutoNumeric.options.currencySymbol.none;\npercentageUS2dec.suffixText                       = AutoNumeric.options.suffixText.percentage;\npercentageUS2dec.wheelStep                        = 0.0001;\npercentageUS2dec.rawValueDivisor                  = AutoNumeric.options.rawValueDivisor.percentage;\nconst percentageUS2decPos                         = AutoNumericHelper.cloneObject(percentageUS2dec);\npercentageUS2decPos.minimumValue                  = 0;\nconst percentageUS2decNeg                         = AutoNumericHelper.cloneObject(percentageUS2dec);\npercentageUS2decNeg.maximumValue                  = 0;\npercentageUS2decNeg.negativePositiveSignPlacement = AutoNumeric.options.negativePositiveSignPlacement.prefix;\n\nconst percentageUS3dec            = AutoNumericHelper.cloneObject(percentageUS2dec);\npercentageUS3dec.decimalPlaces    = 3;\nconst percentageUS3decPos         = AutoNumericHelper.cloneObject(percentageUS2decPos);\npercentageUS3decPos.decimalPlaces = 3;\nconst percentageUS3decNeg         = AutoNumericHelper.cloneObject(percentageUS2decNeg);\npercentageUS3decNeg.decimalPlaces = 3;\n\nconst turkish = AutoNumericHelper.cloneObject(euro);\nturkish.currencySymbol = AutoNumeric.options.currencySymbol.lira;\n\n/**\n * Predefined options for the most common languages\n */\nAutoNumeric.predefinedOptions = {\n    euro,\n    euroPos,\n    euroNeg,\n    euroSpace,\n    euroSpacePos,\n    euroSpaceNeg,\n    percentageEU2dec,\n    percentageEU2decPos,\n    percentageEU2decNeg,\n    percentageEU3dec,\n    percentageEU3decPos,\n    percentageEU3decNeg,\n    dollar,\n    dollarPos,\n    dollarNeg,\n    dollarNegBrackets,\n    percentageUS2dec,\n    percentageUS2decPos,\n    percentageUS2decNeg,\n    percentageUS3dec,\n    percentageUS3decPos,\n    percentageUS3decNeg,\n    French                      : euro, // Français\n    Spanish                     : euro, // Español\n    NorthAmerican               : dollar,\n    British                     : {\n        digitGroupSeparator          : AutoNumeric.options.digitGroupSeparator.comma,\n        decimalCharacter             : AutoNumeric.options.decimalCharacter.dot,\n        currencySymbol               : AutoNumeric.options.currencySymbol.pound,\n        currencySymbolPlacement      : AutoNumeric.options.currencySymbolPlacement.prefix,\n        negativePositiveSignPlacement: AutoNumeric.options.negativePositiveSignPlacement.right,\n    },\n    Swiss                       : { // Suisse\n        digitGroupSeparator          : AutoNumeric.options.digitGroupSeparator.apostrophe,\n        decimalCharacter             : AutoNumeric.options.decimalCharacter.dot,\n        currencySymbol               : '\\u202fCHF',\n        currencySymbolPlacement      : AutoNumeric.options.currencySymbolPlacement.suffix,\n        negativePositiveSignPlacement: AutoNumeric.options.negativePositiveSignPlacement.prefix,\n    },\n    Japanese                    : japanese, // 日本語\n    Chinese                     : japanese, // 中国語 (Chinese)\n    Brazilian                   : {\n        digitGroupSeparator          : AutoNumeric.options.digitGroupSeparator.dot,\n        decimalCharacter             : AutoNumeric.options.decimalCharacter.comma,\n        currencySymbol               : AutoNumeric.options.currencySymbol.real,\n        currencySymbolPlacement      : AutoNumeric.options.currencySymbolPlacement.prefix,\n        negativePositiveSignPlacement: AutoNumeric.options.negativePositiveSignPlacement.right,\n    },\n    Turkish                     : turkish,\n    dotDecimalCharCommaSeparator: {\n        digitGroupSeparator: AutoNumeric.options.digitGroupSeparator.comma,\n        decimalCharacter   : AutoNumeric.options.decimalCharacter.dot,\n    },\n    commaDecimalCharDotSeparator: {\n        digitGroupSeparator        : AutoNumeric.options.digitGroupSeparator.dot,\n        decimalCharacter           : AutoNumeric.options.decimalCharacter.comma,\n        decimalCharacterAlternative: AutoNumeric.options.decimalCharacterAlternative.dot,\n    },\n    integer                     : {\n        decimalPlaces: 0,\n    },\n    integerPos                  : {\n        minimumValue : AutoNumeric.options.minimumValue.zero,\n        decimalPlaces: 0,\n    },\n    integerNeg                  : {\n        maximumValue : AutoNumeric.options.maximumValue.zero,\n        decimalPlaces: 0,\n    },\n    float                       : {\n        allowDecimalPadding: AutoNumeric.options.allowDecimalPadding.never,\n    },\n    floatPos                    : {\n        allowDecimalPadding: AutoNumeric.options.allowDecimalPadding.never,\n        minimumValue       : AutoNumeric.options.minimumValue.zero,\n        maximumValue       : AutoNumeric.options.maximumValue.tenTrillions,\n    },\n    floatNeg                    : {\n        allowDecimalPadding: AutoNumeric.options.allowDecimalPadding.never,\n        minimumValue       : AutoNumeric.options.minimumValue.tenTrillions,\n        maximumValue       : AutoNumeric.options.maximumValue.zero,\n    },\n    numeric                     : {\n        digitGroupSeparator: AutoNumeric.options.digitGroupSeparator.noSeparator,\n        decimalCharacter   : AutoNumeric.options.decimalCharacter.dot,\n        currencySymbol     : AutoNumeric.options.currencySymbol.none,\n    },\n    numericPos                  : {\n        digitGroupSeparator: AutoNumeric.options.digitGroupSeparator.noSeparator,\n        decimalCharacter   : AutoNumeric.options.decimalCharacter.dot,\n        currencySymbol     : AutoNumeric.options.currencySymbol.none,\n        minimumValue       : AutoNumeric.options.minimumValue.zero,\n        maximumValue       : AutoNumeric.options.maximumValue.tenTrillions,\n    },\n    numericNeg                  : {\n        digitGroupSeparator: AutoNumeric.options.digitGroupSeparator.noSeparator,\n        decimalCharacter   : AutoNumeric.options.decimalCharacter.dot,\n        currencySymbol     : AutoNumeric.options.currencySymbol.none,\n        minimumValue       : AutoNumeric.options.minimumValue.tenTrillions,\n        maximumValue       : AutoNumeric.options.maximumValue.zero,\n    },\n};\n\nObject.getOwnPropertyNames(AutoNumeric.predefinedOptions).forEach(optionName => {\n    Object.freeze(AutoNumeric.predefinedOptions[optionName]);\n});\nObject.freeze(AutoNumeric.predefinedOptions);\nObject.defineProperty(AutoNumeric, 'predefinedOptions', { configurable: false, writable: false });\n\nexport default {};\n","/**\n * Babel + Webpack workaround for AutoNumeric\n *\n * @author Alexandre Bonneau <alexandre.bonneau@linuxfr.eu>\n * @copyright © 2023 Alexandre Bonneau\n *\n * The MIT License (http://www.opensource.org/licenses/mit-license.php)\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sub license, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport AutoNumeric from './AutoNumeric';\nimport './AutoNumericEvents';\nimport './AutoNumericOptions';\nimport './AutoNumericDefaultSettings';\nimport './AutoNumericPredefinedOptions';\n\n/* eslint no-unused-vars: 0 */\n\n/**\n * This file serve as the main entry point to the library.\n *\n * This is needed since if the Webpack entrypoint is set to `./src/AutoNumeric.js`, then the AutoNumericEvents, AutoNumericOptions, AutoNumericDefaultSettings and AutoNumericPredefinedOptions files are not included in the bundle and therefore cannot be used.\n *\n * @type {AutoNumeric}\n */\nexport default AutoNumeric;\n"]}